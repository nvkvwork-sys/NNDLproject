(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,67034,(t,r,i)=>{var s={675:function(t,r){"use strict";r.byteLength=function(t){var r=u(t),i=r[0],s=r[1];return(i+s)*3/4-s},r.toByteArray=function(t){var r,i,n=u(t),o=n[0],l=n[1],d=new a((o+l)*3/4-l),c=0,p=l>0?o-4:o;for(i=0;i<p;i+=4)r=s[t.charCodeAt(i)]<<18|s[t.charCodeAt(i+1)]<<12|s[t.charCodeAt(i+2)]<<6|s[t.charCodeAt(i+3)],d[c++]=r>>16&255,d[c++]=r>>8&255,d[c++]=255&r;return 2===l&&(r=s[t.charCodeAt(i)]<<2|s[t.charCodeAt(i+1)]>>4,d[c++]=255&r),1===l&&(r=s[t.charCodeAt(i)]<<10|s[t.charCodeAt(i+1)]<<4|s[t.charCodeAt(i+2)]>>2,d[c++]=r>>8&255,d[c++]=255&r),d},r.fromByteArray=function(t){for(var r,s=t.length,a=s%3,n=[],o=0,l=s-a;o<l;o+=16383)n.push(function(t,r,s){for(var a,n=[],o=r;o<s;o+=3)a=(t[o]<<16&0xff0000)+(t[o+1]<<8&65280)+(255&t[o+2]),n.push(i[a>>18&63]+i[a>>12&63]+i[a>>6&63]+i[63&a]);return n.join("")}(t,o,o+16383>l?l:o+16383));return 1===a?n.push(i[(r=t[s-1])>>2]+i[r<<4&63]+"=="):2===a&&n.push(i[(r=(t[s-2]<<8)+t[s-1])>>10]+i[r>>4&63]+i[r<<2&63]+"="),n.join("")};for(var i=[],s=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,l=n.length;o<l;++o)i[o]=n[o],s[n.charCodeAt(o)]=o;function u(t){var r=t.length;if(r%4>0)throw Error("Invalid string. Length must be a multiple of 4");var i=t.indexOf("=");-1===i&&(i=r);var s=i===r?0:4-i%4;return[i,s]}s[45]=62,s[95]=63},72:function(t,r,i){"use strict";var s=i(675),a=i(783),n="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function o(t){if(t>0x7fffffff)throw RangeError('The value "'+t+'" is invalid for option "size"');var r=new Uint8Array(t);return Object.setPrototypeOf(r,l.prototype),r}function l(t,r,i){if("number"==typeof t){if("string"==typeof r)throw TypeError('The "string" argument must be of type string. Received type number');return c(t)}return u(t,r,i)}function u(t,r,i){if("string"==typeof t){var s=t,a=r;if(("string"!=typeof a||""===a)&&(a="utf8"),!l.isEncoding(a))throw TypeError("Unknown encoding: "+a);var n=0|m(s,a),u=o(n),d=u.write(s,a);return d!==n&&(u=u.slice(0,d)),u}if(ArrayBuffer.isView(t))return p(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(E(t,ArrayBuffer)||t&&E(t.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(E(t,SharedArrayBuffer)||t&&E(t.buffer,SharedArrayBuffer)))return function(t,r,i){var s;if(r<0||t.byteLength<r)throw RangeError('"offset" is outside of buffer bounds');if(t.byteLength<r+(i||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(s=void 0===r&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,r):new Uint8Array(t,r,i),l.prototype),s}(t,r,i);if("number"==typeof t)throw TypeError('The "value" argument must not be of type number. Received type number');var c=t.valueOf&&t.valueOf();if(null!=c&&c!==t)return l.from(c,r,i);var f=function(t){if(l.isBuffer(t)){var r=0|h(t.length),i=o(r);return 0===i.length||t.copy(i,0,0,r),i}return void 0!==t.length?"number"!=typeof t.length||function(t){return t!=t}(t.length)?o(0):p(t):"Buffer"===t.type&&Array.isArray(t.data)?p(t.data):void 0}(t);if(f)return f;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return l.from(t[Symbol.toPrimitive]("string"),r,i);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function d(t){if("number"!=typeof t)throw TypeError('"size" argument must be of type number');if(t<0)throw RangeError('The value "'+t+'" is invalid for option "size"')}function c(t){return d(t),o(t<0?0:0|h(t))}function p(t){for(var r=t.length<0?0:0|h(t.length),i=o(r),s=0;s<r;s+=1)i[s]=255&t[s];return i}r.Buffer=l,r.SlowBuffer=function(t){return+t!=t&&(t=0),l.alloc(+t)},r.INSPECT_MAX_BYTES=50,r.kMaxLength=0x7fffffff,l.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),r={foo:function(){return 42}};return Object.setPrototypeOf(r,Uint8Array.prototype),Object.setPrototypeOf(t,r),42===t.foo()}catch(t){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(t,r,i){return u(t,r,i)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(t,r,i){return(d(t),t<=0)?o(t):void 0!==r?"string"==typeof i?o(t).fill(r,i):o(t).fill(r):o(t)},l.allocUnsafe=function(t){return c(t)},l.allocUnsafeSlow=function(t){return c(t)};function h(t){if(t>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|t}function m(t,r){if(l.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||E(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var i=t.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===i)return 0;for(var a=!1;;)switch(r){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return $(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return S(t).length;default:if(a)return s?-1:$(t).length;r=(""+r).toLowerCase(),a=!0}}function f(t,r,i){var a,n,o,l=!1;if((void 0===r||r<0)&&(r=0),r>this.length||((void 0===i||i>this.length)&&(i=this.length),i<=0||(i>>>=0)<=(r>>>=0)))return"";for(t||(t="utf8");;)switch(t){case"hex":return function(t,r,i){var s=t.length;(!r||r<0)&&(r=0),(!i||i<0||i>s)&&(i=s);for(var a="",n=r;n<i;++n)a+=F[t[n]];return a}(this,r,i);case"utf8":case"utf-8":return b(this,r,i);case"ascii":return function(t,r,i){var s="";i=Math.min(t.length,i);for(var a=r;a<i;++a)s+=String.fromCharCode(127&t[a]);return s}(this,r,i);case"latin1":case"binary":return function(t,r,i){var s="";i=Math.min(t.length,i);for(var a=r;a<i;++a)s+=String.fromCharCode(t[a]);return s}(this,r,i);case"base64":return a=this,n=r,o=i,0===n&&o===a.length?s.fromByteArray(a):s.fromByteArray(a.slice(n,o));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(t,r,i){for(var s=t.slice(r,i),a="",n=0;n<s.length;n+=2)a+=String.fromCharCode(s[n]+256*s[n+1]);return a}(this,r,i);default:if(l)throw TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),l=!0}}function g(t,r,i){var s=t[r];t[r]=t[i],t[i]=s}function _(t,r,i,s,a){var n;if(0===t.length)return -1;if("string"==typeof i?(s=i,i=0):i>0x7fffffff?i=0x7fffffff:i<-0x80000000&&(i=-0x80000000),(n=i*=1)!=n&&(i=a?0:t.length-1),i<0&&(i=t.length+i),i>=t.length)if(a)return -1;else i=t.length-1;else if(i<0)if(!a)return -1;else i=0;if("string"==typeof r&&(r=l.from(r,s)),l.isBuffer(r))return 0===r.length?-1:y(t,r,i,s,a);if("number"==typeof r){if(r&=255,"function"==typeof Uint8Array.prototype.indexOf)if(a)return Uint8Array.prototype.indexOf.call(t,r,i);else return Uint8Array.prototype.lastIndexOf.call(t,r,i);return y(t,[r],i,s,a)}throw TypeError("val must be string, number or Buffer")}function y(t,r,i,s,a){var n,o=1,l=t.length,u=r.length;if(void 0!==s&&("ucs2"===(s=String(s).toLowerCase())||"ucs-2"===s||"utf16le"===s||"utf-16le"===s)){if(t.length<2||r.length<2)return -1;o=2,l/=2,u/=2,i/=2}function d(t,r){return 1===o?t[r]:t.readUInt16BE(r*o)}if(a){var c=-1;for(n=i;n<l;n++)if(d(t,n)===d(r,-1===c?0:n-c)){if(-1===c&&(c=n),n-c+1===u)return c*o}else -1!==c&&(n-=n-c),c=-1}else for(i+u>l&&(i=l-u),n=i;n>=0;n--){for(var p=!0,h=0;h<u;h++)if(d(t,n+h)!==d(r,h)){p=!1;break}if(p)return n}return -1}l.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==l.prototype},l.compare=function(t,r){if(E(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),E(r,Uint8Array)&&(r=l.from(r,r.offset,r.byteLength)),!l.isBuffer(t)||!l.isBuffer(r))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===r)return 0;for(var i=t.length,s=r.length,a=0,n=Math.min(i,s);a<n;++a)if(t[a]!==r[a]){i=t[a],s=r[a];break}return i<s?-1:+(s<i)},l.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(t,r){if(!Array.isArray(t))throw TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return l.alloc(0);if(void 0===r)for(i=0,r=0;i<t.length;++i)r+=t[i].length;var i,s=l.allocUnsafe(r),a=0;for(i=0;i<t.length;++i){var n=t[i];if(E(n,Uint8Array)&&(n=l.from(n)),!l.isBuffer(n))throw TypeError('"list" argument must be an Array of Buffers');n.copy(s,a),a+=n.length}return s},l.byteLength=m,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var r=0;r<t;r+=2)g(this,r,r+1);return this},l.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var r=0;r<t;r+=4)g(this,r,r+3),g(this,r+1,r+2);return this},l.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var r=0;r<t;r+=8)g(this,r,r+7),g(this,r+1,r+6),g(this,r+2,r+5),g(this,r+3,r+4);return this},l.prototype.toString=function(){var t=this.length;return 0===t?"":0==arguments.length?b(this,0,t):f.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(t){if(!l.isBuffer(t))throw TypeError("Argument must be a Buffer");return this===t||0===l.compare(this,t)},l.prototype.inspect=function(){var t="",i=r.INSPECT_MAX_BYTES;return t=this.toString("hex",0,i).replace(/(.{2})/g,"$1 ").trim(),this.length>i&&(t+=" ... "),"<Buffer "+t+">"},n&&(l.prototype[n]=l.prototype.inspect),l.prototype.compare=function(t,r,i,s,a){if(E(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(t))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===r&&(r=0),void 0===i&&(i=t?t.length:0),void 0===s&&(s=0),void 0===a&&(a=this.length),r<0||i>t.length||s<0||a>this.length)throw RangeError("out of range index");if(s>=a&&r>=i)return 0;if(s>=a)return -1;if(r>=i)return 1;if(r>>>=0,i>>>=0,s>>>=0,a>>>=0,this===t)return 0;for(var n=a-s,o=i-r,u=Math.min(n,o),d=this.slice(s,a),c=t.slice(r,i),p=0;p<u;++p)if(d[p]!==c[p]){n=d[p],o=c[p];break}return n<o?-1:+(o<n)},l.prototype.includes=function(t,r,i){return -1!==this.indexOf(t,r,i)},l.prototype.indexOf=function(t,r,i){return _(this,t,r,i,!0)},l.prototype.lastIndexOf=function(t,r,i){return _(this,t,r,i,!1)};function b(t,r,i){i=Math.min(t.length,i);for(var s=[],a=r;a<i;){var n,o,l,u,d=t[a],c=null,p=d>239?4:d>223?3:d>191?2:1;if(a+p<=i)switch(p){case 1:d<128&&(c=d);break;case 2:(192&(n=t[a+1]))==128&&(u=(31&d)<<6|63&n)>127&&(c=u);break;case 3:n=t[a+1],o=t[a+2],(192&n)==128&&(192&o)==128&&(u=(15&d)<<12|(63&n)<<6|63&o)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:n=t[a+1],o=t[a+2],l=t[a+3],(192&n)==128&&(192&o)==128&&(192&l)==128&&(u=(15&d)<<18|(63&n)<<12|(63&o)<<6|63&l)>65535&&u<1114112&&(c=u)}null===c?(c=65533,p=1):c>65535&&(c-=65536,s.push(c>>>10&1023|55296),c=56320|1023&c),s.push(c),a+=p}var h=s,m=h.length;if(m<=4096)return String.fromCharCode.apply(String,h);for(var f="",g=0;g<m;)f+=String.fromCharCode.apply(String,h.slice(g,g+=4096));return f}function w(t,r,i){if(t%1!=0||t<0)throw RangeError("offset is not uint");if(t+r>i)throw RangeError("Trying to access beyond buffer length")}function x(t,r,i,s,a,n){if(!l.isBuffer(t))throw TypeError('"buffer" argument must be a Buffer instance');if(r>a||r<n)throw RangeError('"value" argument is out of bounds');if(i+s>t.length)throw RangeError("Index out of range")}function v(t,r,i,s,a,n){if(i+s>t.length||i<0)throw RangeError("Index out of range")}function M(t,r,i,s,n){return r*=1,i>>>=0,n||v(t,r,i,4,34028234663852886e22,-34028234663852886e22),a.write(t,r,i,s,23,4),i+4}function T(t,r,i,s,n){return r*=1,i>>>=0,n||v(t,r,i,8,17976931348623157e292,-17976931348623157e292),a.write(t,r,i,s,52,8),i+8}l.prototype.write=function(t,r,i,s){if(void 0===r)s="utf8",i=this.length,r=0;else if(void 0===i&&"string"==typeof r)s=r,i=this.length,r=0;else if(isFinite(r))r>>>=0,isFinite(i)?(i>>>=0,void 0===s&&(s="utf8")):(s=i,i=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var a,n,o,l,u,d,c,p,h=this.length-r;if((void 0===i||i>h)&&(i=h),t.length>0&&(i<0||r<0)||r>this.length)throw RangeError("Attempt to write outside buffer bounds");s||(s="utf8");for(var m=!1;;)switch(s){case"hex":return function(t,r,i,s){i=Number(i)||0;var a=t.length-i;s?(s=Number(s))>a&&(s=a):s=a;var n=r.length;s>n/2&&(s=n/2);for(var o=0;o<s;++o){var l,u=parseInt(r.substr(2*o,2),16);if((l=u)!=l)break;t[i+o]=u}return o}(this,t,r,i);case"utf8":case"utf-8":return a=r,n=i,P($(t,this.length-a),this,a,n);case"ascii":return o=r,l=i,P(C(t),this,o,l);case"latin1":case"binary":return function(t,r,i,s){return P(C(r),t,i,s)}(this,t,r,i);case"base64":return u=r,d=i,P(S(t),this,u,d);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return c=r,p=i,P(function(t,r){for(var i,s,a=[],n=0;n<t.length&&!((r-=2)<0);++n)s=(i=t.charCodeAt(n))>>8,a.push(i%256),a.push(s);return a}(t,this.length-c),this,c,p);default:if(m)throw TypeError("Unknown encoding: "+s);s=(""+s).toLowerCase(),m=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},l.prototype.slice=function(t,r){var i=this.length;t=~~t,r=void 0===r?i:~~r,t<0?(t+=i)<0&&(t=0):t>i&&(t=i),r<0?(r+=i)<0&&(r=0):r>i&&(r=i),r<t&&(r=t);var s=this.subarray(t,r);return Object.setPrototypeOf(s,l.prototype),s},l.prototype.readUIntLE=function(t,r,i){t>>>=0,r>>>=0,i||w(t,r,this.length);for(var s=this[t],a=1,n=0;++n<r&&(a*=256);)s+=this[t+n]*a;return s},l.prototype.readUIntBE=function(t,r,i){t>>>=0,r>>>=0,i||w(t,r,this.length);for(var s=this[t+--r],a=1;r>0&&(a*=256);)s+=this[t+--r]*a;return s},l.prototype.readUInt8=function(t,r){return t>>>=0,r||w(t,1,this.length),this[t]},l.prototype.readUInt16LE=function(t,r){return t>>>=0,r||w(t,2,this.length),this[t]|this[t+1]<<8},l.prototype.readUInt16BE=function(t,r){return t>>>=0,r||w(t,2,this.length),this[t]<<8|this[t+1]},l.prototype.readUInt32LE=function(t,r){return t>>>=0,r||w(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+0x1000000*this[t+3]},l.prototype.readUInt32BE=function(t,r){return t>>>=0,r||w(t,4,this.length),0x1000000*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},l.prototype.readIntLE=function(t,r,i){t>>>=0,r>>>=0,i||w(t,r,this.length);for(var s=this[t],a=1,n=0;++n<r&&(a*=256);)s+=this[t+n]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*r)),s},l.prototype.readIntBE=function(t,r,i){t>>>=0,r>>>=0,i||w(t,r,this.length);for(var s=r,a=1,n=this[t+--s];s>0&&(a*=256);)n+=this[t+--s]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*r)),n},l.prototype.readInt8=function(t,r){return(t>>>=0,r||w(t,1,this.length),128&this[t])?-((255-this[t]+1)*1):this[t]},l.prototype.readInt16LE=function(t,r){t>>>=0,r||w(t,2,this.length);var i=this[t]|this[t+1]<<8;return 32768&i?0xffff0000|i:i},l.prototype.readInt16BE=function(t,r){t>>>=0,r||w(t,2,this.length);var i=this[t+1]|this[t]<<8;return 32768&i?0xffff0000|i:i},l.prototype.readInt32LE=function(t,r){return t>>>=0,r||w(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},l.prototype.readInt32BE=function(t,r){return t>>>=0,r||w(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},l.prototype.readFloatLE=function(t,r){return t>>>=0,r||w(t,4,this.length),a.read(this,t,!0,23,4)},l.prototype.readFloatBE=function(t,r){return t>>>=0,r||w(t,4,this.length),a.read(this,t,!1,23,4)},l.prototype.readDoubleLE=function(t,r){return t>>>=0,r||w(t,8,this.length),a.read(this,t,!0,52,8)},l.prototype.readDoubleBE=function(t,r){return t>>>=0,r||w(t,8,this.length),a.read(this,t,!1,52,8)},l.prototype.writeUIntLE=function(t,r,i,s){if(t*=1,r>>>=0,i>>>=0,!s){var a=Math.pow(2,8*i)-1;x(this,t,r,i,a,0)}var n=1,o=0;for(this[r]=255&t;++o<i&&(n*=256);)this[r+o]=t/n&255;return r+i},l.prototype.writeUIntBE=function(t,r,i,s){if(t*=1,r>>>=0,i>>>=0,!s){var a=Math.pow(2,8*i)-1;x(this,t,r,i,a,0)}var n=i-1,o=1;for(this[r+n]=255&t;--n>=0&&(o*=256);)this[r+n]=t/o&255;return r+i},l.prototype.writeUInt8=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,1,255,0),this[r]=255&t,r+1},l.prototype.writeUInt16LE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,2,65535,0),this[r]=255&t,this[r+1]=t>>>8,r+2},l.prototype.writeUInt16BE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,2,65535,0),this[r]=t>>>8,this[r+1]=255&t,r+2},l.prototype.writeUInt32LE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,4,0xffffffff,0),this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t,r+4},l.prototype.writeUInt32BE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,4,0xffffffff,0),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},l.prototype.writeIntLE=function(t,r,i,s){if(t*=1,r>>>=0,!s){var a=Math.pow(2,8*i-1);x(this,t,r,i,a-1,-a)}var n=0,o=1,l=0;for(this[r]=255&t;++n<i&&(o*=256);)t<0&&0===l&&0!==this[r+n-1]&&(l=1),this[r+n]=(t/o|0)-l&255;return r+i},l.prototype.writeIntBE=function(t,r,i,s){if(t*=1,r>>>=0,!s){var a=Math.pow(2,8*i-1);x(this,t,r,i,a-1,-a)}var n=i-1,o=1,l=0;for(this[r+n]=255&t;--n>=0&&(o*=256);)t<0&&0===l&&0!==this[r+n+1]&&(l=1),this[r+n]=(t/o|0)-l&255;return r+i},l.prototype.writeInt8=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,1,127,-128),t<0&&(t=255+t+1),this[r]=255&t,r+1},l.prototype.writeInt16LE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,2,32767,-32768),this[r]=255&t,this[r+1]=t>>>8,r+2},l.prototype.writeInt16BE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,2,32767,-32768),this[r]=t>>>8,this[r+1]=255&t,r+2},l.prototype.writeInt32LE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,4,0x7fffffff,-0x80000000),this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24,r+4},l.prototype.writeInt32BE=function(t,r,i){return t*=1,r>>>=0,i||x(this,t,r,4,0x7fffffff,-0x80000000),t<0&&(t=0xffffffff+t+1),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},l.prototype.writeFloatLE=function(t,r,i){return M(this,t,r,!0,i)},l.prototype.writeFloatBE=function(t,r,i){return M(this,t,r,!1,i)},l.prototype.writeDoubleLE=function(t,r,i){return T(this,t,r,!0,i)},l.prototype.writeDoubleBE=function(t,r,i){return T(this,t,r,!1,i)},l.prototype.copy=function(t,r,i,s){if(!l.isBuffer(t))throw TypeError("argument should be a Buffer");if(i||(i=0),s||0===s||(s=this.length),r>=t.length&&(r=t.length),r||(r=0),s>0&&s<i&&(s=i),s===i||0===t.length||0===this.length)return 0;if(r<0)throw RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw RangeError("Index out of range");if(s<0)throw RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),t.length-r<s-i&&(s=t.length-r+i);var a=s-i;if(this===t&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(r,i,s);else if(this===t&&i<r&&r<s)for(var n=a-1;n>=0;--n)t[n+r]=this[n+i];else Uint8Array.prototype.set.call(t,this.subarray(i,s),r);return a},l.prototype.fill=function(t,r,i,s){if("string"==typeof t){if("string"==typeof r?(s=r,r=0,i=this.length):"string"==typeof i&&(s=i,i=this.length),void 0!==s&&"string"!=typeof s)throw TypeError("encoding must be a string");if("string"==typeof s&&!l.isEncoding(s))throw TypeError("Unknown encoding: "+s);if(1===t.length){var a,n=t.charCodeAt(0);("utf8"===s&&n<128||"latin1"===s)&&(t=n)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(r<0||this.length<r||this.length<i)throw RangeError("Out of range index");if(i<=r)return this;if(r>>>=0,i=void 0===i?this.length:i>>>0,t||(t=0),"number"==typeof t)for(a=r;a<i;++a)this[a]=t;else{var o=l.isBuffer(t)?t:l.from(t,s),u=o.length;if(0===u)throw TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<i-r;++a)this[a+r]=o[a%u]}return this};var k=/[^+/0-9A-Za-z-_]/g;function $(t,r){r=r||1/0;for(var i,s=t.length,a=null,n=[],o=0;o<s;++o){if((i=t.charCodeAt(o))>55295&&i<57344){if(!a){if(i>56319||o+1===s){(r-=3)>-1&&n.push(239,191,189);continue}a=i;continue}if(i<56320){(r-=3)>-1&&n.push(239,191,189),a=i;continue}i=(a-55296<<10|i-56320)+65536}else a&&(r-=3)>-1&&n.push(239,191,189);if(a=null,i<128){if((r-=1)<0)break;n.push(i)}else if(i<2048){if((r-=2)<0)break;n.push(i>>6|192,63&i|128)}else if(i<65536){if((r-=3)<0)break;n.push(i>>12|224,i>>6&63|128,63&i|128)}else if(i<1114112){if((r-=4)<0)break;n.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}else throw Error("Invalid code point")}return n}function C(t){for(var r=[],i=0;i<t.length;++i)r.push(255&t.charCodeAt(i));return r}function S(t){return s.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(k,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function P(t,r,i,s){for(var a=0;a<s&&!(a+i>=r.length)&&!(a>=t.length);++a)r[a+i]=t[a];return a}function E(t,r){return t instanceof r||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===r.name}var F=function(){for(var t="0123456789abcdef",r=Array(256),i=0;i<16;++i)for(var s=16*i,a=0;a<16;++a)r[s+a]=t[i]+t[a];return r}()},783:function(t,r){r.read=function(t,r,i,s,a){var n,o,l=8*a-s-1,u=(1<<l)-1,d=u>>1,c=-7,p=i?a-1:0,h=i?-1:1,m=t[r+p];for(p+=h,n=m&(1<<-c)-1,m>>=-c,c+=l;c>0;n=256*n+t[r+p],p+=h,c-=8);for(o=n&(1<<-c)-1,n>>=-c,c+=s;c>0;o=256*o+t[r+p],p+=h,c-=8);if(0===n)n=1-d;else{if(n===u)return o?NaN:1/0*(m?-1:1);o+=Math.pow(2,s),n-=d}return(m?-1:1)*o*Math.pow(2,n-s)},r.write=function(t,r,i,s,a,n){var o,l,u,d=8*n-a-1,c=(1<<d)-1,p=c>>1,h=5960464477539062e-23*(23===a),m=s?0:n-1,f=s?1:-1,g=+(r<0||0===r&&1/r<0);for(isNaN(r=Math.abs(r))||r===1/0?(l=+!!isNaN(r),o=c):(o=Math.floor(Math.log(r)/Math.LN2),r*(u=Math.pow(2,-o))<1&&(o--,u*=2),o+p>=1?r+=h/u:r+=h*Math.pow(2,1-p),r*u>=2&&(o++,u/=2),o+p>=c?(l=0,o=c):o+p>=1?(l=(r*u-1)*Math.pow(2,a),o+=p):(l=r*Math.pow(2,p-1)*Math.pow(2,a),o=0));a>=8;t[i+m]=255&l,m+=f,l/=256,a-=8);for(o=o<<a|l,d+=a;d>0;t[i+m]=255&o,m+=f,o/=256,d-=8);t[i+m-f]|=128*g}}},a={};function n(t){var r=a[t];if(void 0!==r)return r.exports;var i=a[t]={exports:{}},o=!0;try{s[t](i,i.exports,n),o=!1}finally{o&&delete a[t]}return i.exports}n.ab="/ROOT/node_modules/next/dist/compiled/buffer/",r.exports=n(72)},37811,t=>{t.v("/_next/static/media/ort-wasm-simd-threaded.jsep.232c7845.wasm")},49443,t=>{t.v("/_next/static/media/ort.bundle.min.b4209e00.mjs")},31713,t=>{"use strict";var r,i,s,a,n,o,l,u,d,c,p,h,m,f,g,_,y,b,w,x,v,M,T,k,$=t.i(43476),C=t.i(71645),S=t.i(47167),P=t.i(67034);let E=new Map,F=[],A=(t,r,i)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let s=E.get(t);if(void 0===s)E.set(t,{backend:r,priority:i});else if(s.priority>i)return;else if(s.priority===i&&s.backend!==r)throw Error(`cannot register backend "${t}" using priority ${i}`);if(i>=0){let r=F.indexOf(t);-1!==r&&F.splice(r,1);for(let r=0;r<F.length;r++)if(E.get(F[r]).priority<=i)return void F.splice(r,0,t);F.push(t)}return}throw TypeError("not a valid backend")},I=async t=>{let r=E.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;{if(r.aborted)return r.error;let i=!!r.initPromise;try{return i||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return i||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},z=async t=>{let r,i=t.executionProviders||[],s=i.map(t=>"string"==typeof t?t:t.name),a=0===s.length?F:s,n=[],o=new Set;for(let t of a){let i=await I(t);"string"==typeof i?n.push({name:t,err:i}):(r||(r=i),r===i&&o.add(t))}if(!r)throw Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of n)s.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let l=i.filter(t=>o.has("string"==typeof t?t:t.name));return[r,new Proxy(t,{get:(t,r)=>"executionProviders"===r?l:Reflect.get(t,r)})]};t.s([],83569);let L="warning",O={wasm:{},webgl:{},webgpu:{},versions:{common:"1.21.0"},set logLevel(value){if(void 0===value)return;if("string"!=typeof value||-1===["verbose","info","warning","error","fatal"].indexOf(value))throw Error(`Unsupported logging level: ${value}`);L=value},get logLevel(){return L}};Object.defineProperty(O,"logLevel",{enumerable:!0}),t.s(["env",0,O],15346);let B=(t,r)=>{let i,s;if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:a,width:n}=r,o=r.norm??{mean:255,bias:0};i="number"==typeof o.mean?[o.mean,o.mean,o.mean,o.mean]:[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],s="number"==typeof o.bias?[o.bias,o.bias,o.bias,o.bias]:[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let l=void 0!==r.format?r.format:"RGBA",u=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",d=a*n,c=new Float32Array("RGBA"===u?4*d:3*d),p=4,h=0,m=1,f=2,g=3,_=0,y=d,b=2*d,w=-1;"RGB"===l&&(p=3,h=0,m=1,f=2,g=-1),"RGBA"===u?w=3*d:"RBG"===u?(_=0,b=d,y=2*d):"BGR"===u&&(b=0,y=d,_=2*d);for(let r=0;r<d;r++,h+=p,f+=p,m+=p,g+=p)c[_++]=(t[h]+s[0])/i[0],c[y++]=(t[m]+s[1])/i[1],c[b++]=(t[f]+s[2])/i[2],-1!==w&&-1!==g&&(c[w++]=(t[g]+s[3])/i[3]);return"RGBA"===u?new V("float32",c,[1,4,a,n]):new V("float32",c,[1,3,a,n])},D=async(t,r)=>{let i,s="undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,a="undefined"!=typeof ImageData&&t instanceof ImageData,n="undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap,o="string"==typeof t,l=r??{},u=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},d=t=>"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(s){let s=u();s.width=t.width,s.height=t.height;let a=d(s);if(null!=a){let s=t.height,n=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(s=r.resizedHeight,n=r.resizedWidth),void 0!==r){if(l=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=s,l.width=n}else l.tensorFormat="RGBA",l.height=s,l.width=n;a.drawImage(t,0,0),i=a.getImageData(0,0,n,s).data}else throw Error("Can not access image data")}else if(a){let s,a;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(s=r.resizedHeight,a=r.resizedWidth):(s=t.height,a=t.width),void 0!==r&&(l=r),l.format="RGBA",l.height=s,l.width=a,void 0!==r){let r=u();r.width=a,r.height=s;let n=d(r);if(null!=n)n.putImageData(t,0,0),i=n.getImageData(0,0,a,s).data;else throw Error("Can not access image data")}else i=t.data}else if(n){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let s=u();s.width=t.width,s.height=t.height;let a=d(s);if(null!=a){let r=t.height,s=t.width;return a.drawImage(t,0,0,s,r),i=a.getImageData(0,0,s,r).data,l.height=r,l.width=s,B(i,l)}throw Error("Can not access image data")}else if(o)return new Promise((r,i)=>{let s=u(),a=d(s);if(!t||!a)return i();let n=new Image;n.crossOrigin="Anonymous",n.src=t,n.onload=()=>{s.width=n.width,s.height=n.height,a.drawImage(n,0,0,s.width,s.height);let t=a.getImageData(0,0,s.width,s.height);l.height=s.height,l.width=s.width,r(B(t.data,l))}});else throw Error("Input data provided is not supported - aborted tensor creation");if(void 0!==i)return B(i,l);throw Error("Input data provided is not supported - aborted tensor creation")},N=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),j=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),R=!1;class V{constructor(t,r,i){let s,a;if((()=>{if(!R){R=!0;let t="undefined"!=typeof BigInt64Array&&BigInt64Array.from,r="undefined"!=typeof BigUint64Array&&BigUint64Array.from,i=globalThis.Float16Array,s=void 0!==i&&i.from;t&&(N.set("int64",BigInt64Array),j.set(BigInt64Array,"int64")),r&&(N.set("uint64",BigUint64Array),j.set(BigUint64Array,"uint64")),s?(N.set("float16",i),j.set(i,"float16")):N.set("float16",Uint16Array)}})(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,s=t.type,a=t.dims,t.location){case"cpu-pinned":{const r=N.get(s);if(!r)throw TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==s)throw TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==s&&"float16"!==s&&"int32"!==s&&"int64"!==s&&"uint32"!==s&&"uint8"!==s&&"bool"!==s&&"uint4"!==s&&"int4"!==s)throw TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==s&&"float16"!==s&&"int32"!==s&&"int64"!==s&&"uint32"!==s&&"uint64"!==s&&"int8"!==s&&"uint8"!==s&&"bool"!==s&&"uint4"!==s&&"int4"!==s)throw TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let n,o;if("string"==typeof t)if(s=t,o=i,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");n=r}else{const i=N.get(t);if(void 0===i)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r))if("float16"===t&&i===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${i.name} as data.`);else n="uint64"===t||"int64"===t?i.from(r,BigInt):i.from(r);else if(r instanceof i)n=r;else if(r instanceof Uint8ClampedArray)if("uint8"===t)n=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if("float16"===t&&r instanceof Uint16Array&&i!==Uint16Array)n=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw TypeError(`A ${s} tensor's data must be type of ${i}`)}else if(o=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");const r=typeof t[0];if("string"===r)s="string",n=t;else if("boolean"===r)s="bool",n=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)s="uint8",n=Uint8Array.from(t);else{const r=j.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);s=r,n=t}if(void 0===o)o=[n.length];else if(!Array.isArray(o))throw TypeError("A tensor's dims must be a number array");a=o,this.cpuData=n,this.dataLocation="cpu"}const n=(t=>{let r=1;for(let i=0;i<t.length;i++){let s=t[i];if("number"!=typeof s||!Number.isSafeInteger(s))throw TypeError(`dims[${i}] must be an integer, got: ${s}`);if(s<0)throw RangeError(`dims[${i}] must be a non-negative integer, got: ${s}`);r*=s}return r})(a);if(this.cpuData&&n!==this.cpuData.length)if(("uint4"===s||"int4"===s)&&Math.ceil(n/2)===this.cpuData.length);else throw Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=a,this.size=n}static async fromImage(t,r){return D(t,r)}static fromTexture(t,r){return((t,r)=>{let{width:i,height:s,download:a,dispose:n}=r;return new V({location:"texture",type:"float32",texture:t,dims:[1,s,i,4],download:a,dispose:n})})(t,r)}static fromGpuBuffer(t,r){return((t,r)=>{let{dataType:i,dims:s,download:a,dispose:n}=r;return new V({location:"gpu-buffer",type:i??"float32",gpuBuffer:t,dims:s,download:a,dispose:n})})(t,r)}static fromMLTensor(t,r){return((t,r)=>{let{dataType:i,dims:s,download:a,dispose:n}=r;return new V({location:"ml-tensor",type:i??"float32",mlTensor:t,dims:s,download:a,dispose:n})})(t,r)}static fromPinnedBuffer(t,r,i){return new V({location:"cpu-pinned",type:t,data:r,dims:i??[r.length]})}toDataURL(t){return((t,r)=>{let i="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=t.dims[3],i.height=t.dims[2];let s=i.getContext("2d");if(null!=s){let a,n,o,l;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[3]):(a=t.dims[3],n=t.dims[2]);let u=r?.format!==void 0?r.format:"RGB",d=r?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=n*a,p=0,h=c,m=2*c,f=-1;"RGBA"===u?(p=0,h=c,m=2*c,f=3*c):"RGB"===u?(p=0,h=c,m=2*c):"RBG"===u&&(p=0,m=c,h=2*c);for(let r=0;r<n;r++)for(let i=0;i<a;i++)s.fillStyle="rgba("+(t.data[p++]-l[0])*o[0]+","+(t.data[h++]-l[1])*o[1]+","+(t.data[m++]-l[2])*o[2]+","+(-1===f?255:(t.data[f++]-l[3])*o[3])+")",s.fillRect(i,r,1,1);if("toDataURL"in i)return i.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")})(this,t)}toImageData(t){return((t,r)=>{let i,s="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null!=s){let a,n,o,l,u;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[1],o=t.dims[3]):(a=t.dims[3],n=t.dims[2],o=t.dims[1]);let d=void 0!==r&&void 0!==r.format?r.format:"RGB",c=r?.norm;void 0===c||void 0===c.mean?l=[255,255,255,255]:"number"==typeof c.mean?l=[c.mean,c.mean,c.mean,c.mean]:(l=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(l[3]=c.mean[3])),void 0===c||void 0===c.bias?u=[0,0,0,0]:"number"==typeof c.bias?u=[c.bias,c.bias,c.bias,c.bias]:(u=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(u[3]=c.bias[3]));let p=n*a;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,m=1,f=2,g=3,_=0,y=p,b=2*p,w=-1;"RGBA"===d?(_=0,y=p,b=2*p,w=3*p):"RGB"===d?(_=0,y=p,b=2*p):"RBG"===d&&(_=0,b=p,y=2*p),i=s.createImageData(a,n);for(let r=0;r<n*a;h+=4,m+=4,f+=4,g+=4,r++)i.data[h]=(t.data[_++]-u[0])*l[0],i.data[m]=(t.data[y++]-u[1])*l[1],i.data[f]=(t.data[b++]-u[2])*l[2],i.data[g]=-1===w?255:(t.data[w++]-u[3])*l[3]}else throw Error("Can not access image data");return i})(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");switch(this.location){case"cpu":return new V(this.type,this.data,t);case"cpu-pinned":return new V({location:"cpu-pinned",data:this.data,type:this.type,dims:t});case"texture":return new V({location:"texture",texture:this.texture,type:this.type,dims:t});case"gpu-buffer":return new V({location:"gpu-buffer",gpuBuffer:this.gpuBuffer,type:this.type,dims:t});case"ml-tensor":return new V({location:"ml-tensor",mlTensor:this.mlTensor,type:this.type,dims:t});default:throw Error(`tensorReshape: tensor location ${this.location} is not supported`)}}}t.s(["Tensor",0,V],94179);let G=(t,r)=>{(void 0===O.trace?O.wasm.trace:O.trace)&&console.timeStamp(`${t}::ORT::${r}`)},U=(t,r)=>{let i=Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let a=0;a<i.length;a++){if(s&&!i[a].includes("TRACE_FUNC")){let s=`FUNC_${t}::${i[a].trim().split(" ")[1]}`;r&&(s+=`::${r}`),G("CPU",s);return}i[a].includes("TRACE_FUNC")&&(s=!0)}},q=t=>{(void 0===O.trace?O.wasm.trace:O.trace)&&U("BEGIN",t)},W=t=>{(void 0===O.trace?O.wasm.trace:O.trace)&&U("END",t)};t.s(["TRACE",0,G,"TRACE_FUNC_BEGIN",0,q,"TRACE_FUNC_END",0,W],68890);class H{constructor(t){this.handler=t}async run(t,r,i){q();let s={},a={};if("object"!=typeof t||null===t||t instanceof V||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let n=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof V)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(n=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);s[t]=null}if("object"==typeof i&&null!==i)a=i;else if(void 0!==i)throw TypeError("'options' must be an object.")}else{let t=!1,o=Object.getOwnPropertyNames(r);for(let i of this.outputNames)if(-1!==o.indexOf(i)){let a=r[i];(null===a||a instanceof V)&&(t=!0,n=!1,s[i]=a)}if(t){if("object"==typeof i&&null!==i)a=i;else if(void 0!==i)throw TypeError("'options' must be an object.")}else a=r}}else if(void 0!==r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(void 0===t[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(n)for(let t of this.outputNames)s[t]=null;let o=await this.handler.run(t,s,a),l={};for(let t in o)if(Object.hasOwnProperty.call(o,t)){let r=o[t];r instanceof V?l[t]=r:l[t]=new V(r.type,r.data,r.dims)}return W(),l}async release(){return this.handler.dispose()}static async create(t,r,i,s){let a;q();let n={};if("string"==typeof t){if(a=t,"object"==typeof r&&null!==r)n=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,"object"==typeof r&&null!==r)n=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer){let o=0,l=t.byteLength;if("object"==typeof r&&null!==r)n=r;else if("number"==typeof r){if(!Number.isSafeInteger(o=r))throw RangeError("'byteOffset' must be an integer.");if(o<0||o>=t.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${t.byteLength}).`);if(l=t.byteLength-o,"number"==typeof i){if(!Number.isSafeInteger(l=i))throw RangeError("'byteLength' must be an integer.");if(l<=0||o+l>t.byteLength)throw RangeError(`'byteLength' is out of range (0, ${t.byteLength-o}].`);if("object"==typeof s&&null!==s)n=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else if(void 0!==i)throw TypeError("'byteLength' must be a number.")}else if(void 0!==r)throw TypeError("'options' must be an object.");a=new Uint8Array(t,o,l)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await z(n),u=await o.createInferenceSessionHandler(a,l);return W(),new H(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}t.s(["InferenceSession",0,H],31317),t.s([],93891),t.s([],82363),t.s([],78823),t.s([],43857),t.s([],41775),t.i(41775),t.i(83569),t.s(["registerBackend",0,A],81250),t.i(81250),t.i(15346),t.i(31317),t.i(94179),t.i(93891),t.i(82363),t.i(68890),t.i(78823),t.i(43857),t.s(["InferenceSession",0,H,"TRACE",0,G,"TRACE_FUNC_BEGIN",0,q,"TRACE_FUNC_END",0,W,"Tensor",0,V,"env",0,O,"registerBackend",0,A],22290);var K=t.i(22290);let Q={get url(){return`file://${t.P("node_modules/@huggingface/transformers/node_modules/onnxruntime-web/dist/ort.bundle.min.mjs")}`}};var X,J,Y,Z,ee,et,er,ei,es,ea,en,eo,el,eu,ed,ec,ep,eh,em,ef,eg,e_,ey,eb,ew,ex,ev,eM,eT,ek,e$,eC=Object.defineProperty,eS=Object.getOwnPropertyDescriptor,eP=Object.getOwnPropertyNames,eE=Object.prototype.hasOwnProperty,eF=t.z,eA=(t,r)=>()=>(t&&(r=t(t=0)),r),eI=(t,r)=>{for(var i in r)eC(t,i,{get:r[i],enumerable:!0})},ez=t=>((t,r,i,s)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let a of eP(r))eE.call(t,a)||a===i||eC(t,a,{get:()=>r[a],enumerable:!(s=eS(r,a))||s.enumerable});return t})(eC({},"__esModule",{value:!0}),t),eL=eA(()=>{X=new Map,J=[],Y=(t,r,i)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let s=X.get(t);if(void 0===s)X.set(t,{backend:r,priority:i});else{if(s.priority>i)return;if(s.priority===i&&s.backend!==r)throw Error(`cannot register backend "${t}" using priority ${i}`)}if(i>=0){let r=J.indexOf(t);-1!==r&&J.splice(r,1);for(let r=0;r<J.length;r++)if(X.get(J[r]).priority<=i)return void J.splice(r,0,t);J.push(t)}return}throw TypeError("not a valid backend")},Z=async t=>{let r=X.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let i=!!r.initPromise;try{return i||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return i||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},ee=async t=>{let r=t.executionProviders||[],i=r.map(t=>"string"==typeof t?t:t.name),s=0===i.length?J:i,a,n=[],o=new Set;for(let t of s){let r=await Z(t);"string"==typeof r?n.push({name:t,err:r}):(a||(a=r),a===r&&o.add(t))}if(!a)throw Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of n)i.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let l=r.filter(t=>o.has("string"==typeof t?t:t.name));return[a,new Proxy(t,{get:(t,r)=>"executionProviders"===r?l:Reflect.get(t,r)})]}}),eO=eA(()=>{eL()}),eB=eA(()=>{et="1.22.0-dev.20250409-89f8206ba4"}),eD=eA(()=>{eB(),er="warning",Object.defineProperty(ei={wasm:{},webgl:{},webgpu:{},versions:{common:et},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw Error(`Unsupported logging level: ${e}`);er=e}},get logLevel(){return er}},"logLevel",{enumerable:!0})}),eN=eA(()=>{eD(),es=ei}),ej=eA(()=>{ea=(t,r)=>{let i="u">typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);i.width=t.dims[3],i.height=t.dims[2];let s=i.getContext("2d");if(null!=s){let a,n;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[3]):(a=t.dims[3],n=t.dims[2]);let o=r?.format!==void 0?r.format:"RGB",l=r?.norm,u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],0],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));let c=n*a,p=0,h=c,m=2*c,f=-1;"RGBA"===o?(p=0,h=c,m=2*c,f=3*c):"RGB"===o?(p=0,h=c,m=2*c):"RBG"===o&&(p=0,m=c,h=2*c);for(let r=0;r<n;r++)for(let i=0;i<a;i++)s.fillStyle="rgba("+(t.data[p++]-d[0])*u[0]+","+(t.data[h++]-d[1])*u[1]+","+(t.data[m++]-d[2])*u[2]+","+(-1===f?255:(t.data[f++]-d[3])*u[3])+")",s.fillRect(i,r,1,1);if("toDataURL"in i)return i.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},en=(t,r)=>{let i="u">typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(null!=i){let a,n,o;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[1],o=t.dims[3]):(a=t.dims[3],n=t.dims[2],o=t.dims[1]);let l=void 0!==r&&void 0!==r.format?r.format:"RGB",u=r?.norm,d,c;void 0===u||void 0===u.mean?d=[255,255,255,255]:"number"==typeof u.mean?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(d[3]=u.mean[3])),void 0===u||void 0===u.bias?c=[0,0,0,0]:"number"==typeof u.bias?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(c[3]=u.bias[3]));let p=n*a;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,m=1,f=2,g=3,_=0,y=p,b=2*p,w=-1;"RGBA"===l?(_=0,y=p,b=2*p,w=3*p):"RGB"===l?(_=0,y=p,b=2*p):"RBG"===l&&(_=0,b=p,y=2*p),s=i.createImageData(a,n);for(let r=0;r<n*a;h+=4,m+=4,f+=4,g+=4,r++)s.data[h]=(t.data[_++]-c[0])*d[0],s.data[m]=(t.data[y++]-c[1])*d[1],s.data[f]=(t.data[b++]-c[2])*d[2],s.data[g]=-1===w?255:(t.data[w++]-c[3])*d[3]}else throw Error("Can not access image data");return s}}),eR=eA(()=>{eU(),eo=(t,r)=>{if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:i,width:s}=r,a=r.norm??{mean:255,bias:0},n,o;n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],o="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let l=void 0!==r.format?r.format:"RGBA",u=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",d=i*s,c=new Float32Array("RGBA"===u?4*d:3*d),p=4,h=0,m=1,f=2,g=3,_=0,y=d,b=2*d,w=-1;"RGB"===l&&(p=3,h=0,m=1,f=2,g=-1),"RGBA"===u?w=3*d:"RBG"===u?(_=0,b=d,y=2*d):"BGR"===u&&(b=0,y=d,_=2*d);for(let r=0;r<d;r++,h+=p,f+=p,m+=p,g+=p)c[_++]=(t[h]+o[0])/n[0],c[y++]=(t[m]+o[1])/n[1],c[b++]=(t[f]+o[2])/n[2],-1!==w&&-1!==g&&(c[w++]=(t[g]+o[3])/n[3]);return"RGBA"===u?new eb("float32",c,[1,4,i,s]):new eb("float32",c,[1,3,i,s])},el=async(t,r)=>{let i="u">typeof HTMLImageElement&&t instanceof HTMLImageElement,s="u">typeof ImageData&&t instanceof ImageData,a="u">typeof ImageBitmap&&t instanceof ImageBitmap,n="string"==typeof t,o,l=r??{},u=()=>{if("u">typeof document)return document.createElement("canvas");if("u">typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},d=t=>"u">typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(i){let i=u();i.width=t.width,i.height=t.height;let s=d(i);if(null!=s){let i=t.height,a=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(i=r.resizedHeight,a=r.resizedWidth),void 0!==r){if(l=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=i,l.width=a}else l.tensorFormat="RGBA",l.height=i,l.width=a;s.drawImage(t,0,0),o=s.getImageData(0,0,a,i).data}else throw Error("Can not access image data")}else if(s){let i,s;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(i=r.resizedHeight,s=r.resizedWidth):(i=t.height,s=t.width),void 0!==r&&(l=r),l.format="RGBA",l.height=i,l.width=s,void 0!==r){let r=u();r.width=s,r.height=i;let a=d(r);if(null!=a)a.putImageData(t,0,0),o=a.getImageData(0,0,s,i).data;else throw Error("Can not access image data")}else o=t.data}else if(a){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let i=u();i.width=t.width,i.height=t.height;let s=d(i);if(null!=s){let r=t.height,i=t.width;return s.drawImage(t,0,0,i,r),o=s.getImageData(0,0,i,r).data,l.height=r,l.width=i,eo(o,l)}throw Error("Can not access image data")}else{if(n)return new Promise((r,i)=>{let s=u(),a=d(s);if(!t||!a)return i();let n=new Image;n.crossOrigin="Anonymous",n.src=t,n.onload=()=>{s.width=n.width,s.height=n.height,a.drawImage(n,0,0,s.width,s.height);let t=a.getImageData(0,0,s.width,s.height);l.height=s.height,l.width=s.width,r(eo(t.data,l))}});throw Error("Input data provided is not supported - aborted tensor creation")}if(void 0!==o)return eo(o,l);throw Error("Input data provided is not supported - aborted tensor creation")},eu=(t,r)=>{let{width:i,height:s,download:a,dispose:n}=r;return new eb({location:"texture",type:"float32",texture:t,dims:[1,s,i,4],download:a,dispose:n})},ed=(t,r)=>{let{dataType:i,dims:s,download:a,dispose:n}=r;return new eb({location:"gpu-buffer",type:i??"float32",gpuBuffer:t,dims:s,download:a,dispose:n})},ec=(t,r)=>{let{dataType:i,dims:s,download:a,dispose:n}=r;return new eb({location:"ml-tensor",type:i??"float32",mlTensor:t,dims:s,download:a,dispose:n})},ep=(t,r,i)=>new eb({location:"cpu-pinned",type:t,data:r,dims:i??[r.length]})}),eV=eA(()=>{eh=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),em=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ef=!1,eg=()=>{if(!ef){ef=!0;let t="u">typeof BigInt64Array&&BigInt64Array.from,r="u">typeof BigUint64Array&&BigUint64Array.from,i=globalThis.Float16Array,s="u">typeof i&&i.from;t&&(eh.set("int64",BigInt64Array),em.set(BigInt64Array,"int64")),r&&(eh.set("uint64",BigUint64Array),em.set(BigUint64Array,"uint64")),s?(eh.set("float16",i),em.set(i,"float16")):eh.set("float16",Uint16Array)}}}),eG=eA(()=>{eU(),e_=t=>{let r=1;for(let i=0;i<t.length;i++){let s=t[i];if("number"!=typeof s||!Number.isSafeInteger(s))throw TypeError(`dims[${i}] must be an integer, got: ${s}`);if(s<0)throw RangeError(`dims[${i}] must be a non-negative integer, got: ${s}`);r*=s}return r},ey=(t,r)=>{switch(t.location){case"cpu":return new eb(t.type,t.data,r);case"cpu-pinned":return new eb({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new eb({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new eb({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new eb({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),eU=eA(()=>{ej(),eR(),eV(),eG(),eb=class{constructor(t,r,i){let s,a;if(eg(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,s=t.type,a=t.dims,t.location){case"cpu-pinned":{let r=eh.get(s);if(!r)throw TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==s)throw TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==s&&"float16"!==s&&"int32"!==s&&"int64"!==s&&"uint32"!==s&&"uint8"!==s&&"bool"!==s&&"uint4"!==s&&"int4"!==s)throw TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==s&&"float16"!==s&&"int32"!==s&&"int64"!==s&&"uint32"!==s&&"uint64"!==s&&"int8"!==s&&"uint8"!==s&&"bool"!==s&&"uint4"!==s&&"int4"!==s)throw TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let n,o;if("string"==typeof t)if(s=t,o=i,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");n=r}else{let i=eh.get(t);if(void 0===i)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&i===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${i.name} as data.`);n="uint64"===t||"int64"===t?i.from(r,BigInt):i.from(r)}else if(r instanceof i)n=r;else if(r instanceof Uint8ClampedArray)if("uint8"===t)n=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if("float16"===t&&r instanceof Uint16Array&&i!==Uint16Array)n=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw TypeError(`A ${s} tensor's data must be type of ${i}`)}else if(o=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)s="string",n=t;else if("boolean"===r)s="bool",n=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)s="uint8",n=Uint8Array.from(t);else{let r=em.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);s=r,n=t}if(void 0===o)o=[n.length];else if(!Array.isArray(o))throw TypeError("A tensor's dims must be a number array");a=o,this.cpuData=n,this.dataLocation="cpu"}let n=e_(a);if(this.cpuData&&n!==this.cpuData.length&&("uint4"!==s&&"int4"!==s||Math.ceil(n/2)!==this.cpuData.length))throw Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=a,this.size=n}static async fromImage(t,r){return el(t,r)}static fromTexture(t,r){return eu(t,r)}static fromGpuBuffer(t,r){return ed(t,r)}static fromMLTensor(t,r){return ec(t,r)}static fromPinnedBuffer(t,r,i){return ep(t,r,i)}toDataURL(t){return ea(this,t)}toImageData(t){return en(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return ey(this,t)}}}),eq=eA(()=>{eU(),ew=eb}),eW=eA(()=>{eD(),ex=(t,r)=>{(typeof ei.trace>"u"?ei.wasm.trace:ei.trace)&&console.timeStamp(`${t}::ORT::${r}`)},ev=(t,r)=>{let i=Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let a=0;a<i.length;a++){if(s&&!i[a].includes("TRACE_FUNC")){let s=`FUNC_${t}::${i[a].trim().split(" ")[1]}`;r&&(s+=`::${r}`),ex("CPU",s);return}i[a].includes("TRACE_FUNC")&&(s=!0)}},eM=t=>{(typeof ei.trace>"u"?ei.wasm.trace:ei.trace)&&ev("BEGIN",t)},eT=t=>{(typeof ei.trace>"u"?ei.wasm.trace:ei.trace)&&ev("END",t)}}),eH=eA(()=>{eL(),eq(),eW(),ek=class t{constructor(t){this.handler=t}async run(t,r,i){eM();let s={},a={};if("object"!=typeof t||null===t||t instanceof ew||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let n=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ew)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(n=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);s[t]=null}if("object"==typeof i&&null!==i)a=i;else if("u">typeof i)throw TypeError("'options' must be an object.")}else{let t=!1,o=Object.getOwnPropertyNames(r);for(let i of this.outputNames)if(-1!==o.indexOf(i)){let a=r[i];(null===a||a instanceof ew)&&(t=!0,n=!1,s[i]=a)}if(t){if("object"==typeof i&&null!==i)a=i;else if("u">typeof i)throw TypeError("'options' must be an object.")}else a=r}}else if("u">typeof r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(typeof t[r]>"u")throw Error(`input '${r}' is missing in 'feeds'.`);if(n)for(let t of this.outputNames)s[t]=null;let o=await this.handler.run(t,s,a),l={};for(let t in o)if(Object.hasOwnProperty.call(o,t)){let r=o[t];r instanceof ew?l[t]=r:l[t]=new ew(r.type,r.data,r.dims)}return eT(),l}async release(){return this.handler.dispose()}static async create(r,i,s,a){eM();let n,o={};if("string"==typeof r){if(n=r,"object"==typeof i&&null!==i)o=i;else if("u">typeof i)throw TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,"object"==typeof i&&null!==i)o=i;else if("u">typeof i)throw TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||"u">typeof SharedArrayBuffer&&r instanceof SharedArrayBuffer){let t=0,l=r.byteLength;if("object"==typeof i&&null!==i)o=i;else if("number"==typeof i){if(!Number.isSafeInteger(t=i))throw RangeError("'byteOffset' must be an integer.");if(t<0||t>=r.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(l=r.byteLength-t,"number"==typeof s){if(!Number.isSafeInteger(l=s))throw RangeError("'byteLength' must be an integer.");if(l<=0||t+l>r.byteLength)throw RangeError(`'byteLength' is out of range (0, ${r.byteLength-t}].`);if("object"==typeof a&&null!==a)o=a;else if("u">typeof a)throw TypeError("'options' must be an object.")}else if("u">typeof s)throw TypeError("'byteLength' must be a number.")}else if("u">typeof i)throw TypeError("'options' must be an object.");n=new Uint8Array(r,t,l)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[l,u]=await ee(o),d=await l.createInferenceSessionHandler(n,u);return eT(),new t(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),eK=eA(()=>{eH(),e$=ek}),eQ=eA(()=>{}),eX=eA(()=>{}),eJ=eA(()=>{}),eY=eA(()=>{}),eZ={};eI(eZ,{InferenceSession:()=>e$,TRACE:()=>ex,TRACE_FUNC_BEGIN:()=>eM,TRACE_FUNC_END:()=>eT,Tensor:()=>ew,env:()=>es,registerBackend:()=>Y});var e0=eA(()=>{eO(),eN(),eK(),eq(),eQ(),eX(),eW(),eJ(),eY()}),e1=eA(()=>{}),e2={};eI(e2,{default:()=>e4});var e3,e4,e8=eA(()=>{oj(),a4(),a3(),(e3=globalThis.self?.name==="ort-wasm-proxy-worker")&&(self.onmessage=t=>{let{type:r,in:i}=t.data;try{switch(r){case"init-wasm":tf(i.wasm).then(()=>{oo(i).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})})},t=>{postMessage({type:r,err:t})});break;case"init-ep":{let{epName:t,env:s}=i;ol(s,t).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})});break}case"copy-from":{let{buffer:t}=i,s=oc(t);postMessage({type:r,out:s});break}case"create":{let{model:t,options:s}=i;op(t,s).then(t=>{postMessage({type:r,out:t})},t=>{postMessage({type:r,err:t})});break}case"release":oh(i),postMessage({type:r});break;case"run":{let{sessionId:t,inputIndices:s,inputs:a,outputIndices:n,options:o}=i;of(t,s,a,n,Array(n.length).fill(null),o).then(t=>{t.some(t=>"cpu"!==t[3])?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:t},o_([...a,...t]))},t=>{postMessage({type:r,err:t})});break}case"end-profiling":og(i),postMessage({type:r})}}catch(t){postMessage({type:r,err:t})}}),e4=e3?null:t=>new Worker(t??tr,{type:"module",name:"ort-wasm-proxy-worker"})}),e6={};eI(e6,{default:()=>e7});var e5,e9,e7,te,tt,tr,ti,ts,ta,tn,to,tl,tu,td,tc,tp,th,tm,tf,tg,t_,ty,tb,tw,tx,tv,tM,tT,tk,t$,tC,tS,tP,tE,tF,tA,tI,tz,tL,tO,tB,tD,tN,tj,tR,tV,tG,tU,tq,tW,tH,tK,tQ,tX,tJ,tY,tZ,t0,t1,t2,t3,t4,t8,t6,t5,t9,t7,re,rt,rr,ri,rs,ra,rn,ro,rl,ru,rd,rc,rp,rh,rm,rf,rg,r_,ry,rb,rw,rx,rv,rM,rT,rk,r$,rC,rS,rP,rE,rF,rA,rI,rz,rL,rO,rB,rD,rN,rj,rR,rV,rG,rU,rq,rW,rH,rK,rQ,rX,rJ,rY,rZ,r0,r1,r2,r3,r4,r8,r6,r5,r9,r7,ie,it,ir,ii,is,ia,io,il,iu,id,ic,ip,ih,im,ig,i_,iy,ib,iw,ix,iv,iM,iT,ik,i$,iC,iS,iP,iE,iF,iA,iI,iz,iL,iO,iB,iD,iN,ij,iR,iV,iG,iU,iq,iW,iH,iK,iQ,iX,iJ,iY,iZ,i0,i1,i2,i3,i4,i8,i6,i5,i9,i7,se,st,sr,si,ss,sa,sn,so,sl,su,sd,sc,sp,sh,sm,sf,sg,s_,sy,sb,sw,sx,sv,sM,sT,sk,s$,sC,sS,sP,sE,sF,sA,sI,sz,sL,sO,sB,sD,sN,sj,sR,sV,sG,sU,sq,sW,sH,sK,sQ,sX,sJ,sY,sZ,s0,s1,s2,s3,s4,s8,s6,s5,s9,s7,ae,at,ar,ai,as,aa,an,ao,al,au,ad,ac,ap,ah,am,af,ag,a_,ay,ab,aw,ax,av,aM,aT,ak,a$,aC,aS,aP,aE,aF,aA,aI,az,aL,aO,aB,aD,aN,aj,aR,aV,aG,aU,aq,aW,aH,aK,aQ,aX,aJ,aY,aZ,a0,a1,a2=eA(()=>{e5=Q.url,e7=e9=async function(r={}){var i,s,a=new Promise((t,r)=>{i=t,s=r}),n="object"==typeof window,o="u">typeof WorkerGlobalScope,l=o&&self.name?.startsWith("em-pthread");r.mountExternalData=(t,i)=>{t.startsWith("./")&&(t=t.substring(2)),(r.Eb||(r.Eb=new Map)).set(t,i)},r.unmountExternalData=()=>{delete r.Eb};var u=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=t=>async(...i)=>{try{if(r.Fb)throw Error("Session already started");let s=r.Fb={dc:i[0],errors:[]},a=await t(...i);if(r.Fb!==s)throw Error("Session mismatch");r.Jb?.flush();let n=s.errors;if(0<n.length){let t=await Promise.all(n);if(t=t.filter(t=>t),0<t.length)throw Error(t.join(`
`))}return a}finally{r.Fb=null}};r.jsepInit=(t,i)=>{if("webgpu"===t){[r.Jb,r.Ub,r.Yb,r.Kb,r.Xb,r.jb,r.Zb,r.ac,r.Vb,r.Wb,r.$b]=i;let t=r.Jb;r.jsepRegisterBuffer=(r,i,s,a)=>t.registerBuffer(r,i,s,a),r.jsepGetBuffer=r=>t.getBuffer(r),r.jsepCreateDownloader=(r,i,s)=>t.createDownloader(r,i,s),r.jsepOnCreateSession=r=>{t.onCreateSession(r)},r.jsepOnReleaseSession=r=>{t.onReleaseSession(r)},r.jsepOnRunStart=r=>t.onRunStart(r),r.bc=(r,i)=>{t.upload(r,i)}}else if("webnn"===t){let t=i[0];[r.nc,r.Nb,r.webnnEnsureTensor,r.Ob,r.webnnDownloadTensor]=i.slice(1),r.webnnReleaseTensorId=r.Nb,r.webnnUploadTensor=r.Ob,r.webnnOnRunStart=r=>t.onRunStart(r),r.webnnOnRunEnd=t.onRunEnd.bind(t),r.webnnRegisterMLContext=(r,i)=>{t.registerMLContext(r,i)},r.webnnOnReleaseSession=r=>{t.onReleaseSession(r)},r.webnnCreateMLTensorDownloader=(r,i)=>t.createMLTensorDownloader(r,i),r.webnnRegisterMLTensor=(r,i,s,a)=>t.registerMLTensor(r,i,s,a),r.webnnCreateMLContext=r=>t.createMLContext(r),r.webnnRegisterMLConstant=(i,s,a,n,o,l)=>t.registerMLConstant(i,s,a,n,o,r.Eb,l),r.webnnRegisterGraphInput=t.registerGraphInput.bind(t),r.webnnIsGraphInput=t.isGraphInput.bind(t),r.webnnCreateTemporaryTensor=t.createTemporaryTensor.bind(t),r.webnnIsInt64Supported=t.isInt64Supported.bind(t)}};let c=()=>{let t=(t,r,i)=>(...s)=>{let a=tA,n=r?.();s=t(...s);let o=r?.();return n!==o&&(t=o,i(n),r=i=null),tA!=a?new Promise((t,r)=>{tD={resolve:t,reject:r}}):s};(()=>{for(let i of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])r[i]=t(r[i],()=>r[i],t=>r[i]=t)})(),void 0!==d&&(r._OrtRun=d(r._OrtRun),r._OrtRunWithBinding=d(r._OrtRunWithBinding)),c=void 0};r.asyncInit=()=>{c?.()};var p,h,m=Object.assign({},r),f=(t,r)=>{throw r},g="";(n||o)&&(o?g=self.location.href:"u">typeof document&&document.currentScript&&(g=document.currentScript.src),e5&&(g=e5),g=g.startsWith("blob:")?"":g.slice(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),o&&(h=t=>{var r=new XMLHttpRequest;return r.open("GET",t,!1),r.responseType="arraybuffer",r.send(null),new Uint8Array(r.response)}),p=async t=>{if(O(t))return new Promise((r,i)=>{var s=new XMLHttpRequest;s.open("GET",t,!0),s.responseType="arraybuffer",s.onload=()=>{200==s.status||0==s.status&&s.response?r(s.response):i(s.status)},s.onerror=i,s.send(null)});var r=await fetch(t,{credentials:"same-origin"});if(r.ok)return r.arrayBuffer();throw Error(r.status+" : "+r.url)});var _=console.log.bind(console),y=console.error.bind(console),b=_,w=y;Object.assign(r,m),m=null;var x,v,M,T,k,$,C,S,P,E,F,A,I,z=r.wasmBinary,L=!1,O=t=>t.startsWith("file://");function B(){return x.buffer!=T.buffer&&H(),T}function D(){return x.buffer!=T.buffer&&H(),k}function N(){return x.buffer!=T.buffer&&H(),$}function j(){return x.buffer!=T.buffer&&H(),C}function R(){return x.buffer!=T.buffer&&H(),S}function V(){return x.buffer!=T.buffer&&H(),P}function G(){return x.buffer!=T.buffer&&H(),E}function U(){return x.buffer!=T.buffer&&H(),I}if(l){let t=function(i){try{var s=i.data,a=s.Bb;if("load"===a){let i=[];for(let a of(self.onmessage=t=>i.push(t),self.startWorker=()=>{for(let r of(postMessage({Bb:"loaded"}),i))t(r);self.onmessage=t},s.Rb))r[a]&&!r[a].proxy||(r[a]=(...t)=>{postMessage({Bb:"callHandler",Qb:a,args:t})},"print"==a&&(b=r[a]),"printErr"==a&&(w=r[a]));x=s.kc,H(),q(s.lc)}else if("run"===a){ev(s.Ab),rq(s.Ab,0,0,1,0,0),eb(),ty(s.Ab),W||(rR(),W=!0);try{eM(s.fc,s.Hb)}catch(t){if("unwind"!=t)throw t}}else"setimmediate"!==s.target&&("checkMailbox"===a?W&&tb():a&&(w(`worker: received unknown command ${a}`),w(s)))}catch(t){throw rW(),t}};var q,W=!1;w=function(...t){console.error(t=t.join(" "))},self.alert=function(...t){postMessage({Bb:"alert",text:t.join(" "),ic:rV()})},self.onunhandledrejection=t=>{throw t.reason||t},self.onmessage=t}function H(){var t=x.buffer;r.HEAP8=T=new Int8Array(t),r.HEAP16=$=new Int16Array(t),r.HEAPU8=k=new Uint8Array(t),r.HEAPU16=C=new Uint16Array(t),r.HEAP32=S=new Int32Array(t),r.HEAPU32=P=new Uint32Array(t),r.HEAPF32=E=new Float32Array(t),r.HEAPF64=I=new Float64Array(t),r.HEAP64=F=new BigInt64Array(t),r.HEAPU64=A=new BigUint64Array(t)}function K(){l?startWorker(r):rD.Ca()}l||(x=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),H());var X,J=0,Y=null;function Z(){if(0==--J&&Y){var t=Y;Y=null,t()}}function ee(t){throw w(t="Aborted("+t+")"),L=!0,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),s(t),t}function et(){return{a:{L:es,Aa:ei,b:ek,$:eC,A:eF,pa:eA,X:eL,Z:eO,qa:eB,na:eD,ga:eN,ma:ej,J:eR,Y:eV,V:eG,oa:eU,W:eq,va:eK,E:e1,Q:e3,O:tr,D:ti,u:ts,r:ta,P:tn,z:tm,R:tf,ja:tg,T:tw,aa:tv,M:tM,F:tT,ia:ty,sa:tk,t:tS,Ba:tP,w:tR,o:tG,l:tW,c:e6,n:tH,j:tQ,v:tX,p:tJ,f:tY,s:tZ,m:t0,e:t1,k:t2,i:t3,g:t4,d:t8,da:t6,ea:re,fa:rt,ba:rr,ca:ri,N:rn,xa:ro,ua:ru,h:rp,C:rh,G:rm,ta:rl,x:rf,ra:rg,U:r_,q:ra,y:ry,K:rb,S:rw,za:rT,ya:rk,ka:rP,la:rE,_:eh,B:rF,I:rA,ha:rI,H:rL,a:x,wa:ec}}}var er={829644:(t,i,s,a,n)=>{if(void 0===r||!r.Eb)return 1;if((t=eE(Number(t>>>0))).startsWith("./")&&(t=t.substring(2)),!(t=r.Eb.get(t)))return 2;if(i=Number(i>>>0),s=Number(s>>>0),a=Number(a>>>0),i+s>t.byteLength)return 3;try{let o=t.subarray(i,i+s);switch(n){case 0:D().set(o,a>>>0);break;case 1:r.mc?r.mc(a,o):r.bc(a,o);break;default:return 4}return 0}catch{return 4}},830468:(t,i,s)=>{r.Ob(t,D().subarray(i>>>0,i+s>>>0))},830532:()=>r.nc(),830574:t=>{r.Nb(t)},830611:()=>{r.Vb()},830642:()=>{r.Wb()},830671:()=>{r.$b()},830696:t=>r.Ub(t),830729:t=>r.Yb(t),830761:(t,i,s)=>{r.Kb(Number(t),Number(i),Number(s),!0)},830824:(t,i,s)=>{r.Kb(Number(t),Number(i),Number(s))},830881:()=>"u">typeof wasmOffsetConverter,830938:t=>{r.jb("Abs",t,void 0)},830989:t=>{r.jb("Neg",t,void 0)},831040:t=>{r.jb("Floor",t,void 0)},831093:t=>{r.jb("Ceil",t,void 0)},831145:t=>{r.jb("Reciprocal",t,void 0)},831203:t=>{r.jb("Sqrt",t,void 0)},831255:t=>{r.jb("Exp",t,void 0)},831306:t=>{r.jb("Erf",t,void 0)},831357:t=>{r.jb("Sigmoid",t,void 0)},831412:(t,i,s)=>{r.jb("HardSigmoid",t,{alpha:i,beta:s})},831491:t=>{r.jb("Log",t,void 0)},831542:t=>{r.jb("Sin",t,void 0)},831593:t=>{r.jb("Cos",t,void 0)},831644:t=>{r.jb("Tan",t,void 0)},831695:t=>{r.jb("Asin",t,void 0)},831747:t=>{r.jb("Acos",t,void 0)},831799:t=>{r.jb("Atan",t,void 0)},831851:t=>{r.jb("Sinh",t,void 0)},831903:t=>{r.jb("Cosh",t,void 0)},831955:t=>{r.jb("Asinh",t,void 0)},832008:t=>{r.jb("Acosh",t,void 0)},832061:t=>{r.jb("Atanh",t,void 0)},832114:t=>{r.jb("Tanh",t,void 0)},832166:t=>{r.jb("Not",t,void 0)},832217:(t,i,s)=>{r.jb("Clip",t,{min:i,max:s})},832286:t=>{r.jb("Clip",t,void 0)},832338:(t,i)=>{r.jb("Elu",t,{alpha:i})},832396:t=>{r.jb("Gelu",t,void 0)},832448:t=>{r.jb("Relu",t,void 0)},832500:(t,i)=>{r.jb("LeakyRelu",t,{alpha:i})},832564:(t,i)=>{r.jb("ThresholdedRelu",t,{alpha:i})},832634:(t,i)=>{r.jb("Cast",t,{to:i})},832692:t=>{r.jb("Add",t,void 0)},832743:t=>{r.jb("Sub",t,void 0)},832794:t=>{r.jb("Mul",t,void 0)},832845:t=>{r.jb("Div",t,void 0)},832896:t=>{r.jb("Pow",t,void 0)},832947:t=>{r.jb("Equal",t,void 0)},833e3:t=>{r.jb("Greater",t,void 0)},833055:t=>{r.jb("GreaterOrEqual",t,void 0)},833117:t=>{r.jb("Less",t,void 0)},833169:t=>{r.jb("LessOrEqual",t,void 0)},833228:(t,i,s,a,n)=>{r.jb("ReduceMean",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},833403:(t,i,s,a,n)=>{r.jb("ReduceMax",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},833577:(t,i,s,a,n)=>{r.jb("ReduceMin",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},833751:(t,i,s,a,n)=>{r.jb("ReduceProd",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},833926:(t,i,s,a,n)=>{r.jb("ReduceSum",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834100:(t,i,s,a,n)=>{r.jb("ReduceL1",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834273:(t,i,s,a,n)=>{r.jb("ReduceL2",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834446:(t,i,s,a,n)=>{r.jb("ReduceLogSum",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834623:(t,i,s,a,n)=>{r.jb("ReduceSumSquare",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834803:(t,i,s,a,n)=>{r.jb("ReduceLogSumExp",t,{keepDims:!!i,noopWithEmptyAxes:!!s,axes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},834983:t=>{r.jb("Where",t,void 0)},835036:(t,i,s)=>{r.jb("Transpose",t,{perm:i?Array.from(R().subarray(Number(i)>>>0,Number(s)>>>0)):[]})},835160:(t,i,s,a)=>{r.jb("DepthToSpace",t,{blocksize:i,mode:eE(s),format:a?"NHWC":"NCHW"})},835293:(t,i,s,a)=>{r.jb("DepthToSpace",t,{blocksize:i,mode:eE(s),format:a?"NHWC":"NCHW"})},835426:(t,i,s,a,n,o,l,u,d,c,p,h,m,f,g)=>{r.jb("ConvTranspose",t,{format:d?"NHWC":"NCHW",autoPad:i,dilations:[s],group:a,kernelShape:[n],pads:[o,l],strides:[u],wIsConst:()=>!!B()[c>>>0],outputPadding:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[],outputShape:m?Array.from(R().subarray(Number(m)>>>0,Number(f)>>>0)):[],activation:eE(g)})},835859:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("ConvTranspose",t,{format:u?"NHWC":"NCHW",autoPad:i,dilations:Array.from(R().subarray(Number(s)>>>0,2+(Number(s)>>>0)>>>0)),group:a,kernelShape:Array.from(R().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),pads:Array.from(R().subarray(Number(o)>>>0,4+(Number(o)>>>0)>>>0)),strides:Array.from(R().subarray(Number(l)>>>0,2+(Number(l)>>>0)>>>0)),wIsConst:()=>!!B()[d>>>0],outputPadding:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:eE(f)})},836520:(t,i,s,a,n,o,l,u,d,c,p,h,m,f,g)=>{r.jb("ConvTranspose",t,{format:d?"NHWC":"NCHW",autoPad:i,dilations:[s],group:a,kernelShape:[n],pads:[o,l],strides:[u],wIsConst:()=>!!B()[c>>>0],outputPadding:p?Array.from(R().subarray(Number(p)>>>0,Number(h)>>>0)):[],outputShape:m?Array.from(R().subarray(Number(m)>>>0,Number(f)>>>0)):[],activation:eE(g)})},836953:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("ConvTranspose",t,{format:u?"NHWC":"NCHW",autoPad:i,dilations:Array.from(R().subarray(Number(s)>>>0,2+(Number(s)>>>0)>>>0)),group:a,kernelShape:Array.from(R().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),pads:Array.from(R().subarray(Number(o)>>>0,4+(Number(o)>>>0)>>>0)),strides:Array.from(R().subarray(Number(l)>>>0,2+(Number(l)>>>0)>>>0)),wIsConst:()=>!!B()[d>>>0],outputPadding:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:eE(f)})},837614:(t,i)=>{r.jb("GlobalAveragePool",t,{format:i?"NHWC":"NCHW"})},837705:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("AveragePool",t,{format:f?"NHWC":"NCHW",auto_pad:i,ceil_mode:s,count_include_pad:a,storage_order:n,dilations:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(R().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[]})},838184:(t,i)=>{r.jb("GlobalAveragePool",t,{format:i?"NHWC":"NCHW"})},838275:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("AveragePool",t,{format:f?"NHWC":"NCHW",auto_pad:i,ceil_mode:s,count_include_pad:a,storage_order:n,dilations:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(R().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[]})},838754:(t,i)=>{r.jb("GlobalMaxPool",t,{format:i?"NHWC":"NCHW"})},838841:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("MaxPool",t,{format:f?"NHWC":"NCHW",auto_pad:i,ceil_mode:s,count_include_pad:a,storage_order:n,dilations:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(R().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[]})},839316:(t,i)=>{r.jb("GlobalMaxPool",t,{format:i?"NHWC":"NCHW"})},839403:(t,i,s,a,n,o,l,u,d,c,p,h,m,f)=>{r.jb("MaxPool",t,{format:f?"NHWC":"NCHW",auto_pad:i,ceil_mode:s,count_include_pad:a,storage_order:n,dilations:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(R().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:h?Array.from(R().subarray(Number(h)>>>0,Number(m)>>>0)):[]})},839878:(t,i,s,a,n)=>{r.jb("Gemm",t,{alpha:i,beta:s,transA:a,transB:n})},839982:t=>{r.jb("MatMul",t,void 0)},840036:(t,i,s,a)=>{r.jb("ArgMax",t,{keepDims:!!i,selectLastIndex:!!s,axis:a})},840144:(t,i,s,a)=>{r.jb("ArgMin",t,{keepDims:!!i,selectLastIndex:!!s,axis:a})},840252:(t,i)=>{r.jb("Softmax",t,{axis:i})},840315:(t,i)=>{r.jb("Concat",t,{axis:i})},840375:(t,i,s,a,n)=>{r.jb("Split",t,{axis:i,numOutputs:s,splitSizes:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},840531:t=>{r.jb("Expand",t,void 0)},840585:(t,i)=>{r.jb("Gather",t,{axis:Number(i)})},840656:(t,i)=>{r.jb("GatherElements",t,{axis:Number(i)})},840735:(t,i)=>{r.jb("GatherND",t,{batch_dims:Number(i)})},840814:(t,i,s,a,n,o,l,u,d,c,p)=>{r.jb("Resize",t,{antialias:i,axes:s?Array.from(R().subarray(Number(s)>>>0,Number(a)>>>0)):[],coordinateTransformMode:eE(n),cubicCoeffA:o,excludeOutside:l,extrapolationValue:u,keepAspectRatioPolicy:eE(d),mode:eE(c),nearestMode:eE(p)})},841176:(t,i,s,a,n,o,l)=>{r.jb("Slice",t,{starts:i?Array.from(R().subarray(Number(i)>>>0,Number(s)>>>0)):[],ends:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[],axes:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[]})},841440:t=>{r.jb("Tile",t,void 0)},841492:(t,i,s)=>{r.jb("InstanceNormalization",t,{epsilon:i,format:s?"NHWC":"NCHW"})},841606:(t,i,s)=>{r.jb("InstanceNormalization",t,{epsilon:i,format:s?"NHWC":"NCHW"})},841720:t=>{r.jb("Range",t,void 0)},841773:(t,i)=>{r.jb("Einsum",t,{equation:eE(i)})},841854:(t,i,s,a,n)=>{r.jb("Pad",t,{mode:i,value:s,pads:a?Array.from(R().subarray(Number(a)>>>0,Number(n)>>>0)):[]})},841997:(t,i,s,a,n,o)=>{r.jb("BatchNormalization",t,{epsilon:i,momentum:s,spatial:!!n,trainingMode:!!a,format:o?"NHWC":"NCHW"})},842166:(t,i,s,a,n,o)=>{r.jb("BatchNormalization",t,{epsilon:i,momentum:s,spatial:!!n,trainingMode:!!a,format:o?"NHWC":"NCHW"})},842335:(t,i,s)=>{r.jb("CumSum",t,{exclusive:Number(i),reverse:Number(s)})},842432:(t,i,s)=>{r.jb("DequantizeLinear",t,{axis:i,blockSize:s})},842522:(t,i,s,a,n)=>{r.jb("GridSample",t,{align_corners:i,mode:eE(s),padding_mode:eE(a),format:n?"NHWC":"NCHW"})},842692:(t,i,s,a,n)=>{r.jb("GridSample",t,{align_corners:i,mode:eE(s),padding_mode:eE(a),format:n?"NHWC":"NCHW"})},842862:(t,i)=>{r.jb("ScatterND",t,{reduction:eE(i)})},842947:(t,i,s,a,n,o,l,u,d)=>{r.jb("Attention",t,{numHeads:i,isUnidirectional:s,maskFilterValue:a,scale:n,doRotary:o,qkvHiddenSizes:l?Array.from(R().subarray(Number(u)>>>0,Number(u)+l>>>0)):[],pastPresentShareBuffer:!!d})},843219:t=>{r.jb("BiasAdd",t,void 0)},843274:t=>{r.jb("BiasSplitGelu",t,void 0)},843335:t=>{r.jb("FastGelu",t,void 0)},843391:(t,i,s,a,n,o,l,u,d,c,p,h,m,f,g,_)=>{r.jb("Conv",t,{format:h?"NHWC":"NCHW",auto_pad:i,dilations:s?Array.from(R().subarray(Number(s)>>>0,Number(a)>>>0)):[],group:n,kernel_shape:o?Array.from(R().subarray(Number(o)>>>0,Number(l)>>>0)):[],pads:u?Array.from(R().subarray(Number(u)>>>0,Number(d)>>>0)):[],strides:c?Array.from(R().subarray(Number(c)>>>0,Number(p)>>>0)):[],w_is_const:()=>!!B()[Number(m)>>>0],activation:eE(f),activation_params:g?Array.from(G().subarray(Number(g)>>>0,Number(_)>>>0)):[]})},843975:t=>{r.jb("Gelu",t,void 0)},844027:(t,i,s,a,n,o,l,u,d)=>{r.jb("GroupQueryAttention",t,{numHeads:i,kvNumHeads:s,scale:a,softcap:n,doRotary:o,rotaryInterleaved:l,smoothSoftmax:u,localWindowSize:d})},844244:(t,i,s,a)=>{r.jb("LayerNormalization",t,{axis:i,epsilon:s,simplified:!!a})},844355:(t,i,s,a)=>{r.jb("LayerNormalization",t,{axis:i,epsilon:s,simplified:!!a})},844466:(t,i,s,a,n,o)=>{r.jb("MatMulNBits",t,{k:i,n:s,accuracyLevel:a,bits:n,blockSize:o})},844593:(t,i,s,a,n,o)=>{r.jb("MultiHeadAttention",t,{numHeads:i,isUnidirectional:s,maskFilterValue:a,scale:n,doRotary:o})},844752:(t,i)=>{r.jb("QuickGelu",t,{alpha:i})},844816:(t,i,s,a,n)=>{r.jb("RotaryEmbedding",t,{interleaved:!!i,numHeads:s,rotaryEmbeddingDim:a,scale:n})},844955:(t,i,s)=>{r.jb("SkipLayerNormalization",t,{epsilon:i,simplified:!!s})},845057:(t,i,s)=>{r.jb("SkipLayerNormalization",t,{epsilon:i,simplified:!!s})},845159:(t,i,s,a)=>{r.jb("GatherBlockQuantized",t,{gatherAxis:i,quantizeAxis:s,blockSize:a})},845280:t=>{r.Zb(t)},845314:(t,i)=>r.ac(Number(t),Number(i),r.Fb.dc,r.Fb.errors)};function ei(t,i,s){return tj(async()=>{await r.Xb(Number(t),Number(i),Number(s))})}function es(){return"u">typeof wasmOffsetConverter}class ea{name="ExitStatus";constructor(t){this.message=`Program terminated with exit(${t})`,this.status=t}}var en=t=>{t.terminate(),t.onmessage=()=>{}},eo=[],el=t=>{0==em.length&&(ex(),ew(em[0]));var r=em.pop();if(!r)return 6;ef.push(r),e_[t.Ab]=r,r.Ab=t.Ab;var i={Bb:"run",fc:t.ec,Hb:t.Hb,Ab:t.Ab};return r.postMessage(i,t.Mb),0},eu=0,ed=(t,r,...i)=>{for(var s=2*i.length,a=r1(),n=r0(8*s),o=n>>>3,l=0;l<i.length;l++){var u=i[l];"bigint"==typeof u?(F[o+2*l]=1n,F[o+2*l+1]=u):(F[o+2*l]=0n,U()[o+2*l+1>>>0]=u)}return t=rH(t,0,s,n,r),rZ(a),t};function ec(t){if(l)return ed(0,1,t);if(M=t,!(0<eu)){for(var r of ef)en(r);for(r of em)en(r);em=[],ef=[],e_={},L=!0}f(0,new ea(t))}function ep(t){if(l)return ed(1,0,t);eh(t)}var eh=t=>{if(M=t,l)throw ep(t),"unwind";ec(t)},em=[],ef=[],eg=[],e_={},ey=t=>{var r=t.Ab;delete e_[r],em.push(t),ef.splice(ef.indexOf(t),1),t.Ab=0,rK(r)};function eb(){eg.forEach(t=>t())}var ew=t=>new Promise(i=>{t.onmessage=s=>{var a=(s=s.data).Bb;if(s.Gb&&s.Gb!=rV()){var n=e_[s.Gb];n?n.postMessage(s,s.Mb):w(`Internal error! Worker sent a message "${a}" to target pthread ${s.Gb}, but that thread no longer exists!`)}else"checkMailbox"===a?tb():"spawnThread"===a?el(s):"cleanupThread"===a?ey(e_[s.hc]):"loaded"===a?(t.loaded=!0,i(t)):"alert"===a?alert(`Thread ${s.ic}: ${s.text}`):"setimmediate"===s.target?t.postMessage(s):"callHandler"===a?r[s.Qb](...s.args):a&&w(`worker sent an unknown command ${a}`)},t.onerror=t=>{throw w(`worker sent an error! ${t.filename}:${t.lineno}: ${t.message}`),t};var s,a=[];for(s of[])r.propertyIsEnumerable(s)&&a.push(s);t.postMessage({Bb:"load",Rb:a,kc:x,lc:v})});function ex(){var r=new Worker((URL,Q.url>"file:"&&Q.url<"file;"?new t.U(t.r(49443)):new URL(Q.url)),{type:"module",workerData:"em-pthread",name:"em-pthread"});em.push(r)}var ev=t=>{H();var r=V()[t+52>>>2>>>0];t=V()[t+56>>>2>>>0],rY(r,r-t),rZ(r)},eM=(t,r)=>{eu=0,t=r2(t,r),0<eu?M=t:rQ(t)};class eT{constructor(t){this.Ib=t-24}}function ek(t,r,i){var s=new eT(t>>>=0);throw r>>>=0,i>>>=0,V()[s.Ib+16>>>2>>>0]=0,V()[s.Ib+4>>>2>>>0]=r,V()[s.Ib+8>>>2>>>0]=i,t}function e$(t,r,i,s){return l?ed(2,1,t,r,i,s):eC(t,r,i,s)}function eC(t,r,i,s){if(t>>>=0,i>>>=0,s>>>=0,void 0===u)return 6;var a=[];return l&&0===a.length?e$(t,r>>>=0,i,s):(t={ec:i,Ab:t,Hb:s,Mb:a},l?(t.Bb="spawnThread",postMessage(t,a),0):el(t))}var eS="u">typeof TextDecoder?new TextDecoder:void 0,eP=(t,r=0,i=NaN)=>{var s=(r>>>=0)+i;for(i=r;t[i]&&!(i>=s);)++i;if(16<i-r&&t.buffer&&eS)return eS.decode(t.buffer instanceof ArrayBuffer?t.subarray(r,i):t.slice(r,i));for(s="";r<i;){var a=t[r++];if(128&a){var n=63&t[r++];if((224&a)==192)s+=String.fromCharCode((31&a)<<6|n);else{var o=63&t[r++];65536>(a=(240&a)==224?(15&a)<<12|n<<6|o:(7&a)<<18|n<<12|o<<6|63&t[r++])?s+=String.fromCharCode(a):(a-=65536,s+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else s+=String.fromCharCode(a)}return s},eE=(t,r)=>"";function eF(t,r,i){return l?ed(3,1,t,r,i):0}function eA(t,r){if(l)return ed(4,1,t,r)}var eI=t=>{for(var r=0,i=0;i<t.length;++i){var s=t.charCodeAt(i);127>=s?r++:2047>=s?r+=2:55296<=s&&57343>=s?(r+=4,++i):r+=3}return r},ez=(t,r,i)=>{var s=D();if(r>>>=0,0<i){var a=r;i=r+i-1;for(var n=0;n<t.length;++n){var o=t.charCodeAt(n);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++n)),127>=o){if(r>=i)break;s[r++>>>0]=o}else{if(2047>=o){if(r+1>=i)break;s[r++>>>0]=192|o>>6}else{if(65535>=o){if(r+2>=i)break;s[r++>>>0]=224|o>>12}else{if(r+3>=i)break;s[r++>>>0]=240|o>>18,s[r++>>>0]=128|o>>12&63}s[r++>>>0]=128|o>>6&63}s[r++>>>0]=128|63&o}}s[r>>>0]=0,t=r-a}else t=0;return t};function eL(t,r){if(l)return ed(5,1,t,r)}function eO(t,r,i){if(l)return ed(6,1,t,r,i)}function eB(t,r,i){return l?ed(7,1,t,r,i):0}function eD(t,r){if(l)return ed(8,1,t,r)}function eN(t,r,i){if(l)return ed(9,1,t,r,i)}function ej(t,r,i,s){if(l)return ed(10,1,t,r,i,s)}function eR(t,r,i,s){if(l)return ed(11,1,t,r,i,s)}function eV(t,r,i,s){if(l)return ed(12,1,t,r,i,s)}function eG(t){if(l)return ed(13,1,t)}function eU(t,r){if(l)return ed(14,1,t,r)}function eq(t,r,i){if(l)return ed(15,1,t,r,i)}var eW,eH,eK=()=>ee(""),eQ=t=>{for(var r="";D()[t>>>0];)r+=eW[D()[t++>>>0]];return r},eX={},eJ={},eY={};function eZ(t,r,i={}){return function(t,r,i={}){var s=r.name;if(!t)throw new eH(`type "${s}" must have a positive integer typeid pointer`);if(eJ.hasOwnProperty(t)){if(i.Sb)return;throw new eH(`Cannot register type '${s}' twice`)}eJ[t]=r,delete eY[t],eX.hasOwnProperty(t)&&(r=eX[t],delete eX[t],r.forEach(t=>t()))}(t,r,i)}var e0=(t,r,i)=>{switch(r){case 1:return i?t=>B()[t>>>0]:t=>D()[t>>>0];case 2:return i?t=>N()[t>>>1>>>0]:t=>j()[t>>>1>>>0];case 4:return i?t=>R()[t>>>2>>>0]:t=>V()[t>>>2>>>0];case 8:return i?t=>F[t>>>3]:t=>A[t>>>3];default:throw TypeError(`invalid integer width (${r}): ${t}`)}};function e1(t,r,i){i>>>=0,eZ(t>>>=0,{name:r=eQ(r>>>0),fromWireType:t=>t,toWireType:function(t,r){if("bigint"!=typeof r&&"number"!=typeof r)throw r=null===r?"null":"object"==(t=typeof r)||"array"===t||"function"===t?r.toString():""+r,TypeError(`Cannot convert "${r}" to ${this.name}`);return"number"==typeof r&&(r=BigInt(r)),r},Cb:e2,readValueFromPointer:e0(r,i,-1==r.indexOf("u")),Db:null})}var e2=8;function e3(t,r,i,s){eZ(t>>>=0,{name:r=eQ(r>>>0),fromWireType:function(t){return!!t},toWireType:function(t,r){return r?i:s},Cb:e2,readValueFromPointer:function(t){return this.fromWireType(D()[t>>>0])},Db:null})}var e4=[],e8=[];function e6(t){9<(t>>>=0)&&0==--e8[t+1]&&(e8[t]=void 0,e4.push(t))}var e9=t=>{if(!t)throw new eH("Cannot use deleted val. handle = "+t);return e8[t]},e7=t=>{switch(t){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let r=e4.pop()||e8.length;return e8[r]=t,e8[r+1]=1,r}};function te(t){return this.fromWireType(V()[t>>>2>>>0])}var tt={name:"emscripten::val",fromWireType:t=>{var r=e9(t);return e6(t),r},toWireType:(t,r)=>e7(r),Cb:8,readValueFromPointer:te,Db:null};function tr(t){return eZ(t>>>0,tt)}function ti(t,r,i){i>>>=0,eZ(t>>>=0,{name:r=eQ(r>>>0),fromWireType:t=>t,toWireType:(t,r)=>r,Cb:e2,readValueFromPointer:((t,r)=>{switch(r){case 4:return function(t){return this.fromWireType(G()[t>>>2>>>0])};case 8:return function(t){return this.fromWireType(U()[t>>>3>>>0])};default:throw TypeError(`invalid float width (${r}): ${t}`)}})(r,i),Db:null})}function ts(t,r,i,s,a){if(t>>>=0,i>>>=0,r=eQ(r>>>0),-1===a&&(a=0xffffffff),a=t=>t,0===s){var n=32-8*i;a=t=>t<<n>>>n}var o=r.includes("unsigned")?function(t,r){return r>>>0}:function(t,r){return r};eZ(t,{name:r,fromWireType:a,toWireType:o,Cb:e2,readValueFromPointer:e0(r,i,0!==s),Db:null})}function ta(t,r,i){function s(t){var r=V()[t>>>2>>>0];return t=V()[t+4>>>2>>>0],new a(B().buffer,t,r)}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][r];eZ(t>>>=0,{name:i=eQ(i>>>0),fromWireType:s,Cb:e2,readValueFromPointer:s},{Sb:!0})}function tn(t,r){eZ(t>>>=0,{name:r=eQ(r>>>0),fromWireType:function(t){for(var r,i=V()[t>>>2>>>0],s=t+4,a=s,n=0;n<=i;++n){var o=s+n;n!=i&&0!=D()[o>>>0]||(a=eE(a,o-a),void 0===r?r=a:(r+="\0",r+=a),a=o+1)}return rG(t),r},toWireType:function(t,r){r instanceof ArrayBuffer&&(r=new Uint8Array(r));var i="string"==typeof r;if(!(i||r instanceof Uint8Array||r instanceof Uint8ClampedArray||r instanceof Int8Array))throw new eH("Cannot pass non-string to std::string");var s=i?eI(r):r.length,a=rU(4+s+1),n=a+4;if(V()[a>>>2>>>0]=s,i)ez(r,n,s+1);else if(i)for(i=0;i<s;++i){var o=r.charCodeAt(i);if(255<o)throw rG(a),new eH("String has UTF-16 code units that do not fit in 8 bits");D()[n+i>>>0]=o}else for(i=0;i<s;++i)D()[n+i>>>0]=r[i];return null!==t&&t.push(rG,a),a},Cb:e2,readValueFromPointer:te,Db(t){rG(t)}})}var to="u">typeof TextDecoder?new TextDecoder("utf-16le"):void 0,tl=(t,r)=>{for(var i=t>>1,s=i+r/2;!(i>=s)&&j()[i>>>0];)++i;if(32<(i<<=1)-t&&to)return to.decode(D().slice(t,i));for(i="",s=0;!(s>=r/2);++s){var a=N()[t+2*s>>>1>>>0];if(0==a)break;i+=String.fromCharCode(a)}return i},tu=(t,r,i)=>{if(2>(i??=0x7fffffff))return 0;var s=r;i=(i-=2)<2*t.length?i/2:t.length;for(var a=0;a<i;++a){var n=t.charCodeAt(a);N()[r>>>1>>>0]=n,r+=2}return N()[r>>>1>>>0]=0,r-s},td=t=>2*t.length,tc=(t,r)=>{for(var i=0,s="";!(i>=r/4);){var a=R()[t+4*i>>>2>>>0];if(0==a)break;++i,65536<=a?(a-=65536,s+=String.fromCharCode(55296|a>>10,56320|1023&a)):s+=String.fromCharCode(a)}return s},tp=(t,r,i)=>{if(r>>>=0,4>(i??=0x7fffffff))return 0;var s=r;i=s+i-4;for(var a=0;a<t.length;++a){var n=t.charCodeAt(a);if(55296<=n&&57343>=n&&(n=65536+((1023&n)<<10)|1023&t.charCodeAt(++a)),R()[r>>>2>>>0]=n,(r+=4)+4>i)break}return R()[r>>>2>>>0]=0,r-s},th=t=>{for(var r=0,i=0;i<t.length;++i){var s=t.charCodeAt(i);55296<=s&&57343>=s&&++i,r+=4}return r};function tm(t,r,i){if(t>>>=0,r>>>=0,i=eQ(i>>>=0),2===r)var s=tl,a=tu,n=td,o=t=>j()[t>>>1>>>0];else 4===r&&(s=tc,a=tp,n=th,o=t=>V()[t>>>2>>>0]);eZ(t,{name:i,fromWireType:t=>{for(var i,a=V()[t>>>2>>>0],n=t+4,l=0;l<=a;++l){var u=t+4+l*r;l!=a&&0!=o(u)||(n=s(n,u-n),void 0===i?i=n:(i+="\0",i+=n),n=u+r)}return rG(t),i},toWireType:(t,s)=>{if("string"!=typeof s)throw new eH(`Cannot pass non-string to C++ string type ${i}`);var o=n(s),l=rU(4+o+r);return V()[l>>>2>>>0]=o/r,a(s,l+4,o+r),null!==t&&t.push(rG,l),l},Cb:e2,readValueFromPointer:te,Db(t){rG(t)}})}function tf(t,r){eZ(t>>>=0,{Tb:!0,name:r=eQ(r>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function tg(t){rq(t>>>0,!o,1,!n,131072,!1),eb()}var t_=t=>{if(!L)try{if(t(),!(0<eu))try{l?rQ(M):eh(M)}catch(t){t instanceof ea||"unwind"==t||f(0,t)}}catch(t){t instanceof ea||"unwind"==t||f(0,t)}};function ty(t){t>>>=0,"function"==typeof Atomics.jc&&(Atomics.jc(R(),t>>>2,t).value.then(tb),t+=128,Atomics.store(R(),t>>>2,1))}var tb=()=>{var t=rV();t&&(ty(t),t_(rJ))};function tw(t,r){(t>>>=0)==r>>>0?setTimeout(tb):l?postMessage({Gb:t,Bb:"checkMailbox"}):(t=e_[t])&&t.postMessage({Bb:"checkMailbox"})}var tx=[];function tv(t,r,i,s,a){for(r>>>=0,tx.length=s/=2,i=a>>>0>>>3,a=0;a<s;a++)tx[a]=F[i+2*a]?F[i+2*a+1]:U()[i+2*a+1>>>0];return(r?er[r]:rN[t])(...tx)}var tM=()=>{eu=0};function tT(t){t>>>=0,l?postMessage({Bb:"cleanupThread",hc:t}):ey(e_[t])}function tk(t){}var t$=(t,r)=>{var i=eJ[t];if(void 0===i)throw i=eQ(t=rj(t)),rG(t),new eH(`${r} has unknown type ${i}`);return i},tC=(t,r,i)=>{var s=[];return t=t.toWireType(s,i),s.length&&(V()[r>>>2>>>0]=e7(s)),t};function tS(t,r,i){return r>>>=0,i>>>=0,t=e9(t>>>0),tC(r=t$(r,"emval::as"),i,t)}function tP(t,r){return r>>>=0,t=e9(t>>>0),(r=t$(r,"emval::as")).toWireType(null,t)}var tE=t=>{try{t()}catch(t){ee(t)}},tF=0,tA=null,tI=0,tz=[],tL={},tO={},tB=0,tD=null,tN=[];function tj(t){return function(t){if(!L){if(0===tF){var r,i,s,a=!1,n=!1;t((t=0)=>{if(!L&&(tI=t,a=!0,n)){tF=2,tE(()=>r8(tA)),"u">typeof MainLoop&&MainLoop.Pb&&MainLoop.resume(),t=!1;try{var r,i=(r=rD[tO[r=R()[tA+8>>>2>>>0]]],--eu,r())}catch(r){i=r,t=!0}var s=!1;if(!tA){var o=tD;o&&(tD=null,(t?o.reject:o.resolve)(i),s=!0)}if(t&&!s)throw i}}),n=!0,a||(tF=1,i=(r=rU(65548))+12,V()[r>>>2>>>0]=i,V()[r+4>>>2>>>0]=i+65536,void 0===(s=tL[i=tz[0]])&&(s=tB++,tL[i]=s,tO[s]=i),i=s,R()[r+8>>>2>>>0]=i,tA=r,"u">typeof MainLoop&&MainLoop.Pb&&MainLoop.pause(),tE(()=>r3(tA)))}else 2===tF?(tF=0,tE(r6),rG(tA),tA=null,tN.forEach(t_)):ee(`invalid state: ${tF}`);return tI}}(r=>{t().then(r)})}function tR(t){return t>>>=0,tj(async()=>e7(await e9(t)))}var tV=[];function tG(t,r,i,s){return i>>>=0,s>>>=0,(t=tV[t>>>0])(null,r=e9(r>>>0),i,s)}var tU={},tq=t=>{var r=tU[t];return void 0===r?eQ(t):r};function tW(t,r,i,s,a){return i>>>=0,s>>>=0,a>>>=0,(t=tV[t>>>0])(r=e9(r>>>0),r[i=tq(i)],s,a)}function tH(t){return e7("object"==typeof globalThis?globalThis:Function("return this")())}var tK=(t,r)=>Object.defineProperty(r,"name",{value:t});function tQ(t,r,i){var s,a,n=(r=((t,r)=>{for(var i=Array(t),s=0;s<t;++s)i[s]=t$(V()[r+4*s>>>2>>>0],"parameter "+s);return i})(t,r>>>0)).shift();t--;var o=`return function (obj, func, destructorsRef, args) {
`,l=0,u=[];0===i&&u.push("obj");for(var d=["retType"],c=[n],p=0;p<t;++p)u.push("arg"+p),d.push("argType"+p),c.push(r[p]),o+=`  var arg${p} = argType${p}.readValueFromPointer(args${l?"+"+l:""});
`,l+=r[p].Cb;return o+=`  var rv = ${1===i?"new func":"func.call"}(${u.join(", ")});
`,n.Tb||(d.push("emval_returnValue"),c.push(tC),o+=`  return emval_returnValue(retType, destructorsRef, rv);
`),d.push(o+`};
`),t=(function(t){var r=Function;if(!(r instanceof Function))throw TypeError(`new_ called with constructor type ${typeof r} which is not a function`);var i=tK(r.name||"unknownFunctionName",function(){});return i.prototype=r.prototype,i=new i,(t=r.apply(i,t))instanceof Object?t:i})(d)(...c),s=tK(i=`methodCaller<(${r.map(t=>t.name).join(", ")}) => ${n.name}>`,t),a=tV.length,tV.push(s),a}function tX(t){return e7(r[t=tq(t>>>0)])}function tJ(t,r){return r>>>=0,e7((t=e9(t>>>0))[r=e9(r)])}function tY(t){9<(t>>>=0)&&(e8[t+1]+=1)}function tZ(){return e7([])}function t0(t){t=e9(t>>>0);for(var r=Array(t.length),i=0;i<t.length;i++)r[i]=t[i];return e7(r)}function t1(t){return e7(tq(t>>>0))}function t2(){return e7({})}function t3(t){for(var r=e9(t>>>=0);r.length;){var i=r.pop();r.pop()(i)}e6(t)}function t4(t,r,i){r>>>=0,i>>>=0,t=e9(t>>>0),r=e9(r),i=e9(i),t[r]=i}function t8(t,r){return r>>>=0,e7(t=(t=t$(t>>>0,"_emval_take_value")).readValueFromPointer(r))}function t6(t,r){t=-0x20000000000000>t||0x20000000000000<t?NaN:Number(t),r>>>=0,t=new Date(1e3*t),R()[r>>>2>>>0]=t.getUTCSeconds(),R()[r+4>>>2>>>0]=t.getUTCMinutes(),R()[r+8>>>2>>>0]=t.getUTCHours(),R()[r+12>>>2>>>0]=t.getUTCDate(),R()[r+16>>>2>>>0]=t.getUTCMonth(),R()[r+20>>>2>>>0]=t.getUTCFullYear()-1900,R()[r+24>>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,R()[r+28>>>2>>>0]=t}var t5=t=>t%4==0&&(t%100!=0||t%400==0),t9=[0,31,60,91,121,152,182,213,244,274,305,335],t7=[0,31,59,90,120,151,181,212,243,273,304,334];function re(t,r){t=-0x20000000000000>t||0x20000000000000<t?NaN:Number(t),r>>>=0,t=new Date(1e3*t),R()[r>>>2>>>0]=t.getSeconds(),R()[r+4>>>2>>>0]=t.getMinutes(),R()[r+8>>>2>>>0]=t.getHours(),R()[r+12>>>2>>>0]=t.getDate(),R()[r+16>>>2>>>0]=t.getMonth(),R()[r+20>>>2>>>0]=t.getFullYear()-1900,R()[r+24>>>2>>>0]=t.getDay();var i=(t5(t.getFullYear())?t9:t7)[t.getMonth()]+t.getDate()-1|0;R()[r+28>>>2>>>0]=i,R()[r+36>>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset();var s=new Date(t.getFullYear(),0,1).getTimezoneOffset();t=0|(i!=s&&t.getTimezoneOffset()==Math.min(s,i)),R()[r+32>>>2>>>0]=t}function rt(t){t>>>=0;var r=new Date(R()[t+20>>>2>>>0]+1900,R()[t+16>>>2>>>0],R()[t+12>>>2>>>0],R()[t+8>>>2>>>0],R()[t+4>>>2>>>0],R()[t>>>2>>>0],0),i=R()[t+32>>>2>>>0],s=r.getTimezoneOffset(),a=new Date(r.getFullYear(),6,1).getTimezoneOffset(),n=new Date(r.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(n,a);return 0>i?R()[t+32>>>2>>>0]=+(a!=n&&o==s):0<i!=(o==s)&&(a=Math.max(n,a),r.setTime(r.getTime()+6e4*((0<i?o:a)-s))),R()[t+24>>>2>>>0]=r.getDay(),i=(t5(r.getFullYear())?t9:t7)[r.getMonth()]+r.getDate()-1|0,R()[t+28>>>2>>>0]=i,R()[t>>>2>>>0]=r.getSeconds(),R()[t+4>>>2>>>0]=r.getMinutes(),R()[t+8>>>2>>>0]=r.getHours(),R()[t+12>>>2>>>0]=r.getDate(),R()[t+16>>>2>>>0]=r.getMonth(),R()[t+20>>>2>>>0]=r.getYear(),BigInt(isNaN(t=r.getTime())?-1:t/1e3)}function rr(t,r,i,s,a,n,o){return l?ed(16,1,t,r,i,s,a,n,o):-52}function ri(t,r,i,s,a,n){if(l)return ed(17,1,t,r,i,s,a,n)}var rs={},ra=()=>performance.timeOrigin+performance.now();function rn(t,r){if(l)return ed(18,1,t,r);if(rs[t]&&(clearTimeout(rs[t].id),delete rs[t]),!r)return 0;var i=setTimeout(()=>{delete rs[t],t_(()=>rX(t,performance.timeOrigin+performance.now()))},r);return rs[t]={id:i,qc:r},0}function ro(t,r,i,s){t>>>=0,r>>>=0,i>>>=0,s>>>=0;var a=new Date().getFullYear(),n=new Date(a,0,1).getTimezoneOffset(),o=Math.max(n,a=new Date(a,6,1).getTimezoneOffset());V()[t>>>2>>>0]=60*o,R()[r>>>2>>>0]=+(n!=a),t=(r=t=>{var r=Math.abs(t);return`UTC${0<=t?"-":"+"}${String(Math.floor(r/60)).padStart(2,"0")}${String(r%60).padStart(2,"0")}`})(n),r=r(a),a<n?(ez(t,i,17),ez(r,s,17)):(ez(t,s,17),ez(r,i,17))}var rl=()=>Date.now();function ru(t,r,i){return 0<=t&&3>=t?(t=0===t?Date.now():performance.timeOrigin+performance.now(),F[i>>>0>>>3]=BigInt(Math.round(1e6*t)),0):28}var rd=[],rc=(t,r)=>{rd.length=0;for(var i;i=D()[t++>>>0];){var s=105!=i;r+=(s&=112!=i)&&r%8?4:0,rd.push(112==i?V()[r>>>2>>>0]:106==i?F[r>>>3]:105==i?R()[r>>>2>>>0]:U()[r>>>3>>>0]),r+=s?8:4}return rd};function rp(t,r,i){return t>>>=0,r=rc(r>>>0,i>>>0),er[t](...r)}function rh(t,r,i){return t>>>=0,r=rc(r>>>0,i>>>0),er[t](...r)}var rm=()=>{};function rf(t,r){return w(eE(t>>>0,r>>>0))}var rg=()=>{throw eu+=1,"unwind"};function r_(){return 0xffff0000}var ry=()=>navigator.hardwareConcurrency;function rb(){return ee("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function rw(t){t>>>=0;var r=D().length;if(t<=r||0xffff0000<t)return!1;for(var i=1;4>=i;i*=2){var s=r*(1+.2/i);s=Math.min(s,t+0x6000000);e:{s=(Math.min(0xffff0000,65536*Math.ceil(Math.max(t,s)/65536))-x.buffer.byteLength+65535)/65536|0;try{x.grow(s),H();var a=1;break e}catch{}a=void 0}if(a)return!0}return!1}var rx=()=>(ee("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),rv={},rM=t=>{t.forEach(t=>{var r=rx();r&&(rv[r]=t)})};function rT(){var t=Error().stack.toString().split(`
`);return"Error"==t[0]&&t.shift(),rM(t),rv.Lb=rx(),rv.cc=t,rv.Lb}function rk(t,r,i){if(t>>>=0,r>>>=0,rv.Lb==t)var s=rv.cc;else"Error"==(s=Error().stack.toString().split(`
`))[0]&&s.shift(),rM(s);for(var a=3;s[a]&&rx()!=t;)++a;for(t=0;t<i&&s[t+a];++t)R()[r+4*t>>>2>>>0]=rx();return t}var r$,rC={},rS=()=>{if(!r$){var t,r={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(t in rC)void 0===rC[t]?delete r[t]:r[t]=rC[t];var i=[];for(t in r)i.push(`${t}=${r[t]}`);r$=i}return r$};function rP(t,r){if(l)return ed(19,1,t,r);t>>>=0,r>>>=0;var i=0;return rS().forEach((s,a)=>{var n=r+i;for(a=V()[t+4*a>>>2>>>0]=n,n=0;n<s.length;++n)B()[a++>>>0]=s.charCodeAt(n);B()[a>>>0]=0,i+=s.length+1}),0}function rE(t,r){if(l)return ed(20,1,t,r);t>>>=0,r>>>=0;var i=rS();V()[t>>>2>>>0]=i.length;var s=0;return i.forEach(t=>s+=t.length+1),V()[r>>>2>>>0]=s,0}function rF(t){return l?ed(21,1,t):52}function rA(t,r,i,s){return l?ed(22,1,t,r,i,s):52}function rI(t,r,i,s){return l?ed(23,1,t,r,i,s):70}var rz=[null,[],[]];function rL(t,r,i,s){if(l)return ed(24,1,t,r,i,s);r>>>=0,i>>>=0,s>>>=0;for(var a=0,n=0;n<i;n++){var o=V()[r>>>2>>>0],u=V()[r+4>>>2>>>0];r+=8;for(var d=0;d<u;d++){var c=D()[o+d>>>0],p=rz[t];0===c||10===c?((1===t?b:w)(eP(p)),p.length=0):p.push(c)}a+=u}return V()[s>>>2>>>0]=a,0}l||function(){for(var t=r.numThreads-1;t--;)ex();eo.unshift(()=>{var t;J++,t=()=>Z(),l?t():Promise.all(em.map(ew)).then(t)})}();for(var rO=Array(256),rB=0;256>rB;++rB)rO[rB]=String.fromCharCode(rB);eW=rO,eH=r.BindingError=class extends Error{constructor(t){super(t),this.name="BindingError"}},r.InternalError=class extends Error{constructor(t){super(t),this.name="InternalError"}},e8.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>e8.length/2-5-e4.length;var rD,rN=[ec,ep,e$,eF,eA,eL,eO,eB,eD,eN,ej,eR,eV,eG,eU,eq,rr,ri,rn,rP,rE,rF,rA,rI,rL];!async function(){function i(t,r){var i,s,a;return rD=t.exports,i=rD=function(){var t={};for(let[r,i]of Object.entries(rD))t[r]="function"==typeof i?(...t)=>{tz.push(r);try{return i(...t)}finally{L||(tz.pop(),tA&&1===tF&&0===tz.length&&(tF=0,eu+=1,tE(r4),"u">typeof Fibers&&Fibers.rc()))}}:i;return t}(),s=t=>r=>t(r)>>>0,a=t=>()=>t()>>>0,(i=Object.assign({},i)).Da=s(i.Da),i.fb=a(i.fb),i.hb=s(i.hb),i.tb=s(i.tb),i.ub=a(i.ub),i.__cxa_get_exception_ptr=s(i.__cxa_get_exception_ptr),rD=i,eg.push(rD.ib),v=r,Z(),rD}J++;var a=et();if(r.instantiateWasm)return new Promise(t=>{r.instantiateWasm(a,(r,s)=>{i(r,s),t(r.exports)})});if(l)return new Promise(t=>{q=r=>{t(i(new WebAssembly.Instance(r,et()),r))}});X??=r.locateFile?r.locateFile?r.locateFile("ort-wasm-simd-threaded.jsep.wasm",g):g+"ort-wasm-simd-threaded.jsep.wasm":new t.U(t.r(37811)).href;try{var n=await async function(t){if(!z&&"function"==typeof WebAssembly.instantiateStreaming&&!O(X))try{var r=fetch(X,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(r,t)}catch(t){w(`wasm streaming compile failed: ${t}`),w("falling back to ArrayBuffer instantiation")}return async function(t,r){try{var i=await async function(t){if(!z)try{var r=await p(t);return new Uint8Array(r)}catch{}if(t==X&&z)t=new Uint8Array(z);else{if(!h)throw"both async and sync fetching of the wasm failed";t=h(t)}return t}(t);return await WebAssembly.instantiate(i,r)}catch(t){w(`failed to asynchronously prepare wasm: ${t}`),ee(t)}}(X,t)}(a);i(n.instance,n.module)}catch(t){return s(t),Promise.reject(t)}}();var rj=t=>(rj=rD.Da)(t),rR=()=>(rR=rD.Ea)();r._OrtInit=(t,i)=>(r._OrtInit=rD.Fa)(t,i),r._OrtGetLastError=(t,i)=>(r._OrtGetLastError=rD.Ga)(t,i),r._OrtCreateSessionOptions=(t,i,s,a,n,o,l,u,d,c)=>(r._OrtCreateSessionOptions=rD.Ha)(t,i,s,a,n,o,l,u,d,c),r._OrtAppendExecutionProvider=(t,i,s,a,n)=>(r._OrtAppendExecutionProvider=rD.Ia)(t,i,s,a,n),r._OrtAddFreeDimensionOverride=(t,i,s)=>(r._OrtAddFreeDimensionOverride=rD.Ja)(t,i,s),r._OrtAddSessionConfigEntry=(t,i,s)=>(r._OrtAddSessionConfigEntry=rD.Ka)(t,i,s),r._OrtReleaseSessionOptions=t=>(r._OrtReleaseSessionOptions=rD.La)(t),r._OrtCreateSession=(t,i,s)=>(r._OrtCreateSession=rD.Ma)(t,i,s),r._OrtReleaseSession=t=>(r._OrtReleaseSession=rD.Na)(t),r._OrtGetInputOutputCount=(t,i,s)=>(r._OrtGetInputOutputCount=rD.Oa)(t,i,s),r._OrtGetInputOutputMetadata=(t,i,s,a)=>(r._OrtGetInputOutputMetadata=rD.Pa)(t,i,s,a),r._OrtFree=t=>(r._OrtFree=rD.Qa)(t),r._OrtCreateTensor=(t,i,s,a,n,o)=>(r._OrtCreateTensor=rD.Ra)(t,i,s,a,n,o),r._OrtGetTensorData=(t,i,s,a,n)=>(r._OrtGetTensorData=rD.Sa)(t,i,s,a,n),r._OrtReleaseTensor=t=>(r._OrtReleaseTensor=rD.Ta)(t),r._OrtCreateRunOptions=(t,i,s,a)=>(r._OrtCreateRunOptions=rD.Ua)(t,i,s,a),r._OrtAddRunConfigEntry=(t,i,s)=>(r._OrtAddRunConfigEntry=rD.Va)(t,i,s),r._OrtReleaseRunOptions=t=>(r._OrtReleaseRunOptions=rD.Wa)(t),r._OrtCreateBinding=t=>(r._OrtCreateBinding=rD.Xa)(t),r._OrtBindInput=(t,i,s)=>(r._OrtBindInput=rD.Ya)(t,i,s),r._OrtBindOutput=(t,i,s,a)=>(r._OrtBindOutput=rD.Za)(t,i,s,a),r._OrtClearBoundOutputs=t=>(r._OrtClearBoundOutputs=rD._a)(t),r._OrtReleaseBinding=t=>(r._OrtReleaseBinding=rD.$a)(t),r._OrtRunWithBinding=(t,i,s,a,n)=>(r._OrtRunWithBinding=rD.ab)(t,i,s,a,n),r._OrtRun=(t,i,s,a,n,o,l,u)=>(r._OrtRun=rD.bb)(t,i,s,a,n,o,l,u),r._OrtEndProfiling=t=>(r._OrtEndProfiling=rD.cb)(t),r._JsepOutput=(t,i,s)=>(r._JsepOutput=rD.db)(t,i,s),r._JsepGetNodeName=t=>(r._JsepGetNodeName=rD.eb)(t);var rV=()=>(rV=rD.fb)(),rG=r._free=t=>(rG=r._free=rD.gb)(t),rU=r._malloc=t=>(rU=r._malloc=rD.hb)(t),rq=(t,r,i,s,a,n)=>(rq=rD.kb)(t,r,i,s,a,n),rW=()=>(rW=rD.lb)(),rH=(t,r,i,s,a)=>(rH=rD.mb)(t,r,i,s,a),rK=t=>(rK=rD.nb)(t),rQ=t=>(rQ=rD.ob)(t),rX=(t,r)=>(rX=rD.pb)(t,r),rJ=()=>(rJ=rD.qb)(),rY=(t,r)=>(rY=rD.rb)(t,r),rZ=t=>(rZ=rD.sb)(t),r0=t=>(r0=rD.tb)(t),r1=()=>(r1=rD.ub)(),r2=r.dynCall_ii=(t,i)=>(r2=r.dynCall_ii=rD.vb)(t,i),r3=t=>(r3=rD.wb)(t),r4=()=>(r4=rD.xb)(),r8=t=>(r8=rD.yb)(t),r6=()=>(r6=rD.zb)();return r.stackSave=()=>r1(),r.stackRestore=t=>rZ(t),r.stackAlloc=t=>r0(t),r.setValue=function(t,r,i="i8"){switch(i.endsWith("*")&&(i="*"),i){case"i1":case"i8":B()[t>>>0]=r;break;case"i16":N()[t>>>1>>>0]=r;break;case"i32":R()[t>>>2>>>0]=r;break;case"i64":F[t>>>3]=BigInt(r);break;case"float":G()[t>>>2>>>0]=r;break;case"double":U()[t>>>3>>>0]=r;break;case"*":V()[t>>>2>>>0]=r;break;default:ee(`invalid type for setValue: ${i}`)}},r.getValue=function(t,r="i8"){switch(r.endsWith("*")&&(r="*"),r){case"i1":case"i8":return B()[t>>>0];case"i16":return N()[t>>>1>>>0];case"i32":return R()[t>>>2>>>0];case"i64":return F[t>>>3];case"float":return G()[t>>>2>>>0];case"double":return U()[t>>>3>>>0];case"*":return V()[t>>>2>>>0];default:ee(`invalid type for getValue: ${r}`)}},r.UTF8ToString=eE,r.stringToUTF8=ez,r.lengthBytesUTF8=eI,function t(){if(0<J)Y=t;else if(l)i(r),K();else{for(;0<eo.length;)eo.shift()(r);0<J?Y=t:(r.calledRun=!0,L||(K(),i(r)))}}(),r.PTR_SIZE=4,a},globalThis.self?.name?.startsWith("em-pthread")&&e9()}),a3=eA(()=>{e1(),te=typeof location>"u"?void 0:location.origin,tt=Q.url>"file:"&&Q.url<"file;",tr=tt?(URL,new URL(new t.U(t.r(49443)).href,te).href):Q.url,ti=()=>{if(tr&&!tr.startsWith("blob:"))return tr.substring(0,tr.lastIndexOf("/")+1)},ts=(t,r)=>{try{let i=r??tr;return(i?new URL(t,i):new URL(t)).origin===te}catch{return!1}},ta=async t=>{let r=await (await fetch(t,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},tn=async t=>(await import(t)).default,to=(e8(),ez(e2)).default,tl=async()=>{if(!tr)throw Error("Failed to load proxy worker: cannot determine the script source URL.");if(ts(tr))return[void 0,to()];let t=await ta(tr);return[t,to(t)]},tu=(a2(),ez(e6)).default,td=async(t,r,i)=>{if(!t&&!r&&tu&&tr&&ts(tr))return[void 0,tu];{let s,a,n="ort-wasm-simd-threaded.jsep.mjs",o=t??((t,r)=>{let i=r??tr;try{return(i?new URL(t,i):new URL(t)).href}catch{return}})(n,r),l=i&&o&&!ts(o,r),u=l?await ta(o):o??(s=n,a=r,`${a??"./"}${s}`);return[l?u:void 0,await tn(u)]}}}),a4=eA(()=>{a3(),tp=!1,th=!1,tm=!1,tf=async t=>{if(tp)return Promise.resolve();if(th)throw Error("multiple calls to 'initializeWebAssembly()' detected.");if(tm)throw Error("previous call to 'initializeWebAssembly()' failed.");th=!0;let r=t.initTimeout,i=t.numThreads;if(!1!==t.simd){if("relaxed"===t.simd){if(!(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}})())throw Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}})())throw Error("WebAssembly SIMD is not supported in the current environment.")}let s=(()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}})();i>1&&!s&&("u">typeof self&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+i+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),t.numThreads=i=1);let a=t.wasmPaths,n="string"==typeof a?a:void 0,o=a?.mjs,l=o?.href??o,u=a?.wasm,d=u?.href??u,c=t.wasmBinary,[p,h]=await td(l,n,i>1),m=!1,f=[];if(r>0&&f.push(new Promise(t=>{setTimeout(()=>{m=!0,t()},r)})),f.push(new Promise((t,r)=>{let s={numThreads:i};if(c)s.wasmBinary=c;else if(d||n)s.locateFile=t=>d??n+t;else if(l&&0!==l.indexOf("blob:"))s.locateFile=t=>new URL(t,l).href;else if(p){let t=ti();t&&(s.locateFile=r=>t+r)}h(s).then(r=>{th=!1,tp=!0,tc=r,t(),p&&URL.revokeObjectURL(p)},t=>{th=!1,tm=!0,r(t)})})),await Promise.race(f),m)throw Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},tg=()=>{if(tp&&tc)return tc;throw Error("WebAssembly is not initialized yet.")}}),a8=eA(()=>{a4(),t_=(t,r)=>{let i=tg(),s=i.lengthBytesUTF8(t)+1,a=i._malloc(s);return i.stringToUTF8(t,a,s),r.push(a),a},ty=(t,r,i,s)=>{if("object"==typeof t&&null!==t){if(i.has(t))throw Error("Circular reference in options");i.add(t)}Object.entries(t).forEach(([t,a])=>{let n=r?r+t:t;if("object"==typeof a)ty(a,n+".",i,s);else if("string"==typeof a||"number"==typeof a)s(n,a.toString());else if("boolean"==typeof a)s(n,a?"1":"0");else throw Error(`Can't handle extra config type: ${typeof a}`)})},tb=t=>{let r=tg(),i=r.stackSave();try{let i=r.PTR_SIZE,s=r.stackAlloc(2*i);r._OrtGetLastError(s,s+i);let a=Number(r.getValue(s,4===i?"i32":"i64")),n=r.getValue(s+i,"*"),o=n?r.UTF8ToString(n):"";throw Error(`${t} ERROR_CODE: ${a}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(i)}}}),a6=eA(()=>{a4(),a8(),tw=t=>{let r=tg(),i=0,s=[],a=t||{};try{if(t?.logSeverityLevel===void 0)a.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)a.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(a.terminate=!1);let n=0;return t?.tag!==void 0&&(n=t_(t.tag,s)),i=r._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,n),0===i&&tb("Can't create run options."),t?.extra!==void 0&&ty(t.extra,"",new WeakSet,(t,a)=>{let n=t_(t,s),o=t_(a,s);0!==r._OrtAddRunConfigEntry(i,n,o)&&tb(`Can't set a run config entry: ${t} - ${a}.`)}),[i,s]}catch(t){throw 0!==i&&r._OrtReleaseRunOptions(i),s.forEach(t=>r._free(t)),t}}}),a5=eA(()=>{a4(),a8(),tx=(t,r,i,s)=>{let a=t_(r,s),n=t_(i,s);0!==tg()._OrtAddSessionConfigEntry(t,a,n)&&tb(`Can't set a session config entry: ${r} - ${i}.`)},tv=async(t,r,i)=>{for(let s of r){let r="string"==typeof s?s:s.name,a=[];switch(r){case"webnn":if(r="WEBNN","string"!=typeof s){let r=s?.deviceType;r&&tx(t,"deviceType",r,i)}break;case"webgpu":if(r="JS","string"!=typeof s&&s?.preferredLayout){if("NCHW"!==s.preferredLayout&&"NHWC"!==s.preferredLayout)throw Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);tx(t,"preferredLayout",s.preferredLayout,i)}break;case"wasm":case"cpu":continue;default:throw Error(`not supported execution provider: ${r}`)}let n=t_(r,i),o=a.length,l=0,u=0;if(o>0){l=tg()._malloc(o*tg().PTR_SIZE),i.push(l),u=tg()._malloc(o*tg().PTR_SIZE),i.push(u);for(let t=0;t<o;t++)tg().setValue(l+t*tg().PTR_SIZE,a[t][0],"*"),tg().setValue(u+t*tg().PTR_SIZE,a[t][1],"*")}await tg()._OrtAppendExecutionProvider(t,n,l,u,o)!==0&&tb(`Can't append execution provider: ${r}.`)}},tM=async t=>{var r;let i,s=tg(),a=0,n=[],o=t||{};(r=o).extra||(r.extra={}),r.extra.session||(r.extra.session={}),(i=r.extra.session).use_ort_model_bytes_directly||(i.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(t=>("string"==typeof t?t:t.name)==="webgpu")&&(r.enableMemPattern=!1);try{let t=(t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw Error(`unsupported graph optimization level: ${t}`)}})(o.graphOptimizationLevel??"all"),r=(t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw Error(`unsupported execution mode: ${t}`)}})(o.executionMode??"sequential"),i="string"==typeof o.logId?t_(o.logId,n):0,l=o.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw Error(`log serverity level is not valid: ${l}`);let u=o.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw Error(`log verbosity level is not valid: ${u}`);let d="string"==typeof o.optimizedModelFilePath?t_(o.optimizedModelFilePath,n):0;if(a=s._OrtCreateSessionOptions(t,!!o.enableCpuMemArena,!!o.enableMemPattern,r,!!o.enableProfiling,0,i,l,u,d),0===a&&tb("Can't create session options."),o.executionProviders&&await tv(a,o.executionProviders,n),void 0!==o.enableGraphCapture){if("boolean"!=typeof o.enableGraphCapture)throw Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);tx(a,"enableGraphCapture",o.enableGraphCapture.toString(),n)}if(o.freeDimensionOverrides)for(let[t,r]of Object.entries(o.freeDimensionOverrides)){if("string"!=typeof t)throw Error(`free dimension override name must be a string: ${t}`);if("number"!=typeof r||!Number.isInteger(r)||r<0)throw Error(`free dimension override value must be a non-negative integer: ${r}`);let i=t_(t,n);0!==s._OrtAddFreeDimensionOverride(a,i,r)&&tb(`Can't set a free dimension override: ${t} - ${r}.`)}return void 0!==o.extra&&ty(o.extra,"",new WeakSet,(t,r)=>{tx(a,t,r,n)}),[a,n]}catch(t){throw 0!==a&&0!==s._OrtReleaseSessionOptions(a)&&tb("Can't release session options."),n.forEach(t=>s._free(t)),t}}}),a9=eA(()=>{tT=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw Error(`unsupported data type: ${t}`)}},tk=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw Error(`unsupported data type: ${t}`)}},t$=(t,r)=>{let i=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][t],s="number"==typeof r?r:r.reduce((t,r)=>t*r,1);return i>0?Math.ceil(s*i):void 0},tC=t=>{switch(t){case"float16":return"u">typeof Float16Array&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw Error(`unsupported type: ${t}`)}},tS=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw Error(`unsupported logging level: ${t}`)}},tP=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,tE=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint64"===t||"int8"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,tF=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw Error(`unsupported data location: ${t}`)}}}),a7=eA(()=>{e1(),tA=async t=>{if("string"!=typeof t)return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t);{let r=await fetch(t);if(!r.ok)throw Error(`failed to load external data file: ${t}`);let i=r.headers.get("Content-Length"),s=i?parseInt(i,10):0;if(s<0x40000000)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw Error(`failed to load external data file: ${t}, no response body.`);let i=r.body.getReader(),a;try{a=new ArrayBuffer(s)}catch(t){if(t instanceof RangeError){let t=Math.ceil(s/65536);a=new WebAssembly.Memory({initial:t,maximum:t}).buffer}else throw t}let n=0;for(;;){let{done:t,value:r}=await i.read();if(t)break;let s=r.byteLength;new Uint8Array(a,n,s).set(r),n+=s}return new Uint8Array(a,0,s)}}}}),ne=eA(()=>{a9(),tI=["V","I","W","E","F"],tO=(t,r)=>{tz=t,tL=r},tB=(...t)=>{tL&&((t,r)=>{var i,s;let a=tS(t);a>=tS(tz)&&(i=a,s="function"==typeof r?r():r,console.log(`[${tI[i]},${new Date().toISOString()}]${s}`))})(...t)}}),nt=eA(()=>{tD=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},tN=class{static calcShape(t,r,i=!1){let s=t.length,a=r.length;if(0===s)return r;if(0===a)return t;let n=Math.max(t.length,r.length),o=Array(n);if(i){if(s<2||a<2)return;let i=tD.calcMatMulShape([t[s-2],t[s-1]],[r[a-2],r[a-1]]);if(void 0===i)return;[o[n-2],o[n-1]]=i}for(let l=i?3:1;l<=n;l++){let i=s-l<0?1:t[s-l],u=a-l<0?1:r[a-l];if(i!==u&&i>1&&u>1)return;let d=Math.max(i,u);if(i&&u)o[n-l]=Math.max(i,u);else{if(d>1)return;o[n-l]=0}}return o}static isValidBroadcast(t,r){let i=t.length,s=r.length;if(i>s)return!1;for(let a=1;a<=i;a++)if(1!==t[i-a]&&t[i-a]!==r[s-a])return!1;return!0}},tj=class t{static size(r){return t.getSizeFromDimensionRange(r,0,r.length)}static convertShape(t,r=4){let i=t.length;if(0===i)return[];let s=Array(i),a=i-1;for(;a>=0;){if(t[a]%r==0){s[a]=t[a]/r;break}if(r%t[a]!=0)throw Error("cannot convert shape");s[a]=1,r/=t[a],a--}for(a--;a>=0;a--)s[a]=t[a];return s}static sizeFromDimension(r,i){if(i<0||i>r.length)throw Error(`invalid dimension of ${i} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,i,r.length)}static sizeToDimension(r,i){if(i<0||i>r.length)throw Error(`invalid dimension of ${i} for sizeToDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,0,i)}static getSizeFromDimensionRange(t,r,i){let s=1;for(let a=r;a<i;a++){if(t[a]<0)throw Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=Number(t[a])}return s}static computeStrides(t){let r=t.length;if(0===r)return[];if(1===r)return[1];let i=Array(r);i[r-1]=1,i[r-2]=t[r-1];for(let s=r-3;s>=0;--s)i[s]=i[s+1]*t[s+1];return i}static normalizeAxis(t,r){if(t<-r&&t>=r)throw Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(i=>this.normalizeAxis(i,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(r=>t[r]):t.slice().reverse()}static padShape(t,r){let i=t.length;return t.map((t,s)=>t+r[s]+r[s+i])}static areEqual(t,r){return t.length===r.length&&t.every((t,i)=>t===r[i])}},tR=class t{static adjustPoolAttributes(t,r,i,s,a,n){if(!t&&i.length!==r.length-2)throw Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let t=0;t<r.length-2;t++)t>=i.length?i.push(r[t+2]):i[t]=r[t+2];for(let t=0;t<i.length;t++)if(t<s.length){if(s[t]<0)throw Error("strides should be greater than or equal to 1")}else s.push(1);for(let t=0;t<i.length;t++)if(t<a.length){if(a[t]<0)throw Error("dilations should be greater than or equal to 1")}else a.push(1);for(let t=0;t<2*i.length;t++)if(t<n.length){if(n[t]<0)throw Error("pad should be greater than or equal to 1")}else n.push(0);for(let t=0;t<i.length;t++){if(i[t]<=0)throw Error("kernel shapes need to be greater than 0");if(n[t]>=i[t]||n[t+i.length]>=i[t])throw Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,i,s,a,n,o,l){if(l){if(n.length!==2*(r.length-2))throw Error("length of pads should be twice the length of data dimensions");if(i.length!==r.length-2)throw Error("length of strides should be the length of data dimensions");if(a.length!==r.length-2)throw Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<r.length-2;u++)t.adjustPadAndReturnShape(r[u+(o?1:2)],i[u],s[u],a[u],n,u,u+r.length-2,l)}}static computePoolOutputShape(r,i,s,a,n,o,l){if(i.length<=0)throw Error("input shape must be of size greater than 0");let u=[i[0],i[1]];return t.computeShapeHelper(r,i,u,s,a,n,o,l),u}static computeConvOutputShape(r,i,s,a,n,o,l){if(r.length<=0||i.length<=0)throw Error("invalid input tensor dims or invalid filter tensor dims");let u=[r[0],i[0]];return t.computeShapeHelper(!1,r,u,s,a,n,o,l),u}static computeShapeHelper(r,i,s,a,n,o,l,u){if(r)for(let t=0;t<i.length-2;t++)s.push(1);else for(let r=0;r<i.length-2;r++)s.push(t.adjustPadAndReturnShape(i[r+2],a[r],n[r],o[r],l,r,r+i.length-2,u))}static adjustPadAndReturnShape(t,r,i,s,a,n,o,l){let u=i*(s-1)+1;if(!l||"NOTSET"===l)return Math.floor((t+a[n]+a[o]-u)/r+1);switch(l){case"VALID":return a[n]=0,a[o]=0,Math.floor((t-u)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==i)throw Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let i=((t+r-1)/r-1)*r+s-t;return a[n]=Math.floor("SAME_LOWER"===l?(i+1)/2:i/2),a[o]=i-a[n],Math.floor((t+i-s)/r+1)}default:throw Error("Unsupported AutoPad type")}}},tV=class{static getShapeOfGemmResult(t,r,i,s,a){let n,o,l;if(2!==t.length||2!==i.length)throw Error("shape need to be of size 2");r?(n=t[1],o=t[0]):(n=t[0],o=t[1]);let u=-1;if(s?(l=i[0],u=1):(l=i[1],u=0),i[u]!==o)throw Error("dimension mismatch");if(n<=0||l<=0||o<=0)throw Error("invalid shape specified");if(a&&!tN.isValidBroadcast(a,[n,l]))throw Error("gemm: invalid bias shape for broadcast");return[n,l,o]}},tG=-34028234663852886e22,tU=34028234663852886e22}),nr=eA(()=>{a9(),tq=(t,r)=>new(tC(r))(t)}),ni=eA(()=>{ne(),tW=(t,r=!0)=>{if(t.byteLength%8!=0)throw Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let i=t.byteLength/8,s=new BigInt64Array(t.buffer,t.byteOffset,i),a=new Int32Array(i);for(let t=0;t<i;t++){let r=s[t];if(r>2147483647n||r<-2147483648n)throw Error(`Overflow occurred when converting BigInt to Int32 at index ${t}: ${r}`);a[t]=Number(r)}return r?new Uint8Array(a.buffer):a},tH=(t,r=!0)=>{if(t.byteLength%4!=0)throw Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let i=t.byteLength/4,s=new Int32Array(t.buffer,t.byteOffset,i),a=BigInt64Array.from(s,BigInt);return r?new Uint8Array(a.buffer):a},tK=1,tQ=()=>tK++,tX=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),tJ=(t,r)=>{let i=tX.get(t);if(!i)throw Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((t,r)=>t*r)*i/8):0},tY=class{constructor(t){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:i,tensor:s,dataType:a,shape:n,shouldConvertInt64toInt32:o=!1}=t;this.sessionId=r,this.mlContext=i,this.mlTensor=s,this.dataType=a,this.tensorShape=n,this.shouldConvertInt64toInt32=o}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return tJ(this.dataType,this.tensorShape)}destroy(){tB("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(t){this.mlContext.writeTensor(this.mlTensor,t)}async read(t,r){if(!t)return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor);{let t=tH(new Uint8Array(await this.mlContext.readTensor(this.mlTensor)));return r?void(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(t):t.buffer}}canReuseTensor(t,r,i){return this.mlContext===t&&this.dataType===r&&this.tensorShape.length===i.length&&this.tensorShape.every((t,r)=>t===i[r])}setIsInt64ToInt32Converted(t){this.isInt64ToInt32Converted=t}},tZ=class{constructor(t,r){this.tensorManager=t,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(t,r,i,s){let a=r,n=this.tensorManager.getMLContext(t),o="int64"===a&&!n.opSupportLimits().input.dataTypes.includes("int64");if(o&&(a="int32",tB("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,a,i))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==tJ(a,i))throw Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let l=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,a,i,l,!0,!0,o),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(t){let r=t;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=tW(t,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength)return void this.wrapper.write(r);else tB("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(t){if(this.activeUpload){let r=this.wrapper?.isInt64ToInt32Converted?tH(this.activeUpload):this.activeUpload;return t?void(t instanceof ArrayBuffer?new Uint8Array(t).set(r):new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(r)):r.buffer}if(!this.wrapper)throw Error("Tensor has not been created.");return t?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,t):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},t0=class{constructor(t){this.backend=t,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(t){let r=this.backend.getMLContext(t);if(!r)throw Error("MLContext not found for session.");return r}reserveTensorId(){let t=tQ();return this.tensorTrackersById.set(t,new tZ(this)),t}releaseTensorId(t){let r=this.tensorTrackersById.get(t);r&&(this.tensorTrackersById.delete(t),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(t,r,i,s,a){tB("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${i}, shape: ${s}, copyOld: ${a}}`);let n=this.tensorTrackersById.get(r);if(!n)throw Error("Tensor not found.");return n.ensureTensor(t,i,s,a)}upload(t,r){let i=this.tensorTrackersById.get(t);if(!i)throw Error("Tensor not found.");i.upload(r)}async download(t,r){tB("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${t}, dstBuffer: ${r?.byteLength}}`);let i=this.tensorTrackersById.get(t);if(!i)throw Error("Tensor not found.");return i.download(r)}releaseTensorsForSession(t){for(let r of this.freeTensors)r.sessionId===t&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==t)}registerTensor(t,r,i,s){let a=this.getMLContext(t),n=tQ(),o=new tY({sessionId:t,context:a,tensor:r,dataType:i,shape:s});return this.tensorTrackersById.set(n,new tZ(this,o)),this.externalTensors.add(o),n}async getCachedTensor(t,r,i,s,a,n,o=!1){let l=this.getMLContext(t);for(let[s,a]of this.freeTensors.entries())if(a.canReuseTensor(l,r,i)){tB("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${i}}`);let a=this.freeTensors.splice(s,1)[0];return a.sessionId=t,a}tB("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${i}}`);let u=await l.createTensor({dataType:r,shape:i,dimensions:i,usage:s,writable:a,readable:n});return new tY({sessionId:t,context:l,tensor:u,dataType:r,shape:i,shouldConvertInt64toInt32:o})}releaseTensor(t){this.externalTensors.has(t)&&this.externalTensors.delete(t),this.freeTensors.push(t)}},t1=(...t)=>new t0(...t)}),ns=eA(()=>{a9(),a4(),nr(),ni(),ne(),t2=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),t3=class{constructor(t){this.tensorManager=t1(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,tO(t.logLevel,!!t.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw Error("No active session");return this.activeSessionId}onRunStart(t){tB("verbose",()=>`[WebNN] onRunStart {sessionId: ${t}}`),this.activeSessionId=t}onRunEnd(t){tB("verbose",()=>`[WebNN] onRunEnd {sessionId: ${t}}`);let r=this.temporarySessionTensorIds.get(t);if(r){for(let t of r)tB("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(t),this.activeSessionId=void 0}}async createMLContext(t){if(t instanceof GPUDevice){let r=this.mlContextCache.findIndex(r=>r.gpuDevice===t);if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({gpuDevice:t,mlContext:r}),r}}if(void 0===t){let t=this.mlContextCache.findIndex(t=>void 0===t.options&&void 0===t.gpuDevice);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:t}),t}}let r=this.mlContextCache.findIndex(r=>((t,r)=>{if(t===r)return!0;if(void 0===t||void 0===r)return!1;let i=Object.keys(t).sort(),s=Object.keys(r).sort();return i.length===s.length&&i.every((i,a)=>i===s[a]&&t[i]===r[i])})(r.options,t));if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({options:t,mlContext:r}),r}}registerMLContext(t,r){this.mlContextBySessionId.set(t,r);let i=this.sessionIdsByMLContext.get(r);i||(i=new Set,this.sessionIdsByMLContext.set(r,i)),i.add(t),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(t,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(t){this.sessionGraphInputs.delete(t);let r=this.mlContextBySessionId.get(t);if(!r)return;this.tensorManager.releaseTensorsForSession(t),this.mlContextBySessionId.delete(t);let i=this.sessionIdsByMLContext.get(r);if(i.delete(t),0===i.size){this.sessionIdsByMLContext.delete(r);let t=this.mlContextCache.findIndex(t=>t.mlContext===r);-1!==t&&this.mlContextCache.splice(t,1)}}getMLContext(t){return this.mlContextBySessionId.get(t)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(t){tB("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t)}async ensureTensor(t,r,i,s,a){let n=t2.get(i);if(!n)throw Error(`Unsupported ONNX data type: ${i}`);return this.tensorManager.ensureTensor(t??this.currentSessionId,r,n,s,a)}async createTemporaryTensor(t,r,i){tB("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${i}}`);let s=t2.get(r);if(!s)throw Error(`Unsupported ONNX data type: ${r}`);let a=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(t,a,s,i,!1);let n=this.temporarySessionTensorIds.get(t);return n?n.push(a):this.temporarySessionTensorIds.set(t,[a]),a}uploadTensor(t,r){if(!tg().shouldTransferToMLTensor)throw Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");tB("verbose",()=>`[WebNN] uploadTensor {tensorId: ${t}, data: ${r.byteLength}}`),this.tensorManager.upload(t,r)}async downloadTensor(t,r){return this.tensorManager.download(t,r)}createMLTensorDownloader(t,r){return async()=>{let i=await this.tensorManager.download(t);return tq(i,r)}}registerMLTensor(t,r,i,s){let a=t2.get(i);if(!a)throw Error(`Unsupported ONNX data type: ${i}`);let n=this.tensorManager.registerTensor(t,r,a,s);return tB("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${a}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(t,r,i,s,a,n,o=!1){if(!n)throw Error("External mounted files are not available.");let l=t;t.startsWith("./")&&(l=t.substring(2));let u=n.get(l);if(!u)throw Error(`File with name ${l} not found in preloaded files.`);if(r+i>u.byteLength)throw Error("Out of bounds: data offset and length exceed the external file data size.");let d=u.slice(r,r+i).buffer,c;switch(a.dataType){case"float32":c=new Float32Array(d);break;case"float16":c="u">typeof Float16Array&&Float16Array.from?new Float16Array(d):new Uint16Array(d);break;case"int32":c=new Int32Array(d);break;case"uint32":c=new Uint32Array(d);break;case"int64":o?(c=tW(new Uint8Array(d),!1),a.dataType="int32"):c=new BigInt64Array(d);break;case"uint64":c=new BigUint64Array(d);break;case"int8":c=new Int8Array(d);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(d);break;default:throw Error(`Unsupported data type: ${a.dataType} in creating WebNN Constant from external data.`)}return tB("verbose",()=>`[WebNN] registerMLConstant {dataType: ${a.dataType}, shape: ${a.shape}}} ${o?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(a,c)}registerGraphInput(t){this.temporaryGraphInputs.push(t)}isGraphInput(t,r){let i=this.sessionGraphInputs.get(t);return!!i&&i.includes(r)}isInt64Supported(t){return!!this.mlContextBySessionId.get(t)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),na=eA(()=>{}),nn=eA(()=>{ne(),na(),t4=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[0xc00000,10],[0x1000000,10],[0x1900000,15],[0x2000000,22],[0x2a30000,2],[0x3840000,6],[0x4000000,6],[0x8000000,6],[0xa000000,6]]),t8=[],t6=t=>16*Math.ceil(Number(t)/16),t5=1,t9=()=>t5++,t7=async(t,r,i,s)=>{let a=t6(i),n=t.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=t.getCommandEncoder();t.endComputePass(),o.copyBufferToBuffer(r,0,n,0,a),t.flush(),await n.mapAsync(GPUMapMode.READ);let l=n.getMappedRange();if(!s)return new Uint8Array(l.slice(0,i));{let t=s();return t.set(new Uint8Array(l,0,i)),t}}finally{n.destroy()}},re=class{constructor(t){for(let[r]of(this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map,t4))t8.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(t,r){let i=r.buffer,s=r.byteOffset,a=r.byteLength,n=t6(a),o=this.storageCache.get(t);if(!o)throw Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==a)throw Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${a}`);let l=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC});new Uint8Array(l.getMappedRange()).set(new Uint8Array(i,s,a)),l.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(l,0,o.gpuData.buffer,0,n),this.backend.device.queue.submit([u.finish()]),l.destroy(),tB("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`)}memcpy(t,r){let i=this.storageCache.get(t);if(!i)throw Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw Error("destination gpu data for memcpy does not exist");if(i.originalSize!==s.originalSize)throw Error("inconsistent source and destination gpu data size");let a=t6(i.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(i.gpuData.buffer,0,s.gpuData.buffer,0,a)}registerExternalBuffer(t,r,i){let s;if(i){if(s=i[0],t===i[1])return tB("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=t9();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:t},originalSize:r}),tB("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(t){void 0!==t&&(this.storageCache.delete(t),tB("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let i=(t=>{for(let r=0;r<t8.length;r++){let i=t8[r];if(t<=i)return i}return 16*Math.ceil(t/16)})(t),s,a=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||n){let t=(a?this.freeBuffers:this.freeUniformBuffers).get(i);s=t&&t.length>0?t.pop():this.backend.device.createBuffer({size:i,usage:r})}else s=this.backend.device.createBuffer({size:i,usage:r});let o={id:t9(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(t)}),tB("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${o.id}`),o}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r="bigint"==typeof t?Number(t):t,i=this.storageCache.get(r);if(!i){if(0===this.storageCache.size)return 0;throw Error("releasing data does not exist")}return tB("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${i.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(i.gpuData.buffer),i.originalSize}async download(t,r){let i=this.storageCache.get(Number(t));if(!i)throw Error("data does not exist");await t7(this.backend,i.gpuData.buffer,i.originalSize,r)}refreshPendingBuffers(){if(0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let t of this.buffersPending){let r=t4.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let i=this.freeBuffers.get(t.size)||[];void 0===r||i.length>=r?t.destroy():i.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let i=this.freeUniformBuffers.get(t.size)||[];void 0===r||i.length>=r?t.destroy():i.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);for(let r of(t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t)),this.buffersPending))t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(t)),this.sessionCount-=1,0===this.sessionCount&&(tB("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},rt=(...t)=>new re(...t)}),no=eA(()=>{rr=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ri=t=>new rr(t)}),nl=eA(()=>{a9(),nt(),rs=64,ra=(t,r)=>{if(3===r)throw Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(t)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==r)throw Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw Error(`Unknown data type: ${t}`)}},rn=(t,r=1)=>{let i=ra(t,r);return"string"==typeof i?i:i[0]},ro=(t,r=1)=>{let i=ra(t,r);return"string"==typeof i?i:i[1]},rl=(...t)=>{let r=[];return t.forEach(t=>{0!==t.length&&r.push({type:12,data:t},{type:12,data:tj.computeStrides(t)})}),r},ru=t=>t%4==0?4:t%2==0?2:1,rd=(t="f32",r,i="0")=>r&&1!==r?`vec${r}<${t}>(${i})`:`${t}(${i})`,rc=(t,r,i)=>"f32"===t?i:1===r?`f32(${i})`:`vec${r}<f32>(${i})`,rp=(t,r)=>4===r?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:2===r?`(${t}.x + ${t}.y)`:3===r?`(${t}.x + ${t}.y + ${t}.z)`:t,rh=(t,r,i,s)=>t.startsWith("uniforms.")&&i>4?"string"==typeof r?"f16"===s?`${t}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${t}[(${r}) / 4][(${r}) % 4]`:"f16"===s?`${t}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${t}[${Math.floor(r/4)}][${r%4}]`:i>1?`${t}[${r}]`:t,rm=(t,r,i,s,a)=>{let n,o,l,u,d="number"==typeof i,c=d?i:i.length,p=[...Array(c).keys()],h=c<2?"u32":c<=4?`vec${c}<u32>`:`array<u32, ${c}>`,m=ra(r,a),f="string"==typeof m?m:m[1],g={indices:h,value:f,storage:"string"==typeof m?m:m[0],tensor:r},_=t=>"string"==typeof t?t:`${t}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=d?"uniforms.":"",w=`${b}${t}_shape`,x=`${b}${t}_strides`,v="";for(let t=0;t<c-1;t++)v+=`
    let dim${t} = current / ${rh(x,t,c)};
    let rest${t} = current % ${rh(x,t,c)};
    indices[${t}] = dim${t};
    current = rest${t};
    `;v+=`indices[${c-1}] = current;`;let M=c<2?"":`
  fn o2i_${t}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${v}
    return indices;
  }`,T=[];if(c>=2)for(let t=c-1;t>=0;t--)T.push(`${rh(x,t,c)} * (indices[${t}])`);let k=c<2?"":`
  fn i2o_${t}(indices: ${g.indices}) -> u32 {
    return ${T.join("+")};
  }`,$=(...t)=>0===c?"0u":`${g.indices}(${t.map(_).join(",")})`,C=(t,r)=>c<2?`${t}`:`${rh(t,r,c)}`,S={},P=(r,i)=>(()=>{if(g.storage===g.value)return`${t}[${r}]=${i};`;if("vec2<u32>"===g.storage&&"i32"===g.value)return`${t}[${r}]=vec2<u32>(u32(${i}), select(0u, 0xFFFFFFFFu, ${i} < 0));`;if("vec2<u32>"===g.storage&&"u32"===g.value)return`${t}[${r}]=vec2<u32>(u32(${i}), 0u);`;if("u32"===g.storage&&"vec4<bool>"===g.value)return`${t}[${r}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${i}));`;throw Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),E=r=>(()=>{if(g.storage===g.value)return`${t}[${r}]`;if("vec2<u32>"===g.storage&&"i32"===g.value)return`i32(${t}[${r}].x)`;if("vec2<u32>"===g.storage&&"u32"===g.value)return`u32(${t}[${r}].x)`;if("u32"===g.storage&&"vec4<bool>"===g.value)return`vec4<bool>(bool(${t}[${r}] & 0xFFu), bool(${t}[${r}] & 0xFF00u), bool(${t}[${r}] & 0xFF0000u), bool(${t}[${r}] & 0xFF000000u))`;throw Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),F=c<2?"":`
  fn get_${t}ByIndices(indices: ${g.indices}) -> ${f} {
    return ${E(`i2o_${t}(indices)`)};
  }`,A=c<2?"":(n=p.map(t=>`d${t}: u32`).join(", "),o=p.map(t=>`d${t}`).join(", "),`
  fn get_${t}(${n}) -> ${f} {
    return get_${t}ByIndices(${$(o)});
  }`),I=c<2?"":`
  fn set_${t}ByIndices(indices: ${g.indices}, value: ${f}) {
    ${P(`i2o_${t}(indices)`,"value")}
  }`,z=c<2?"":(l=p.map(t=>`d${t}: u32`).join(", "),u=p.map(t=>`d${t}`).join(", "),`
  fn set_${t}(${l}, value: ${f}) {
    set_${t}ByIndices(${$(u)}, value);
  }`);return{impl:()=>{let t=[],r=!1;return y.offsetToIndices&&(t.push(M),r=!0),y.indicesToOffset&&(t.push(k),r=!0),y.broadcastedIndicesToOffset&&(Object.values(S).forEach(r=>t.push(r)),r=!0),y.set&&(t.push(z),r=!0),y.setByIndices&&(t.push(I),r=!0),y.get&&(t.push(A),r=!0),y.getByIndices&&(t.push(F),r=!0),!d&&r&&t.unshift(`const ${w} = ${g.indices}(${i.join(",")});`,`const ${x} = ${g.indices}(${tj.computeStrides(i).join(",")});`),t.join(`
`)},type:g,offsetToIndices:r=>(y.offsetToIndices=!0,c<2?r:`o2i_${t}(${r})`),indicesToOffset:r=>(y.indicesToOffset=!0,c<2?r:`i2o_${t}(${r})`),broadcastedIndicesToOffset:(r,i)=>{y.broadcastedIndicesToOffset=!0;let s=`${i.name}broadcastedIndicesTo${t}Offset`;if(s in S)return`${s}(${r})`;let a=[];for(let t=c-1;t>=0;t--){let r=i.indicesGet("outputIndices",t+i.rank-c);a.push(`${C(x,t)} * (${r} % ${C(w,t)})`)}return S[s]=`fn ${s}(outputIndices: ${i.type.indices}) -> u32 {
             return ${a.length>0?a.join("+"):"0u"};
           }`,`${s}(${r})`},indices:$,indicesGet:C,indicesSet:(t,r,i)=>c<2?`${t}=${i};`:`${rh(t,r,c)}=${i};`,set:(...r)=>{if(r.length!==c+1)throw Error(`indices length must be ${c}`);let i=r[c];if("string"!=typeof i)throw Error("value must be string");let s=r.slice(0,c).map(_).join(",");return 0===c?P("0u",i):1===c?P(s[0],i):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}(${s}, ${i})`)},setByOffset:P,setByIndices:(r,i)=>c<2?P(r,i):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}ByIndices(${r}, ${i});`),get:(...r)=>{if(r.length!==c)throw Error(`indices length must be ${c}`);let i=r.map(_).join(",");return 0===c?E("0u"):1===c?E(i[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}(${i})`)},getByOffset:E,getByIndices:r=>c<2?E(r):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}ByIndices(${r})`),usage:s,name:t,strides:x,shape:w,rank:c}},rf=(t,r,i,s=1)=>rm(t,r,i,"input",s),rg=(t,r,i,s=1)=>rm(t,r,i,"output",s),r_=(t,r,i)=>rm(t,r,i,"atomicOutput",1),ry=(t,r,i,s=1)=>rm(t,r,i,"internal",s),rb=class{constructor(t,r){this.normalizedDispatchGroup=t,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${"number"==typeof t?`${t}u`:t}) { return; }`}mainStart(t=rs){let r="number"==typeof t?t:t[0],i="number"==typeof t?1:t[1],s="number"==typeof t?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||i>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw Error(`workgroup size [${r}, ${i}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*i*s>this.limits.maxComputeInvocationsPerWorkgroup)throw Error(`workgroup size [${r}, ${i}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2],n=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=a?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*i*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${i}, ${s})
  fn main(${n}) {
    ${o}
  `}appendVariableUniforms(t){0!==t.rank&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if("internal"===t.usage)throw Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let i="input"===t.usage?"read":"read_write",s="atomicOutput"===t.usage?"atomic<i32>":t.type.storage;return`@group(0) @binding(${r}) var<storage, ${i}> ${t.name}: array<${s}>;`}declareVariables(...t){return t.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if("internal"!==t.usage)throw Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(t,r,i=1){return this.uniforms.push({name:t,type:r,length:i}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let t=[];for(let{name:r,type:i,length:s}of this.uniforms)if(s&&s>4)"f16"===i?t.push(`@align(16) ${r}:array<mat2x4<${i}>, ${Math.ceil(s/8)}>`):t.push(`${r}:array<vec4<${i}>, ${Math.ceil(s/4)}>`);else{let a=null==s||1===s?i:`vec${s}<${i}>`;t.push(`${r}:${a}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(0!==this.uniforms.length)return this.uniforms.map(t=>[[12,10,1,6][["u32","f16","f32","i32"].indexOf(t.type)],t.length??1])}},rw=(t,r)=>new rb(t,r)}),nu=eA(()=>{a9(),nt(),no(),nl(),rx=(t,r)=>0!==r.length?r:[...Array(t).keys()].reverse(),rv=(t,r)=>{let i,s,a=t.dataType,n=t.dims.length,o=rx(n,r),l=(i=t.dims,s=o,tj.sortBasedOnPerm(i,rx(i.length,s))),u=t.dims,d=l;if(n<2||((t,r)=>{let i=0;for(let s=0;s<t.length;++s)if(1!==r[t[s]]){if(t[s]<i)return!1;i=t[s]}return!0})(o,t.dims))return{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tj.size(l);return{outputs:[{dims:l,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64/4)},programUniforms:[{type:12,data:Math.ceil(r/4)}]}},getShaderSource:t=>{let r=rf("input",a,u,4),i=rg("output",a,d,4);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`}};let{newShape:c,newPerm:p}=((t,r)=>{let i=[],s=[];for(let a=0;a<t.length;++a)1!==t[a]&&i.push(t[a]),1!==t[r[a]]&&s.push(r[a]);return{newShape:i,newPerm:s}})(t.dims,o),h=tj.areEqual(p,[2,3,1]),m=tj.areEqual(p,[3,1,2]);return 2===c.length||h||m?(d=[(u=h?[c[0],c[1]*c[2]]:m?[c[0]*c[1],c[2]]:c)[1],u[0]],{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tj.size(l);return{outputs:[{dims:l,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(d[1]/16),y:Math.ceil(d[0]/16)},programUniforms:[{type:12,data:r},...rl(u,d)]}},getShaderSource:t=>{let r=rf("a",a,u.length),i=rg("output",a,d.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  var<workgroup> tile : array<array<${i.type.value}, 17>, 16>;
  ${t.mainStart([16,16,1])}
    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * 16u + local_id.x;
    let input_row = workgroup_id_x * 16u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${r.getByIndices(`${r.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * 16u + local_id.x;
    let output_row = workgroup_id_y * 16u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${i.setByIndices(`${i.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`}}):{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let r=tj.size(l);return{outputs:[{dims:l,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},...rl(u,d)]}},getShaderSource:t=>{let r=rf("a",a,u.length),i=rg("output",a,d.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}

  ${((t,r,i,s)=>{let a=`fn perm(i: ${s.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`;for(let i=0;i<r;++i)a+=`a[${t[i]}]=i[${i}];`;return a+"return a;}"})(o,n,r,i)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${i.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${i.setByOffset("global_idx",r.getByIndices("aIndices"))}
  }`}}},rM=(t,r)=>{((t,r)=>{if(!t||1!==t.length)throw Error("Transpose requires 1 input.");if(0!==r.length&&r.length!==t[0].dims.length)throw Error(`perm size ${r.length} does not match input rank ${t[0].dims.length}`)})(t.inputs,r.perm),t.compute(rv(t.inputs[0],r.perm))},rT=t=>ri({perm:t.perm})}),nd=eA(()=>{a9(),nt(),nl(),nc(),nu(),rk={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},r$={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},rC={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},rS={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},rP=(t,r,i,s)=>{var a,n,o,l,u,d,c;let p,h,m,f,g,_,y,b=1===t.inputs.length?i:rG(t.inputs,i),w=b.axes;0!==w.length||b.noopWithEmptyAxes||(w=t.inputs[0].dims.map((t,r)=>r));let x=tj.normalizeAxes(w,t.inputs[0].dims.length),v=x,M=t.inputs[0],T=((t,r)=>{let i=[];if(!((t,r)=>{for(let i=0;i<t.length;++i)if(t[t.length-i-1]!==r-1-i)return!1;return!0})(t,r)){for(let s=0;s<r;++s)-1===t.indexOf(s)&&i.push(s);t.forEach(t=>i.push(t))}return i})(v,t.inputs[0].dims.length);T.length>0&&(M=t.compute(rv(t.inputs[0],T),{inputs:[0],outputs:[-1]})[0],v=((t,r)=>{let i=[];for(let s=r-t;s<r;++s)i.push(s);return i})(v.length,M.dims.length));let[k,$]=((t,r)=>{let i=[],s=t.length;for(let a=0;a<s;a++)-1===r.indexOf(a)&&i.push(t[a]);return[i,r.map(r=>t[r])]})(M.dims,v),C=k;b.keepDims&&(C=((t,r)=>{let i=t.length+r.length,s=[],a=0;for(let n=0;n<i;n++)-1===r.indexOf(n)?s.push(t[a++]):s.push(1);return s})(k,x)),t.compute((a=r,n=b.cacheKey,o=[M],l=s,u=t.inputs[0].dataType,d=C,c=$,p=o[0].dims,h=tj.size(d),m=tj.size(c),f=rf("_A",o[0].dataType,p),g=rg("output",u,d),_=64,1===h&&(_=256),y=`
          var<workgroup> aBestValues : array<f32, ${_}>;
       `,{name:a,shaderCache:{hint:`${n};${_}`,inputDependencies:["type"]},getShaderSource:t=>`
        ${t.registerUniform("reduceSize","u32").declareVariables(f,g)}
        ${y}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${t.mainStart(_)}

          let outputIndex = global_idx / ${_};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${rC[l]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${_}) {
           let candidate = f32(${f.getByOffset("offset + k")});
           bestValue = ${rk[l]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${_}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${r$[l]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${g.setByOffset("outputIndex",`${"mean"===l?`${g.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${g.type.storage}(${rS[l]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:d,dataType:u}],dispatchGroup:{x:h},programUniforms:[{type:12,data:m}]})}),{inputs:[M]})},rE=(t,r)=>{rP(t,"ReduceMeanShared",r,"mean")},rF=(t,r)=>{rP(t,"ReduceL1Shared",r,"l1")},rA=(t,r)=>{rP(t,"ReduceL2Shared",r,"l2")},rI=(t,r)=>{rP(t,"ReduceLogSumExpShared",r,"logSumExp")},rz=(t,r)=>{rP(t,"ReduceMaxShared",r,"max")},rL=(t,r)=>{rP(t,"ReduceMinShared",r,"min")},rO=(t,r)=>{rP(t,"ReduceProdShared",r,"prod")},rB=(t,r)=>{rP(t,"ReduceSumShared",r,"sum")},rD=(t,r)=>{rP(t,"ReduceSumSquareShared",r,"sumSquare")},rN=(t,r)=>{rP(t,"ReduceLogSumShared",r,"logSum")}}),nc=eA(()=>{a9(),nt(),no(),nl(),nd(),rj=t=>{if(!t||0===t.length||t.length>2)throw Error("Reduce op requires 1 or 2 inputs.");if(2===t.length&&1!==t[1].dims.length)throw Error("Invalid axes input dims.")},rR=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],rV=(t,r,i,s,a,n,o=!1,l=!1)=>{let u=[],d=i[0].dims,c=d.length,p=tj.normalizeAxes(a,c),h=!l&&0===p.length;d.forEach((t,r)=>{h||p.indexOf(r)>=0?o&&u.push(1):u.push(t)});let m=u.length,f=tj.size(u);return{name:t,shaderCache:r,getShaderSource:t=>{let r=[],a=rf("_A",i[0].dataType,c),l=rg("output",n,m),u=s(a,l,p),f=u[2];for(let t=0,i=0;t<c;t++)h||p.indexOf(t)>=0?(o&&i++,f=`for(var j${t}: u32 = 0; j${t} < ${d[t]}; j${t}++) {
                  ${u[2].includes("last_index")?`let last_index = j${t};`:""}
                  ${a.indicesSet("input_indices",t,`j${t}`)}
                  ${f}
                }`):(r.push(`${a.indicesSet("input_indices",t,l.indicesGet("output_indices",i))};`),i++);return`

        ${t.registerUniform("output_size","u32").declareVariables(a,l)}

        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${a.type.indices};
          let output_indices = ${l.offsetToIndices("global_idx")};

          ${r.join(`
`)}
          ${u[0]}       // init ops for reduce max/min
          ${u[1]}
          ${f}
          ${u[3]}
          ${4===u.length?l.setByOffset("global_idx","value"):u.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...rl(d,u)]})}},rG=(t,r)=>{let i=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(t=>i.push(Number(t))),ri({axes:i,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},rU=(t,r,i,s)=>{let a=t.inputs,n=1===a.length?i:rG(a,i);t.compute(rV(r,{hint:n.cacheKey,inputDependencies:["rank"]},[a[0]],n.noopWithEmptyAxes&&0===n.axes.length?rR:s,n.axes,a[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},rq=(t,r,i)=>{if(0===r.length)return i;let s=1,a=1;for(let i=0;i<r.length;i++)-1===r.indexOf(i)?s*=t[i]:a*=t[i];return a<32&&s>1024},rW=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceMean",s,(t,r,s)=>{let a=1;for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&(a*=i.inputs[0].dims[r]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${r.type.value}(sum / ${a});`]})):rE(t,r)},rH=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceL1",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])):rF(t,r)},rK=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceL2",s,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])):rA(t,r)},rQ=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceLogSumExp",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])):rI(t,r)},rX=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceMax",s,(t,r,i)=>{let s=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&s.push(t.indicesSet("input_indices",r,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})):rz(t,r)},rJ=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceMin",s,(t,r,i)=>{let s=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&s.push(`input_indices[${r}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})):rL(t,r)},rY=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceProd",s,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])):rO(t,r)},rZ=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceSum",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])):rB(t,r)},r0=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceSumSquare",s,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])):rD(t,r)},r1=(t,r)=>{var i,s;rq(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?(i=t,s=r,rj(i.inputs),rU(i,"ReduceLogSum",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])):rN(t,r)}}),np=eA(()=>{a9(),no(),nc(),r2=t=>{if(!t||0===t.length||t.length>2)throw Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==t[0].dataType)throw Error("Invalid input type.")},r3=(t,r)=>{r2(t.inputs),t.compute(rV("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,i,s)=>{let a=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&a.push(`input_indices[${r}] = 0;`);return[`${a.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},r4=(t,r)=>{r2(t.inputs),t.compute(rV("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,i,s)=>{let a=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&a.push(`input_indices[${r}] = 0;`);return[`${a.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},r8=t=>ri(t)}),nh=eA(()=>{a9(),nt(),na(),nl(),r6=(t,r,i)=>r&&t?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${t?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${i?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,r5=(t,r,i,s,a,n,o,l,u,d,c,p)=>{var h,m,f,g,_,y,b,w,x,v,M,T,k,$,C,S,P,E,F,A,I,z,L,O,B;let D,N,j,R,V,G,U,q,W,H,K,Q,X,J,Y,Z,ee,et,er,ei,es,ea,en,eo,el,eu,ed,ec,ep,eh,em,ef,eg,e_=Math.min(t.outputCount,1+ +!!o+ +!!l),ey=e_>1?d.pastSequenceLength:0,eb=ey+d.kvSequenceLength,ew=u&&tj.size(u.dims)>0?u:void 0,ex=[r,i];e_>1&&o&&tj.size(o.dims)>0&&ex.push(o),ew&&ex.push(ew),c&&ex.push(c),p&&ex.push(p);let ev=t.compute((h=e_,m=r,f=i,g=o,_=ew,y=d,b=ey,w=c,x=p,D=b+y.kvSequenceLength,N=[y.batchSize,y.numHeads,y.sequenceLength,D],j=h>1&&g,R=y.kvNumHeads?y.kvNumHeads:y.numHeads,V=j?[y.batchSize,R,D,y.headSize]:void 0,G=y.nReps?y.nReps:1,U=0===y.scale?1/Math.sqrt(y.headSize):y.scale,q=ru(y.headSize),W=y.headSize/q,H={x:Math.ceil(D/12),y:Math.ceil(y.sequenceLength/12),z:y.batchSize*y.numHeads},K=[{type:12,data:y.sequenceLength},{type:12,data:W},{type:12,data:D},{type:12,data:y.numHeads},{type:12,data:y.headSize},{type:1,data:U},{type:12,data:b},{type:12,data:y.kvSequenceLength},{type:12,data:G}],Q=j&&g&&tj.size(g.dims)>0,X=["type","type"],Q&&X.push("type"),_&&X.push("type"),w&&X.push("type"),x&&X.push("type"),J=[{dims:N,dataType:m.dataType,gpuDataType:0}],j&&J.push({dims:V,dataType:m.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${q};${void 0!==_};${void 0!==g};${h}`,inputDependencies:X},getRunData:()=>({outputs:J,dispatchGroup:H,programUniforms:K}),getShaderSource:t=>{let r=rf("q",m.dataType,m.dims,q),i=[r,rf("key",f.dataType,f.dims,q)];if(Q){let t=rf("past_key",g.dataType,g.dims,q);i.push(t)}_&&i.push(rf("attention_bias",_.dataType,_.dims));let s=w?rf("seq_lens",w.dataType,w.dims):void 0;s&&i.push(s);let a=x?rf("total_sequence_length_input",x.dataType,x.dims):void 0;a&&i.push(a);let n=rg("output",m.dataType,N),o=[n];j&&o.push(rg("present_key",m.dataType,V,q));let l=ro(1,q);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${r.type.storage}, 144>;
  var<workgroup> tileK: array<${r.type.storage}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...i,...o)}
  ${t.mainStart([12,12,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${1===G?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${1===G?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${r6(s,a,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Q&&j?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${j?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${l}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Q&&j?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${j?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${l}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(q){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw Error(`Unsupported components: ${q}`)}})()};
        output[outputIdx] = ${n.type.value} (sum * uniforms.alpha) + ${_?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}),{inputs:ex,outputs:e_>1?[-1,1]:[-1]})[0];t.compute((v=ev,M=d.batchSize,T=d.numHeads,k=ey,$=d.sequenceLength,C=eb,S=c,P=p,Y=ru(S?1:C),Z=64,(ee=C/Y)<64&&(Z=32),et=[{type:12,data:M},{type:12,data:T},{type:12,data:k},{type:12,data:$},{type:12,data:ee},{type:12,data:Math.ceil(C/Y/Z)}],er=rn(v.dataType,Y),ei=ro(1,Y),es=["type"],S&&es.push("type"),P&&es.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${Z};${er};${Y}`,inputDependencies:es},getShaderSource:t=>{let r=rg("x",v.dataType,v.dims,Y),i=[r],s=S?rf("seq_lens",S.dataType,S.dims):void 0;s&&i.push(s);let a=P?rf("total_sequence_length_input",P.dataType,P.dims):void 0;a&&i.push(a);let n=ro(v.dataType);return`
  var<workgroup> thread_max: array<f32, ${Z}>;
  var<workgroup> thread_sum: array<f32, ${Z}>;
  ${t.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...i)}
  ${t.mainStart([Z,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${r6(s,a,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${Z}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${S?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${ei}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${ei}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(Y){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw Error(`Unsupported components: ${Y}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${Z}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${ei}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${ei}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(Y){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw Error(`Unsupported components: ${Y}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${Z}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${r.type.value}(${n}(1.0) / ${n}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${ei}(x[offset + i]);
        x[offset + i] = ${r.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${S?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${r.type.value}(${n}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:$,z:M*T},programUniforms:et})}),{inputs:c&&p?[ev,c,p]:[ev],outputs:[]});let eM=[ev,s];e_>1&&l&&tj.size(l.dims)>0&&eM.push(l),c&&eM.push(c),p&&eM.push(p),t.compute((E=e_,F=ev,A=s,I=l,z=d,L=ey,O=c,B=p,ea=L+z.kvSequenceLength,en=z.nReps?z.nReps:1,eo=z.vHiddenSize*en,el=E>1&&I,eu=z.kvNumHeads?z.kvNumHeads:z.numHeads,ed=el?[z.batchSize,eu,ea,z.headSize]:void 0,ec=[z.batchSize,z.sequenceLength,eo],ep={x:Math.ceil(z.vHeadSize/12),y:Math.ceil(z.sequenceLength/12),z:z.batchSize*z.numHeads},eh=[{type:12,data:z.sequenceLength},{type:12,data:ea},{type:12,data:z.vHeadSize},{type:12,data:z.numHeads},{type:12,data:z.headSize},{type:12,data:eo},{type:12,data:L},{type:12,data:z.kvSequenceLength},{type:12,data:en}],em=el&&I&&tj.size(I.dims)>0,ef=["type","type"],em&&ef.push("type"),O&&ef.push("type"),B&&ef.push("type"),eg=[{dims:ec,dataType:F.dataType,gpuDataType:0}],el&&eg.push({dims:ed,dataType:F.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${void 0!==I};${E}`,inputDependencies:ef},getRunData:()=>({outputs:eg,dispatchGroup:ep,programUniforms:eh}),getShaderSource:t=>{let r=rf("probs",F.dataType,F.dims),i=[r,rf("v",A.dataType,A.dims)];em&&i.push(rf("past_value",I.dataType,I.dims));let s=O?rf("seq_lens",O.dataType,O.dims):void 0;O&&i.push(s);let a=B?rf("total_sequence_length_input",B.dataType,B.dims):void 0;B&&i.push(a);let n=[rg("output",F.dataType,ec)];return el&&n.push(rg("present_value",F.dataType,ed)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${r.type.value}, 144>;
  var<workgroup> tileV: array<${r.type.value}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...i,...n)}
  ${t.mainStart([12,12,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${1===en?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${1===en?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${r6(s,a,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${em&&el?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${el?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${r.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${em&&el?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${el?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}),{inputs:eM,outputs:e_>1?[0,2]:[0]})},r9=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p=((t,r)=>{let i=t[0],s=t[1],a=t[2],n=t[3],o=t[4],l=t[5];if(o&&l)throw Error("Attention cannot have both past and attention_bias");if(3!==i.dims.length)throw Error('Input "input" must have 3 dimensions');let u=i.dims[0],d=i.dims[1],c=i.dims[2];if(1!==a.dims.length)throw Error('Input "bias" is expected to have 1 dimensions');if(2!==s.dims.length)throw Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==c)throw Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==s.dims[1])throw Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=a.dims[0]/3,h=p,m=h;if(r.qkvHiddenSizes.length>0){if(3!==r.qkvHiddenSizes.length)throw Error("qkv_hidden_sizes attribute should have 3 elements");for(let t of r.qkvHiddenSizes)if(t%r.numHeads!=0)throw Error("qkv_hidden_sizes should be divisible by num_heads");p=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],m=r.qkvHiddenSizes[2]}if(p!==h)throw Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==p+h+m)throw Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(o){if(h!==m)throw Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==o.dims.length)throw Error('Input "past" must have 5 dimensions');if(2!==o.dims[0])throw Error('Input "past" first dimension must be 2');if(o.dims[1]!==u)throw Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==h/r.numHeads)throw Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(f=o.dims[3])}let g=d+f;if(n)throw Error("Mask not supported");if(o)throw Error("past is not supported");if(l){if(4!==l.dims.length)throw Error('Input "attention_bias" must have 4 dimensions');if(l.dims[0]!==u||l.dims[1]!==r.numHeads||l.dims[2]!==d||l.dims[3]!==g)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:u,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:d,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:c,hiddenSize:p,vHiddenSize:m,headSize:Math.floor(p/r.numHeads),vHeadSize:Math.floor(m/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}})(t.inputs,r),[h,m,f]=(i=t,a=[(s=p).batchSize,s.numHeads,s.sequenceLength,s.headSize],n=s.sequenceLength,o=s.inputHiddenSize,l=s.headSize,u={x:Math.ceil(s.headSize/12),y:Math.ceil(s.sequenceLength/12),z:s.batchSize*s.numHeads},d=[i.inputs[0],i.inputs[1],i.inputs[2]],c=[{type:12,data:n},{type:12,data:o},{type:12,data:l},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:s.hiddenSize},{type:12,data:s.hiddenSize+s.hiddenSize+s.vHiddenSize}],i.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:c}),getShaderSource:t=>{let r=rg("output_q",d[0].dataType,a),i=rg("output_k",d[0].dataType,a),s=rg("output_v",d[0].dataType,a),n=rf("input",d[0].dataType,d[0].dims),o=rf("weight",d[1].dataType,d[1].dims),l=rf("bias",d[2].dataType,d[2].dims),u=n.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${u}, 144>;
  var<workgroup> tileWeightQ: array<${u}, 144>;
  var<workgroup> tileWeightK: array<${u}, 144>;
  var<workgroup> tileWeightV: array<${u}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(n,o,l,r,i,s)}
  ${t.mainStart([12,12,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${u}(0);
    var valueK = ${u}(0);
    var valueV = ${u}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:d,outputs:[-1,-1,-1]}));return r5(t,h,m,f,t.inputs[4],void 0,void 0,void 0,t.inputs[5],p)}}),nm=eA(()=>{e0(),a9(),nt(),no(),nl(),r7=(t,r)=>{let i,{inputs:s,outputCount:a}=t,n=(i={...r,outputCount:a},ri(i));if(es.webgpu.validateInputContent&&((t,r)=>{if(!t||5!==t.length)throw Error("BatchNormalization requires 5 inputs");let i=(t,r,i)=>{let s=r.length;if(s!==t.length)throw Error(`${i}: num dimensions != ${s}`);r.forEach((r,s)=>{if(r!==t[s])throw Error(`${i}: dim[${s}] do not match`)})};if(t[0].dims.length>1){let s="NHWC"===r.format?r.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,r.spatial?2:void 0);i(t[1].dims,s,"Invalid input scale"),i(t[2].dims,s,"Invalid input B"),i(t[3].dims,s,"Invalid input mean"),i(t[4].dims,s,"Invalid input var")}else i(t[1].dims,[1],"Invalid input scale"),i(t[2].dims,[1],"Invalid input B"),i(t[3].dims,[1],"Invalid input mean"),i(t[4].dims,[1],"Invalid input var")})(s,n),r.trainingMode)throw Error("BatchNormalization trainingMode is not supported yet.");t.compute(((t,r)=>{let{epsilon:i,spatial:s,format:a}=r,n=t[0].dims,o=s?ru(n[n.length-1]):1,l="NHWC"===a&&n.length>1?o:1,u=tj.size(n)/o,d=s?n.length:n,c=rf("x",t[0].dataType,t[0].dims,o),p=rf("scale",t[1].dataType,t[1].dims,l),h=rf("bias",t[2].dataType,t[2].dims,l),m=rf("inputMean",t[3].dataType,t[3].dims,l),f=rf("inputVar",t[4].dataType,t[4].dims,l),g=rg("y",t[0].dataType,d,o);return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${o}`,inputDependencies:s?["rank","type","type","type","type"]:void 0},getShaderSource:t=>`
  const epsilon = ${i};
  ${t.registerUniform("outputSize","u32").declareVariables(c,p,h,m,f,g)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${g.offsetToIndices(`global_idx * ${o}`)};
    ${(()=>{let t="";if(s)t=`let cOffset = ${1===n.length?"0u":"NHWC"===a?`outputIndices[${n.length-1}] / ${o}`:"outputIndices[1]"};`;else if("NCHW"===a)t=`
            ${g.indicesSet("outputIndices","0","0")}
            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{t=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let r=1;r<p.rank;r++)t+=`cIndices[${r}] = outputIndices[${r}];`;t+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return t})()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${h.getByOffset("cOffset")};
    let inputMean = ${m.getByOffset("cOffset")};
    let inputVar = ${f.getByOffset("cOffset")};
    let x = ${c.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${g.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:s?[{type:12,data:u},...rl(n)]:[{type:12,data:u}]})}})(s,n))}}),nf=eA(()=>{nt(),nl(),ie=t=>{var r;let i,s,a,n,o,l,u,d;(t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw Error("number of channels should be 320, 640 or 1280");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")})(t.inputs),t.compute((i=(r=t.inputs)[0].dims,s=r[0].dims[2],a=tj.size(i)/4,n=r[0].dataType,o=rf("input",n,i,4),l=rf("bias",n,[s],4),u=rf("residual",n,i,4),d=rg("output",n,i,4),{name:"BiasAdd",getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:t=>`
  const channels = ${s}u / 4;
  ${t.declareVariables(o,l,u,d)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let value = ${o.getByOffset("global_idx")}
      + ${l.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${d.setByOffset("global_idx","value")}
  }`}))}}),ng=eA(()=>{a9(),nt(),no(),nl(),it=(t,r,i,s,a,n=t.dataType,o,l)=>{let u=[{type:12,data:Math.ceil(tj.size(t.dims)/4)}];return o&&u.push(...o),{name:r,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:r=>{var a,o,u,d,c,p,h;let m,f,g,_,y;return a=r,o=tj.size(t.dims),u=t.dataType,d=n,c=i,p=s,h=l,m=Math.ceil(o/4),f="",f="string"==typeof c?`${c}(a)`:c("a"),g=rf("inputData",u,[m],4),_=rg("outputData",d,[m],4),y=[{name:"vec_size",type:"u32"}],h&&y.push(...h),`
      ${a.registerUniforms(y).declareVariables(g,_)}

  ${p??""}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${g.getByOffset("global_idx")};
    ${_.setByOffset("global_idx",f)}
  }`},getRunData:r=>({outputs:[{dims:t.dims,dataType:n}],dispatchGroup:{x:Math.ceil(tj.size(r[0].dims)/64/4)},programUniforms:u})}},ir=t=>{t.compute(it(t.inputs[0],"Abs","abs"))},ii=t=>{t.compute(it(t.inputs[0],"Acos","acos"))},is=t=>{t.compute(it(t.inputs[0],"Acosh","acosh"))},ia=t=>{t.compute(it(t.inputs[0],"Asin","asin"))},io=t=>{t.compute(it(t.inputs[0],"Asinh","asinh"))},il=t=>{t.compute(it(t.inputs[0],"Atan","atan"))},iu=t=>{t.compute(it(t.inputs[0],"Atanh","atanh"))},id=t=>ri(t),ic=(t,r)=>{let i;switch(r.to){case 10:i="vec4<f16>";break;case 1:i="vec4<f32>";break;case 12:i="vec4<u32>";break;case 6:i="vec4<i32>";break;case 9:i="vec4<bool>";break;default:throw RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}t.compute(it(t.inputs[0],"Cast",i,void 0,r.cacheKey,r.to))},ip=(t,r)=>{let i=r||(t=>{let r,i,s=t.length>=2&&0!==t[1].data,a=t.length>=3&&0!==t[2].data;switch(t[0].dataType){case 1:r=s?t[1].getFloat32Array()[0]:-34028234663852886e22,i=a?t[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?t[1].getUint16Array()[0]:64511,i=a?t[2].getUint16Array()[0]:31743;break;default:throw Error("Unsupport data type")}return ri({min:r,max:i})})(t.inputs),s=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"Clip",t=>`clamp(${t}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,i.cacheKey,void 0,[{type:t.inputs[0].dataType,data:i.min},{type:t.inputs[0].dataType,data:i.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},ih=t=>{t.compute(it(t.inputs[0],"Ceil","ceil"))},im=t=>{t.compute(it(t.inputs[0],"Cos","cos"))},ig=t=>{t.compute(it(t.inputs[0],"Cosh","cosh"))},i_=t=>ri(t),iy=(t,r)=>{let i=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${i}(${r.alpha});

  fn elu_f32(a: ${i}) -> ${i} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${i}>) -> vec4<${i}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},ib=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,iw=t=>{let r=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"Erf",t=>`erf_vf32(${t})`,ib(r)))},ix=t=>{t.compute(it(t.inputs[0],"Exp","exp"))},iv=t=>{t.compute(it(t.inputs[0],"Floor","floor"))},iM=t=>{let r=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,ib(r)))},iT=(t,r)=>{let i=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${i}>(0.0))`,`const leaky_relu_alpha_ = ${i}(${r.alpha});`,r.cacheKey))},ik=t=>{t.compute(it(t.inputs[0],"Not",t=>`!${t}`))},i$=t=>{t.compute(it(t.inputs[0],"Neg",t=>`-${t}`))},iC=t=>{t.compute(it(t.inputs[0],"Reciprocal",t=>`1.0/${t}`))},iS=t=>{let r=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},iP=t=>{t.compute(it(t.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},iE=t=>ri(t),iF=(t,r)=>{let i=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"HardSigmoid",t=>`max(vec4<${i}>(0.0), min(vec4<${i}>(1.0), ${r.alpha} * ${t} + vec4<${i}>(${r.beta})))`,void 0,r.cacheKey))},iA=t=>{t.compute(it(t.inputs[0],"Sin","sin"))},iI=t=>{t.compute(it(t.inputs[0],"Sinh","sinh"))},iz=t=>{t.compute(it(t.inputs[0],"Sqrt","sqrt"))},iL=t=>{t.compute(it(t.inputs[0],"Tan","tan"))},iO=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,iB=t=>{t.compute(it(t.inputs[0],"Tanh",iO))},iD=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${iO("v")};
}
`,iN=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,ij=t=>{let r=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"FastGelu",iN,iD(r),void 0,t.inputs[0].dataType))},iR=(t,r)=>{let i=ro(t.inputs[0].dataType);return t.compute(it(t.inputs[0],"ThresholdedRelu",t=>`select(vec4<${i}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${i}>(${r.alpha});`,r.cacheKey)),0},iV=t=>{t.compute(it(t.inputs[0],"Log","log"))},iG=t=>`quick_gelu_impl(${t})`,iU=(t,r)=>{let i,s,a=ro(t.inputs[0].dataType);t.compute(it(t.inputs[0],"QuickGelu",iG,(i=a,s=r.alpha,`
const alpha = vec4<${i}>(${s});
const one = ${i}(1.0);
const zero = ${i}(0.0);

fn quick_gelu_impl(x: vec4<${i}>) -> vec4<${i}> {
  let v = x *alpha;
  var x1 : vec4<${i}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`),r.cacheKey,t.inputs[0].dataType))}}),n_=eA(()=>{nt(),nl(),ng(),iq=t=>{var r;let i,s,a,n,o,l;(t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw Error("hidden state should be 2560, 5120 or 10240");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")})(t.inputs),t.compute(((i=(r=t.inputs)[0].dims.slice())[2]=i[2]/2,s=rf("input",r[0].dataType,r[0].dims,4),a=rf("bias",r[0].dataType,[r[0].dims[2]],4),n=rg("output",r[0].dataType,i,4),o=tj.size(i)/4,l=rn(r[0].dataType),{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:t=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${t.declareVariables(s,a,n)}

  ${ib(l)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}))}}),ny=eA(()=>{a9(),nt(),nl(),iW=(t,r,i,s,a,n)=>{t.compute(((t,r,i,s,a,n,o=i.dataType)=>{let l=i.dims.map(t=>Number(t)??1),u=s.dims.map(t=>Number(t)??1),d=!tj.areEqual(l,u),c=l,p=tj.size(l),h=!1,m=!1,f=[d];if(d){let t=tN.calcShape(l,u,!1);if(!t)throw Error("Can't perform binary op on the given tensors");c=t.slice(),p=tj.size(c);let r=1===tj.size(l),i=1===tj.size(u),s=l.length>0&&l[l.length-1]%4==0,a=u.length>0&&u[u.length-1]%4==0;f.push(r),f.push(i),f.push(s),f.push(a);let n=1;for(let t=1;t<c.length;t++){let r=l[l.length-t];if(r===u[u.length-t])n*=r;else break}n%4==0?(m=!0,h=!0):(r||i||s||a)&&(h=!0)}else h=!0;return f.push(h),{name:t,shaderCache:{hint:r+f.map(t=>t.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:t=>((t,r,i,s,a,n,o,l,u,d,c,p)=>{let h,m;"string"==typeof l?h=m=(t,r)=>`${l}((${t}),(${r}))`:"function"==typeof l?h=m=l:(h=l.scalar,m=l.vector);let f=rg("outputData",c,s.length,4),g=rf("aData",u,r.length,4),_=rf("bData",d,i.length,4),y;if(a)if(n){let t=1===tj.size(r),s=1===tj.size(i),a=r.length>0&&r[r.length-1]%4==0,n=i.length>0&&i[i.length-1]%4==0;y=t||s?f.setByOffset("global_idx",m(t?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),s?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",m(o||a?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||n?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else y=f.setByOffset("global_idx",m(g.getByOffset("global_idx"),_.getByOffset("global_idx")));else{if(!n)throw Error("no necessary to use scalar implementation for element-wise binary op implementation.");let t=(t,r,i="")=>{let s=`aData[indexA${r}][componentA${r}]`,a=`bData[indexB${r}][componentB${r}]`;return`
            let outputIndices${r} = ${f.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offsetA${r} = ${g.broadcastedIndicesToOffset(`outputIndices${r}`,f)};
            let offsetB${r} = ${_.broadcastedIndicesToOffset(`outputIndices${r}`,f)};
            let indexA${r} = offsetA${r} / 4u;
            let indexB${r} = offsetB${r} / 4u;
            let componentA${r} = offsetA${r} % 4u;
            let componentB${r} = offsetB${r} % 4u;
            ${t}[${r}] = ${i}(${h(s,a)});
          `};y=9===c?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("outputData[global_idx]",0)}
            ${t("outputData[global_idx]",1)}
            ${t("outputData[global_idx]",2)}
            ${t("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(g,_,f)}

        ${p??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${y}
      }`})(t,l,u,c,h,d,m,a,i.dataType,s.dataType,o,n),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(tj.size(c)/4)},...rl(l,u,c)]})}})(r,a??"",t.inputs[0],t.inputs[1],i,s,n))},iH=t=>{iW(t,"Add",(t,r)=>`${t}+${r}`)},iK=t=>{iW(t,"Div",(t,r)=>`${t}/${r}`)},iQ=t=>{iW(t,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},iX=t=>{iW(t,"Mul",(t,r)=>`${t}*${r}`)},iJ=t=>{let r=rf("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;iW(t,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${"i32"===r?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},iY=t=>{iW(t,"Sub",(t,r)=>`${t}-${r}`)},iZ=t=>{iW(t,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},i0=t=>{iW(t,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},i1=t=>{iW(t,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},i2=t=>{iW(t,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),nb=eA(()=>{a9(),nt(),no(),nl(),i3=(t,r)=>{let i=t.inputs,s=i[0].dims,a=tj.normalizeAxis(r.axis,s.length);var n=i,o=a;if(!n||n.length<1)throw Error("too few inputs");let l=n[0],u=l.dataType,d=l.dims.length;n.forEach((t,r)=>{if(0!==r){if(t.dataType!==u)throw Error("input tensors should be one type");if(t.dims.length!==d)throw Error("input tensors should have the same shape");t.dims.forEach((t,r)=>{if(r!==o&&t!==l.dims[r])throw Error("non concat dimensions must match")})}});let c=s.slice();c[a]=i.reduce((t,r)=>t+(r.dims.length>a?r.dims[a]:0),0);let p=i.filter(t=>tj.size(t.dims)>0);t.compute(((t,r,i,s)=>{let a=tj.size(i),n=Array(t.length),o=Array(t.length),l=0,u=[],d=[],c=[{type:12,data:a}];for(let i=0;i<t.length;++i)l+=t[i].dims[r],n[i]=l,d.push(t[i].dims.length),o[i]=rf(`input${i}`,s,d[i]),u.push("rank"),c.push({type:12,data:n[i]});for(let r=0;r<t.length;++r)c.push(...rl(t[r].dims));c.push(...rl(i));let p=rg("output",s,i.length),h=p.indicesGet("indices",r),m=Array.from(Array(n.length).keys()).map(t=>`uniforms.sizeInConcatAxis${t}`).join(",");return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c}),getShaderSource:r=>{let i,s;return`

  ${(()=>{r.registerUniform("outputSize","u32");for(let i=0;i<t.length;i++)r.registerUniform(`sizeInConcatAxis${i}`,"u32");return r.declareVariables(...o,p)})()}

  ${i=n.length,s=m,`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${i}u>(${s});
    for (var i: u32 = 0u; i < ${i}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${i}u;
  }`}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${m});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${((t,r)=>{let i=t.length,s=[];for(let a=0;a<i;++a){let n=r.setByOffset("global_idx",t[a].getByIndices("indices"));1===i?s.push(n):0===a?s.push(`if (inputIndex == ${a}u) { ${n} }`):a===i-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${a}) { ${n} }`)}return s.join(`
`)})(o,p)}
  }`}}})(p,a,c,i[0].dataType),{inputs:p})},i4=t=>ri({axis:t.axis})}),nw=eA(()=>{a9(),nt(),i8=(t,r,i="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${i}(uniforms.clip_min)), ${r}(${i}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${i}(uniforms.alpha) * value + ${i}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${i}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw Error(`Unsupported activation ${t.activation}`)}},i6=(t,r)=>{"Clip"===t.activation?r.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):"HardSigmoid"===t.activation?r.push({type:1,data:t.alpha},{type:1,data:t.beta}):"LeakyRelu"===t.activation&&r.push({type:1,data:t.alpha})},i5=(t,r)=>{"Clip"===t.activation?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===t.activation?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===t.activation&&r.push({name:"alpha",type:"f32"})},i9=t=>{let r=t?.activation||"";if("HardSigmoid"===r){let[i,s]=t?.activation_params||[.2,.5];return{activation:r,alpha:i,beta:s}}if("Clip"===r){let[i,s]=t?.activation_params||[tG,tU];return{activation:r,clipMax:s,clipMin:i}}if("LeakyRelu"===r){let[i]=t?.activation_params||[.01];return{activation:r,alpha:i}}return{activation:r}}}),nx=eA(()=>{i7=(t,r)=>{switch(t){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw Error(`${t}-component is not supported.`)}},se=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),nv=eA(()=>{st=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),nM=eA(()=>{a9(),nt(),nl(),nw(),sr=(t,r,i,s,a)=>{let n=s-i;return`
      ${Array.from({length:i}).map((i,o)=>`
      if (${rh(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(t,o,rh(a,o+n,s))}
      } else {
        ${r.indicesSet(t,o,0)}
      }`).join("")}
`},si=(t,r,i,s,a=!1,n)=>{let o=t[0].dims,l=t[1].dims,u=o[o.length-2],d=l[l.length-1],c=o[o.length-1],p=ru(d),h=ru(c),m=ru(u),f=tj.size(i)/p/m,g=t.length>2,_=s?s.slice(0,-2):i.slice(0,-2),y=[tj.size(_),u,d],b=[{type:12,data:f},{type:12,data:u},{type:12,data:d},{type:12,data:c}];return i6(r,b),b.push(...rl(_,o,l)),g&&b.push(...rl(t[2].dims)),b.push(...rl(y)),{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${p};${h};${m};${a}`,inputDependencies:g?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(i):i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:b}),getShaderSource:s=>{let n=ry("batch_dims",t[0].dataType,_.length),u=rf("a",t[0].dataType,o.length,h),d=rf("b",t[1].dataType,l.length,p),c=rg("output",t[0].dataType,y.length,p),f=rn(c.type.tensor),b=i8(r,c.type.value,f),w=[u,d],x="";if(g){let r=a?p:1;w.push(rf("bias",t[2].dataType,t[2].dims.length,r)),x=`${a?`value += bias[col / ${r}];`:`value += ${c.type.value}(bias[row + i]);`}`}let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return i5(r,v),`
  ${s.registerUniforms(v).registerInternalVariables(n).declareVariables(...w,c)}
  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${p})) * ${p};
    var index1 = global_idx / (uniforms.N / ${p});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${2===i.length?"":`let batch_indices = ${n.offsetToIndices("batch")};`}

    var a_indices: ${u.type.indices};
    ${sr("a_indices",u,u.rank-2,n.rank,"batch_indices")}
    ${u.indicesSet("a_indices",u.rank-2,0)}
    ${u.indicesSet("a_indices",u.rank-1,0)}
    let a_offset = ${u.indicesToOffset("a_indices")};

    var b_indices: ${d.type.indices};
    ${sr("b_indices",d,d.rank-2,n.rank,"batch_indices")}
    ${d.indicesSet("b_indices",d.rank-2,0)}
    ${d.indicesSet("b_indices",d.rank-1,0)}
    let b_offset = ${d.indicesToOffset("b_indices")};
    var values: array<${c.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${(()=>{let t=`var a_data: ${u.type.value};`;for(let r=0;r<h;r++)t+=`
              let b_data${r} = b[(b_offset + (k + ${r}) * uniforms.N + col) / ${p}];`;for(let r=0;r<m;r++){t+=`a_data = a[(a_offset + (row + ${r}) * uniforms.K + k) / ${h}];`;for(let i=0;i<h;i++)t+=`
            values[${r}] = fma(${d.type.value}(a_data${1===h?"":`[${i}]`}), b_data${i}, values[${r}]);
`}return t})()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${x}
      ${b}
      let cur_indices = ${c.type.indices}(batch, row + i, col);
      let offset = ${c.indicesToOffset("cur_indices")};
      ${c.setByOffset(`offset / ${p}`,"value")};
    }
  }
  `}}}}),nT=eA(()=>{a9(),nt(),nl(),nw(),nM(),nx(),ss=(t,r,i="f32",s,a=!1,n=32,o=!1,l=32)=>{let u,d,c,p,h=r[1]*t[1],m=r[0]*t[0],f=a?h:n,g=a?n:h,_=f/r[0],y=n/r[1];if(!((a&&4===_&&4===t[1]||!a&&(3===_||4===_))&&f%r[0]==0&&n%r[1]==0&&4===t[0]))throw Error(`If transposeA ${a} is true, innerElementSize ${_} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${_} must be 3 or 4.
  tileAWidth ${f} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${_}<${i}>, ${f/_}>, ${g}>;
var<workgroup> mm_Bsub: array<array<vec4<${i}>, ${m/t[0]}>, ${n}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${_};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${h};

  let num_tiles = ${o?`${Math.ceil(l/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

  var acc: array<vec4<${i}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${y};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${u=a,d=s,u?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${d?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${d?", batchIndices":""});
        `}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${3===_?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${c=a,p=_,c?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${3===p?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${3===p?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${3===p?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},sa=(t,r)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,sn=(t,r,i="f32",s,a=!1,n=32,o=!1,l=32,u=!1)=>{let d=t[1]*r[1],c=t[0]*r[0],p=a?d:n,h=a?n:d;if(h%r[1]!=0||p%r[0]!=0||n%r[1]!=0)throw Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let m=h/r[1],f=p/r[0],g=n/r[1],_=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          ${sa(a,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${i}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${m};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${g};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${sa(a,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${i}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${a?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];"}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${i}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${i}, ${c}>, ${n}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(l/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

    var acc : array<array<${i}, colPerThread>, rowPerThread>;
    ${_}
  }
`},so=(t,r,i,s,a=!1,n)=>{let o=t[0].dims,l=t[1].dims,u=o.slice(0,-2),d=l.slice(0,-2),c=s?s.slice(0,-2):i.slice(0,-2),p=tj.size(c),h=o[o.length-2],m=o[o.length-1],f=l[l.length-1],g=m%4==0&&f%4==0,_=h<=8?[4,1,1]:[4,4,1],y=[8,8,1],b=[Math.ceil(f/y[0]/_[0]),Math.ceil(h/y[1]/_[1]),Math.ceil(p/y[2]/_[2])],w=g?4:1,x=[...u,h,m/w],v=x.length,M=[...d,m,f/w],T=M.length,k=[p,h,f/w],$=[{type:6,data:h},{type:6,data:f},{type:6,data:m}];i6(r,$),$.push(...rl(c,x,M));let C=["rank","rank"],S=t.length>2;return S&&($.push(...rl(t[2].dims)),C.push("rank")),$.push(...rl(k)),{name:"MatMul",shaderCache:{hint:`${_};${r.activation};${g};${a}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n?n(i):i,dataType:t[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:$}),getShaderSource:i=>{let s=c.length,n=ry("batchDims",t[0].dataType,s,1),o=rn(t[0].dataType),l=rf("a",t[0].dataType,v,w),u=rf("b",t[1].dataType,T,w),d=rg("result",t[0].dataType,k.length,w),p=[l,u];if(S){let r=a?w:1;p.push(rf("bias",t[2].dataType,t[2].dims.length,r))}let h=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];i5(r,h);let m=rn(d.type.tensor),f=((t,r,i,s,a=!1)=>{let[n,o,l,u]=s,d=rn(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${i7(t,d)} {
      var value = ${i7(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${sr("aIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${i7(t,d)} {
      var value = ${i7(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${l.type.indices};
        ${sr("bIndices",l,l.rank-2,n.rank,"batchIndices")}
        ${l.indicesSet("bIndices",l.rank-2,"u32(row)")}
        ${l.indicesSet("bIndices",l.rank-1,"u32(colIn)")}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${i7(t,d)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${a?"bias[colIn]":`${i7(t,d)}(bias[row])`};`:""}
        ${i}
        ${u.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `})(w,S,i8(r,d.type.value,m),[n,l,u,d],a);return`
  ${i.registerUniforms(h).registerInternalVariables(n).declareVariables(...p,d)}
  ${f}
  ${g?ss(_,y,o,n):sn(_,y,o,n)}
                   `}}}}),nk=eA(()=>{a9(),ne(),nl(),nw(),nx(),nv(),nT(),sl=(t,r,i,s,a,n,o,l,u)=>{let d="NHWC"===r.format,c=d?t[0].dims[3]:t[0].dims[1],p=i[0],h=d?i[2]:i[3],m=d?i[1]:i[2],f=d?i[3]:i[1],g=d&&(c%4==0||c%3==0)&&f%4==0,_=d?f:h*m,y=d?h*m:f,b=[8,8,1],w=s<=8?[4,1,1]:[4,4,1],x=[Math.ceil(_/b[0]/w[0]),Math.ceil(y/b[1]/w[1]),Math.ceil(p/b[2]/w[2])];tB("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=g?d&&c%4!=0?3:4:1,M=b[1]*w[1],T=b[0]*w[0],k=Math.max(b[0]*v,b[1]),$=s%M==0,C=a%T==0,S=n%k==0,P=g?[v,4,4]:[1,1,1],E=[{type:6,data:s},{type:6,data:a},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];i6(r,E),E.push(...rl(t[0].dims,t[1].dims));let F=["rank","rank"];return o&&(E.push(...rl(t[2].dims)),F.push("rank")),E.push(...rl(i)),{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${g};${$};${C};${S};${M};${T};${k}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:u?u(i):i,dataType:t[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:E}),getShaderSource:s=>{let a=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];i5(r,a);let n=g?4:1,u=rn(t[0].dataType),c=`
      fn setOutputAtIndex(flatIndex : i32, value : ${g?`vec4<${u}>`:u}) {
        result[flatIndex] = ${g?`vec4<${u}>`:u}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${g?`vec4<${u}>`:u}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${g?"/ 4":""}, value);
      }`,p=[rf("x",t[0].dataType,t[0].dims.length,3===v?1:v),rf("w",t[1].dataType,t[1].dims.length,n)],h=rg("result",t[0].dataType,i.length,n);if(o){let r=rf("bias",t[2].dataType,t[2].dims.length,n);p.push(r),c+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${g?`vec4<${u}>`:u} {
          return bias[coords.${d?"w":"y"}${g?"/ 4":""}];
        }`}return`
        ${st("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${s.registerUniforms(a).declareVariables(...p,h)}
        ${c}
        ${((t,r,i,s,a=!1,n,o=4,l=4,u=4,d="f32")=>{let c=t=>{switch(t){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw Error(`innerElementSize ${t} is not supported.`)}},p=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,h=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,m=t?"row":"col",f=t?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${m} / outWidth;
    let outCol = ${m} % outWidth;

    let WRow = ${f} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${f} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${f} % inChannels;
    var resData = ${i7(o,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"} && xCol >= 0 && xCol < ${t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) {
      ${p}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(t=>{switch(t){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw Error(`innerElementSize ${t} is not supported.`)}})(o)}
    }
    return resData;`,_=t?r&&s?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${i7(o,d)}(0.0);`:s&&i?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${i7(o,d)}(0.0);`,y=t?s&&i?c(l):`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${c(l)}
    }
    return ${i7(l,d)}(0.0);`:`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${c(l)}
    }
    return ${i7(l,d)}(0.0);`,b=i7(u,d),w=t?i7(o,d):i7(l,d),x=t?i7(l,d):i7(o,d),v=i8(n,b,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${t?_:y}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${t?y:_}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${b}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${h}
      ${se(a)}
      ${v}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`})(d,$,C,S,o,r,P[0],P[1],P[2],u)}
        ${g?ss(w,b,u,void 0,!d,k):sn(w,b,u,void 0,!d,k,!1,void 0,l)}`}}}}),n$=eA(()=>{a9(),ne(),nt(),nl(),nw(),nx(),su=t=>"number"==typeof t?[t,t,t]:t,sd=(t,r)=>r<=1?t:t+(t-1)*(r-1),sc=(t,r,i,s,a)=>{null==a&&(a=((t,r,i,s=1)=>{let a=sd(r,s);return Math.floor((t[0]*(i-1)-i+a)/2)})(t,r[0],s[0]));let n=[0,0,0,i];for(let i=0;i<3;i++)t[i]+2*a>=r[i]&&(n[i]=Math.trunc((t[i]-r[i]+2*a)/s[i]+1));return n},sp=(t,r,i,s,a,n=!1,o="channelsLast")=>{let l,u,d,c,p;if("channelsLast"===o)[l,u,d,c,p]=t;else if("channelsFirst"===o)[l,p,u,d,c]=t;else throw Error(`Unknown dataFormat ${o}`);let[h,,m,f,g]=r,[_,y,b]=su(i),[w,x,v]=su(s),M=sd(m,w),T=sd(f,x),k=sd(g,v),{padInfo:$,outDepth:C,outHeight:S,outWidth:P}=((t,r,i,s,a,n,o,l,u,d)=>{let c,p,h,m;if("VALID"===t&&(t=0),"number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t};let f=sc([r,i,s,1],[l,u,d],1,[a,n,o],t);p=f[0],h=f[1],m=f[2]}else if(Array.isArray(t)){if(!t.every((t,r,i)=>t===i[0]))throw Error(`Unsupported padding parameter: ${t}`);c={top:t[0],bottom:t[1],left:t[2],right:t[3],front:t[4],back:t[5]};let f=sc([r,i,s,1],[l,u,d],1,[a,n,o],t[0]);p=f[0],h=f[1],m=f[2]}else if("SAME_UPPER"===t){p=Math.ceil(r/a),h=Math.ceil(i/n),m=Math.ceil(s/o);let t=(p-1)*a+l-r,f=(h-1)*n+u-i,g=(m-1)*o+d-s,_=Math.floor(t/2),y=Math.floor(f/2),b=Math.floor(g/2);c={top:y,bottom:f-y,left:b,right:g-b,front:_,back:t-_}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outDepth:p,outHeight:h,outWidth:m}})(a,u,d,c,_,y,b,M,T,k),E=n?h*p:h,F=[0,0,0,0,0];return"channelsFirst"===o?F=[l,E,C,S,P]:"channelsLast"===o&&(F=[l,C,S,P,E]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:C,outHeight:S,outWidth:P,outChannels:E,padInfo:$,strideDepth:_,strideHeight:y,strideWidth:b,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:M,effectiveFilterHeight:T,effectiveFilterWidth:k,dilationDepth:w,dilationHeight:x,dilationWidth:v,inShape:t,outShape:F,filterShape:r}},sh=(t,r,i,s,a,n)=>{let o="channelsLast"===n,l=[Math.ceil((t=>{let r=1;for(let i=0;i<t.length;i++)r*=t[i];return r})((o?t[0].dims[3]:t[0].dims[1],{x:i.map((t,r)=>r)}).x.map(t=>i[t]))/64),1,1];tB("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:tj.size(i)},{type:12,data:s},{type:12,data:a},{type:12,data:r.strides},{type:12,data:r.dilations}];i6(r,u),u.push(...rl(t[0].dims,t[1].dims));let d=["rank","rank"],c=3===t.length;return c&&(u.push(...rl(t[2].dims)),d.push("rank")),u.push(...rl(i)),{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:n=>{let l=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:a.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];i5(r,l);let u=rn(t[0].dataType),d=rf("x",t[0].dataType,t[0].dims.length,1),p=rf("W",t[1].dataType,t[1].dims.length,1),h=[d,p],m=rg("result",t[0].dataType,i.length,1),f="";if(c){let r=rf("bias",t[2].dataType,t[2].dims.length,1);h.push(r),f+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${u} {
          return bias[${o?rh("coords",4,5):rh("coords",1,5)}];
        }`}let g=i7(1,u),_=i8(r,g,u);return`
            ${f}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${d.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${p.getByIndices("aIndices")};
            }
          ${n.registerUniforms(l).declareVariables(...h,m)}
          ${n.mainStart()}
          ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${m.offsetToIndices("global_idx")};
              let batch = ${rh("coords",0,d.rank)};
              let d2 = ${o?rh("coords",d.rank-1,d.rank):rh("coords",1,d.rank)};
              let xFRCCorner = vec3<u32>(${o?rh("coords",1,d.rank):rh("coords",2,d.rank)},
              ${o?rh("coords",2,d.rank):rh("coords",3,d.rank)},
              ${o?rh("coords",3,d.rank):rh("coords",4,d.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?rh("uniforms.x_shape",1,d.rank):rh("uniforms.x_shape",2,d.rank)};
              let xShapeZ = ${o?rh("uniforms.x_shape",2,d.rank):rh("uniforms.x_shape",3,d.rank)};
              let xShapeW = ${o?rh("uniforms.x_shape",3,d.rank):rh("uniforms.x_shape",4,d.rank)};
              let xShapeU = ${o?rh("uniforms.x_shape",4,d.rank):rh("uniforms.x_shape",1,d.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${c?"value = value + getBiasByOutputCoords(coords)":""};
              ${_}
              result[global_idx] = f32(value);
          }`}}}}),nC=eA(()=>{a9(),nt(),nl(),nw(),sm=(t,r,i,s)=>{let a=t.length>2,n=a?"value += b[output_channel];":"",o=t[0].dims,l=t[1].dims,u="NHWC"===r.format,d=u?i[3]:i[1],c=d/r.group,p=u&&c>=4?ru(d):1,h=tj.size(i)/p,m=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:c}];return i6(r,m),m.push(...rl(o,[l[0],l[1],l[2],l[3]/p])),m.push(...rl([i[0],i[1],i[2],i[3]/p])),{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${p}`,inputDependencies:a?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(i):i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:m}),getShaderSource:s=>{let d=rg("output",t[0].dataType,i.length,p),c=rn(d.type.tensor),h=i8(r,d.type.value,c),m=rf("x",t[0].dataType,o.length),f=rf("w",t[1].dataType,l.length,p),g=[m,f];a&&g.push(rf("b",t[2].dataType,t[2].dims,p));let _=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];i5(r,_);let y=u?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${m.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${f.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${m.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${f.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${s.registerUniforms(_).declareVariables(...g,d)}

  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${d.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${p} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${u?2:1}];

    var value: ${d.type.value} = ${d.type.value}(0);
    ${y}
    ${n}
    ${h}
    ${d.setByOffset("global_idx","value")}
  }`}}},sf=(t,r,i,s)=>{let a=t.length>2,n=ru(i[3]),o=ru(i[2]),l=tj.size(i)/n/o,u=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/n],d=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/n],c=[i[0],i[1],i[2],i[3]/n],p=[{type:12,data:l},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];i6(r,p),p.push(...rl(u,d,c));let h=(o-1)*r.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${o};${h};${d[0]};${d[1]}`,inputDependencies:a?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(i):i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p}),getShaderSource:i=>{let s=rg("output",t[0].dataType,c.length,n),l=rn(s.type.tensor),p=i8(r,s.type.value,l),m=rf("x",t[0].dataType,u.length,n),f=rf("w",t[1].dataType,d.length,n),g=[m,f];a&&g.push(rf("b",t[2].dataType,t[2].dims,n));let _=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return i5(r,_),`
  ${i.registerUniforms(_).declareVariables(...g,s)}
  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${m.type.value}, ${h}>;
    var values: array<${s.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${m.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${m.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${f.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${a?"value += b[output_channel];":""}
      ${p}
      ${s.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),nS=eA(()=>{nt(),nk(),n$(),nT(),nC(),nw(),nM(),nu(),sg=[2,3,1,0],s_=(t,r)=>{let i=t.kernelShape.slice();i.length<r[1].dims.length-2&&i.push(...Array(r[1].dims.length-2-i.length).fill(0));for(let t=2;t<r[1].dims.length;++t)0===i[t-2]&&(i[t-2]=r[1].dims[t]);let s=t.pads.slice();tR.adjustPadsBasedOnAutoPad(r[0].dims,t.strides,t.dilations,i,s,"NHWC"===t.format,t.autoPad);let a=Object.assign({},t);return Object.assign(a,{kernelShape:i,pads:s}),a},sy=t=>{let r=i9(t),i=t.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],format:i,dilations:t.dilations,group:t.group,kernelShape:t.kernel_shape,pads:t.pads,strides:t.strides,wIsConst:t.w_is_const(),...r,cacheKey:`${t.format};${r.activation};`}},sb=(t,r,i,s)=>{var a,n,o,l,u,d;let c,p,h,m,f,g,_="NHWC"===i.format,y=(a=r[0].dims,n=r[1].dims,o=i.dilations,l=i.pads,u=i.strides,d=_,c=a[0],h=(p=a.slice(d?1:2,d?3:4)).length,m=n[0],f=n.slice(2).map((t,r)=>t+(t-1)*(o[r]-1)),(g=p.map((t,r)=>t+l[r]+l[r+h]).map((t,r)=>Math.floor((t-f[r]+u[r])/u[r]))).splice(0,0,c),g.splice(d?3:1,0,m),g);if(1!==i.group){let a=[r[0]];if(_){let s=t.kernelCustomData.wT??t.compute(rv(r[1],sg),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=s),a.push(s)}else a.push(r[1]);3===r.length&&a.push(r[2]),!t.adapterInfo.isArchitecture("ampere")&&_&&r[1].dims[0]===i.group&&1===r[1].dims[1]&&1===i.dilations[0]&&1===i.dilations[1]?t.compute(sf(a,i,y,s),{inputs:a}):t.compute(sm(a,i,y,s),{inputs:a});return}let b=3===r.length,w=r[0].dims[_?1:2],x=r[0].dims[_?2:3],v=r[0].dims[_?3:1],M=r[1].dims[2],T=r[1].dims[3],k=y[_?1:2],$=y[_?2:3],C=y[_?3:1],S=_&&M===w&&T===x&&0===i.pads[0]&&0===i.pads[1];if(S||1===M&&1===T&&1===i.dilations[0]&&1===i.dilations[1]&&1===i.strides[0]&&1===i.strides[1]&&0===i.pads[0]&&0===i.pads[1]){let a=y[0],n,o,l,u=[];if(_){let s=t.kernelCustomData.wT??t.compute(rv(r[1],sg),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];if(i.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=s),S){let t=w*x*v;n=r[0].reshape([1,a,t]),o=s.reshape([1,t,C]),l=[1,a,C]}else n=r[0].reshape([a,w*x,v]),o=s.reshape([1,v,C]),l=[a,k*$,C];u.push(n),u.push(o)}else n=r[0].reshape([a,v,w*x]),o=r[1].reshape([1,C,v]),l=[a,C,k*$],u.push(o),u.push(n);b&&u.push(r[2]);let d=l[2],c=u[0].dims[u[0].dims.length-1];d<8&&c<8?t.compute(si(u,i,y,l,_,s),{inputs:u}):t.compute(so(u,i,y,l,_,s),{inputs:u});return}let P=t.kernelCustomData.wT??t.compute(rv(r[1],sg),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=P);let E=[r[0],P];b&&E.push(r[2]);let F=_?k*$:C,A=_?C:k*$,I=M*T*v;t.compute(sl(E,i,y,F,A,I,b,!0,s),{inputs:E})},sw=(t,r)=>{var i,s,a,n,o;if(((t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(t[0].dims.length>5)throw Error("greater than 5D is not supported");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[1]*r.group)throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===t.length&&(1!==t[2].dims.length||t[1].dims[0]!==t[2].dims[0]))throw Error("invalid bias");let i=t[0].dims.length-2;if(r.dilations.length!==i)throw Error(`dilations should be ${i}D`);if(r.strides.length!==i)throw Error(`strides should be ${i}D`);if(r.pads.length!==2*i)throw Error(`pads should be ${2*i}D`);if(0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape")})(t.inputs,r),3===t.inputs[0].dims.length){let a,n,o,l,u,d,c;i=t,a="NHWC"===(s=r).format,n=[i.inputs[0].reshape(a?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])],3===i.inputs.length&&n.push(i.inputs[2]),o=[0,s.pads[0],0,s.pads[1]],l=[1].concat(s.strides),u=[1].concat(s.dilations),d=[1].concat(s.kernelShape),c=s_({...s,pads:o,strides:l,dilations:u,kernelShape:d},n),sb(i,n,c,t=>a?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])}else if(5===t.inputs[0].dims.length){let i,s,l,u;a=t,n=t.inputs,i="NHWC"===(o=r).format?"channelsLast":"channelsFirst",s=s_(o,n),l="NOTSET"===o.autoPad?o.pads:o.autoPad,u=sp(n[0].dims,n[1].dims,o.strides,o.dilations,l,!1,i),a.compute(sh(n,s,u.outShape,[u.filterDepth,u.filterHeight,u.filterWidth],[u.padInfo.front,u.padInfo.top,u.padInfo.left],i))}else{let i=s_(r,t.inputs);sb(t,t.inputs,i)}}}),nP=eA(()=>{a9(),ne(),nt(),nl(),sx=(t,r,i)=>{let s=t.length>2,a=r.outputShape,n="NHWC"===r.format,o=r.group,l=t[1].dims,u=l[2]/o,d=l[3],c=n?ru(u):1,p=n&&1===d&&u>=4,h=p?4*Math.floor(u/4):Math.floor(u/c)*c,m=u-h,f=n?ru(d):1,g=n?1===d?c:f:1,_=tj.size(a)/f,y=[Math.ceil(_/64),1,1];tB("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${y}`);let b=["rank","rank"],w=[r.strides[0],r.strides[1]],x=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],v=[r.dilations[0],r.dilations[1]],M=[x[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),x[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],T=[M[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),M[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],k=[{type:12,data:_},{type:12,data:w},{type:12,data:x},{type:12,data:v},{type:12,data:M},{type:6,data:T},{type:12,data:h},{type:12,data:u},{type:12,data:d},...rl(t[0].dims,t[1].dims)];return s&&(k.push(...rl(t[2].dims)),b.push("rank")),k.push(...rl(a)),{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${c}${g}${f}${p}${m}`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:y[0],y:y[1],z:y[2]},outputs:[{dims:i?i(a):a,dataType:t[0].dataType}],programUniforms:k}),getShaderSource:r=>{let i=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:x.length},{name:"dilations",type:"u32",length:x.length},{name:"effective_filter_dims",type:"u32",length:M.length},{name:"pads",type:"i32",length:T.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],o=rn(t[0].dataType),l=n?1:2,u=n?2:3,d=n?3:1,h=rf("W",t[1].dataType,t[1].dims.length,g),_=rf("Dy",t[0].dataType,t[0].dims.length,c),y=[_,h];s&&y.push(rf("bias",t[2].dataType,[a[d]].length,f));let b=rg("result",t[0].dataType,a.length,f),v=`
            let outputIndices = ${b.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${b.indicesGet("outputIndices",0)};
            let d1 = ${b.indicesGet("outputIndices",d)};
            let r = ${b.indicesGet("outputIndices",l)};
            let c = ${b.indicesGet("outputIndices",u)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${b.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${u}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${p?`
                var x_offset = ${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c};
                var w_offset = ${h.indicesToOffset(`${h.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${g};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${p?4:c}) {
                  ${(()=>{let t="";if(p)4===c?t+=`
        let xValue = ${_.getByOffset("x_offset")};
        let wValue = ${h.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:2===c?t+=`
          dotProd = dotProd + dot(vec4<${o}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}), vec4<${o}>(${h.getByOffset("w_offset")}, ${h.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:1===c&&(t+=`
          dotProd = dotProd + dot(vec4<${o}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}, ${_.getByOffset("x_offset + 2u")}, ${_.getByOffset("x_offset + 3u")}), vec4<${o}>(${h.getByOffset("w_offset")}, ${h.getByOffset("w_offset + 1u")}, ${h.getByOffset("w_offset + 2u")}, ${h.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(t+=`
                  let xValue = ${n?_.getByOffset(`${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c}`):_.get("batch","inputChannel","idyR","idyC")};
        `,1===c)t+=`
          let w_offset = ${h.indicesToOffset(`${h.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${h.getByOffset(`w_offset / ${g}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let r=0;r<c;r++)t+=`
            let wValue${r} = ${h.getByOffset(`${h.indicesToOffset(`${h.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${r}, wOutChannel)`)} / ${g}`)};
            dotProd = dotProd + xValue[${r}] * wValue${r};`;return t})()}
                  inputChannel = inputChannel + ${p?4:c};
                }
                ${(()=>{if(0===m)return"";if(!p)throw Error(`packInputAs4 ${p} is not true.`);let t="";if(1===c){t+="dotProd = dotProd";for(let r=0;r<m;r++)t+=`
            + ${_.getByOffset(`x_offset + ${r}`)} * ${h.getByOffset(`w_offset + ${r}`)}`;t+=";"}else if(2===c){if(2!==m)throw Error(`Invalid inputChannelsRemainder ${m}.`);t+=`
          let xValue = ${_.getByOffset("x_offset")};
          let wValue = ${h.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return t})()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${b.setByOffset("global_idx","value")};
          `;return`
    ${r.registerUniforms(i).declareVariables(...y,b)}
      ${r.mainStart()}
      ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${v}}`}}}}),nE=eA(()=>{nP(),nw(),nu(),sv=(t,r,i,s,a,n)=>(t-1)*r+i+(s-1)*a+1-n,sM=(t,r,i,s,a)=>{let n=Math.floor(t/2);"SAME_UPPER"===r?(i[s]=n,i[a]=t-n):"SAME_LOWER"===r&&(i[s]=t-n,i[a]=n)},sT=(t,r)=>{let i=t.kernelShape.slice();if(0===t.kernelShape.length||0===t.kernelShape.reduce((t,r)=>t*r,1)){i.length=0;for(let t=2;t<r[1].dims.length;++t)i.push(r[1].dims[t])}let s="NHWC"===t.format;i.splice(0,0,r[1].dims[0]),i.splice(s?3:1,0,r[1].dims[1]);let a=t.pads.slice(),n=t.outputShape.slice(),o=t.outputPadding.slice(),l=r[0].dims,u=t.dilations.slice();0===u.reduce((t,r)=>t+r,0)&&(u=Array(r[0].dims.length-2).fill(1));let d=t.strides.slice();0===d.reduce((t,r)=>t+r,0)&&(d=Array(r[0].dims.length-2).fill(1)),((t,r,i,s,a,n,o,l,u,d)=>{let c=t.length-2,p=0===d.length;u.length<c&&u.push(...Array(c-u.length).fill(0));let h=t[0],m=r[l?3:1]*a;for(let a=0,h=t.length-c-!!l;a<c;++a,++h){let l=t[h],m=p?l*o[a]:d[a];sM(sv(l,o[a],n[a],r[h],i[a],m),s,n,a,a+c),p&&d.push(o[a]*(l-1)+u[a]+(r[h]-1)*i[a]+1-n[a]-n[a+c])}d.splice(0,0,h),d.splice(l?3:1,0,m)})(l,i,u,t.autoPad,t.group,a,d,s,o,n);let c=Object.assign({},t);return Object.assign(c,{kernelShape:i,pads:a,outputPadding:o,outputShape:n,dilations:u,strides:d}),c},sk=t=>{let r=i9(t),i=t.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],a=t.dilations,n=t.group,o=t.kernelShape,l=t.pads,u=t.strides,d=t.wIsConst();return{autoPad:s,format:i,dilations:a,group:n,kernelShape:o,outputPadding:t.outputPadding,outputShape:t.outputShape,pads:l,strides:u,wIsConst:d,...r,cacheKey:`${t.format};${r.activation};`}},s$=(t,r,i,s)=>{let a=t.kernelCustomData.wT??t.compute(rv(r[1],[2,3,0,1]),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=a);let n=[r[0],a];3===r.length&&n.push(r[2]),t.compute(sx(n,i,s),{inputs:n})},sC=(t,r)=>{if(((t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(4!==t[0].dims.length&&3!==t[0].dims.length)throw Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[0])throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=t[1].dims[1]*r.group;if(3===t.length&&(1!==t[2].dims.length||t[2].dims[0]!==i))throw Error("invalid bias");let s=t[0].dims.length-2;if(r.dilations.reduce((t,r)=>t+r,0)>0&&r.dilations.length!==s)throw Error(`dilations should be ${s}D`);if(r.strides.reduce((t,r)=>t+r,0)>0&&r.strides.length!==s)throw Error(`strides should be ${s}D`);if(r.pads.reduce((t,r)=>t+r,0)>0&&r.pads.length!==2*s)throw Error(`pads should be ${2*s}D`);if(r.outputPadding.length!==s&&0!==r.outputPadding.length)throw Error(`output_padding should be ${s}D`);if(r.kernelShape.reduce((t,r)=>t+r,0)>0&&0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape");if(0!==r.outputShape.length&&r.outputShape.length!==t[0].dims.length-2)throw Error("invalid output shape")})(t.inputs,r),3===t.inputs[0].dims.length){var i,s;let a,n,o,l,u,d,c,p;i=t,a="NHWC"===(s=r).format,n=[i.inputs[0].reshape(a?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])],3===i.inputs.length&&n.push(i.inputs[2]),(0===(o=s.kernelShape).length||0===o[0])&&(o=[i.inputs[1].dims[2]]),(0===(l=s.dilations).length||0===l[0])&&(l=[1]),(0===(u=s.strides).length||0===u[0])&&(u=[1]),0===(d=s.pads).length&&(d=[0,0]),d=[0,d[0],0,d[1]],u=[1].concat(u),l=[1].concat(l),o=[1].concat(o),c=[0].concat(c=s.outputPadding),p=sT({...s,pads:d,strides:u,dilations:l,kernelShape:o,outputPadding:c},n),s$(i,n,p,t=>a?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])}else{let i=sT(r,t.inputs);s$(t,t.inputs,i)}}}),nF=eA(()=>{a9(),nt(),no(),nl(),sS=(t,r)=>{var i,s,a,n;let o,l,u,d,c,p,h=t.inputs[0].dims,m=t.inputs[0].dataType,f=t.inputs[1];t.compute((i=m,s=h,a=f,n=r,o=tj.size(s),l=s.length,u=rf("input",i,l),d=rg("output",i,l),c=6===a.dataType?a.getInt32Array()[0]:Number(a.getBigInt64Array()[0]),p=tj.normalizeAxis(c,l),{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:12,data:p},...rl(s,s)]}),getShaderSource:t=>{let r=` i32(${u.indicesGet("inputIndices","uniforms.axis")}) `,i=rh("uniforms.input_shape","uniforms.axis",l),s=n.reverse?r+(n.exclusive?" + 1":""):"0",a=n.reverse?i:r+(n.exclusive?"":" + 1");return`
                ${t.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(u,d)}
                ${t.mainStart()}
                  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${d.offsetToIndices("global_idx")};
                  var sum = ${d.type.value}(0);
                  let first : i32 = ${s};
                  let last : i32 = ${a};
                  for (var i : i32 = first; i < last; i++) {
                    ${u.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${u.getByIndices("inputIndices")};
                  }
                  ${d.setByOffset("global_idx","sum")};
                }`}}),{inputs:[0]})},sP=t=>{let r=1===t.exclusive,i=1===t.reverse;return ri({exclusive:r,reverse:i})}}),nA=eA(()=>{a9(),nt(),no(),nl(),sE=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h,m,f,g,_,y;(t=>{if(!t||1!==t.length)throw Error("DepthToSpace requires 1 input.");if(4!==t[0].dims.length)throw Error("DepthToSpace requires 4D input.")})(t.inputs),t.compute((i=t.inputs[0],c="NHWC"===(s=r).format,p=s.blocksize,h="DCR"===s.mode,c?([a,n,o,l]=i.dims,u=h?[a,n,o,p,p,l/p**2]:[a,n,o,l/p**2,p,p],d=h?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([a,n,o,l]=[i.dims[0],i.dims[2],i.dims[3],i.dims[1]],u=h?[a,p,p,l/p**2,n,o]:[a,l/p**2,p,p,n,o],d=h?[0,3,4,1,5,2]:[0,1,4,2,5,3]),f=(m=i.reshape(u)).dims.length,g=i.dataType,_=rf("a",g,f),y=rg("output",g,f),{name:"DepthToSpace",shaderCache:{hint:`${i.dims};${s.blocksize};${s.mode}`,inputDependencies:["rank"]},getRunData:t=>{let r=c?[a,n*p,o*p,l/p**2]:[a,l/p**2,n*p,o*p],i=tj.size(r),s=m.dims,u=tj.sortBasedOnPerm(s,d);return{outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...rl(s,u)]}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(_,y)}

  ${((t,r,i,s)=>{let a=[];a.push(`fn perm(i: ${s.type.indices}) -> ${i.type.indices} {
    var a: ${i.type.indices};`);for(let s=0;s<r;++s)a.push(i.indicesSet("a",t[s],`i[${s}]`));return a.push("return a;}"),a.join(`
`)})(d,f,_,y)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${y.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${y.setByOffset("global_idx",_.getByIndices("aIndices"))}
  }`}))},sF=t=>ri({blocksize:t.blocksize,mode:t.mode,format:t.format})}),nI=eA(()=>{a9(),nt(),no(),nl(),sz="^"+(sI="("+(sA="[a-zA-Z]|\\.\\.\\.")+")+")+"$",sL="^"+("("+sI+",)*")+sI+"$",sO=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let i=this.symbolToIndices.get(t);void 0===i?i=[r]:i.push(r),this.symbolToIndices.set(t,i)}},sB=class{constructor(t,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=[],this.outputDims=[];let[i,s]=r.includes("->")?r.split("->",2):[r,""];if(!i.match(RegExp(sL)))throw Error("Invalid LHS term");if(i.split(",").forEach((r,i)=>{let s=t[i].dims.slice();if(!r.match(RegExp(sz)))throw Error("Invalid LHS term");let a=this.processTerm(r,!0,s,i);this.lhs.push(a)}),""===s)s+=[...this.symbolToInfo.entries()].filter(([t,r])=>1===r.count||"..."===t).map(([t])=>t).join("");else if(!s.match(RegExp(sI)))throw Error("Invalid RHS");s.match(RegExp(sA,"g"))?.forEach(t=>{if("..."===t)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let r=this.symbolToInfo.get(t);if(void 0===r)throw Error("Invalid RHS symbol");this.outputDims.push(r.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(t,r,i){let s=this.symbolToInfo.get(t);if(void 0!==s){if(s.dimValue!==r&&1!==s.count)throw Error("Dimension mismatch");s.count++,s.inputIndices.push(i)}else s={count:1,dimValue:r,inputIndices:[i]};this.symbolToInfo.set(t,s)}processTerm(t,r,i,s=-1){let a=i.length,n=!1,o=[],l=0;if(!t.match(RegExp(sz))&&!r&&""!==t)throw Error("Invalid LHS term");let u=t.match(RegExp(sA,"g")),d=new sO(s);return u?.forEach((t,c)=>{if("..."===t){if(n)throw Error("Only one ellipsis is allowed per input term");n=!0;let t=a-u.length+1;if(t<0)throw Error("Ellipsis out of bounds");if(o=i.slice(l,l+t),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw Error("Ellipsis must be specified in the LHS");for(let t=0;t<o.length;t++){let r=String.fromCharCode(48+t);d.addSymbol(r,c+t),this.addSymbol(r,i[l++],s)}}else d.addSymbol(t,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(t,i[l++],s)}),d}},sD=(t,r)=>{var i,s,a,n;let o,l,u,d,c=new sB(t.inputs,r.equation),p=c.outputDims,h=t.inputs.map((t,r)=>t.dims);t.compute((i=h,s=t.inputs[0].dataType,a=c,n=p,o=i.map(t=>t.length).map((t,r)=>rf(`input${r}`,s,t)),l=tj.size(n),u=rg("output",s,n.length),d=[...a.symbolToInfo.keys()].filter(t=>!a.rhs.symbolToIndices.has(t)),{name:"Einsum",shaderCache:{hint:a.equation,inputDependencies:i.map(()=>"rank")},getRunData:()=>{let t=d.filter(t=>a.symbolToInfo.has(t)).map(t=>({type:12,data:a.symbolToInfo.get(t)?.dimValue||0}));t.push({type:12,data:l});let r=i.map((t,r)=>[...rl(t)]).reduce((t,r)=>t.concat(r),t);return r.push(...rl(n)),{outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:r}},getShaderSource:t=>{let r=[],i=[],s=[],n=[],l=[],c=a.symbolToInfo.size===a.rhs.symbolToIndices.size;a.symbolToInfo.forEach((t,d)=>{if(a.rhs.symbolToIndices.has(d)){let i=a.rhs.symbolToIndices.get(d)?.[0];void 0!==i&&a.lhs.forEach((s,a)=>{if(t.inputIndices.includes(a)){let t=s.symbolToIndices.get(d);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{r.push(`${o[a].indicesSet(`input${a}Indices`,t,u.indicesGet("outputIndices",i))}`)})}})}else{let r;a.lhs.forEach((r,s)=>{if(t.inputIndices.includes(s)){let t=r.symbolToIndices.get(d);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{i.push(`${o[s].indicesSet(`input${s}Indices`,t,`${d}`)}`)}),l.push(`prod *= ${o[s].getByIndices(`input${s}Indices`)};`)}}),s.push(`for(var ${d}: u32 = 0; ${d} < uniforms.${(r=d)+"_max"}; ${d}++) {`),n.push("}")}});let p=c?[...r,`let sum = ${o.map((t,r)=>t.getByIndices(`input${r}Indices`)).join(" * ")};`]:[...r,"var sum = 0.0;",...s,...i,"var prod = 1.0;",...l,"sum += prod;",...n];return`
            ${t.registerUniforms(d.map(t=>{let r;return{name:`${(r=t)+"_max"}`,type:"u32"}})).registerUniform("outputSize","u32").declareVariables(...o,u)}

            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${u.offsetToIndices("global_idx")};
            ${o.map((t,r)=>`var input${r}Indices: ${o[r].type.indices};`).join(`
`)}
            ${p.join(`
`)};
            ${u.setByOffset("global_idx","sum")};
          }`}}))},sN=t=>{let r=t.equation.replace(/\s+/g,"");return ri({equation:r})}}),nz=eA(()=>{a9(),nt(),nl(),sj=(t,r)=>{let i=t.length-r.length,s=[];for(let r=0;r<i;++r)s.push(t[r]);for(let a=0;a<r.length;++a)s.push(1===r[a]?t[a+i]:r[a]);return s},sR=t=>{var r;let i,s,a,n,o,l,u,d,c,p;(t=>{if(!t||2!==t.length)throw Error("Expand requires 2 input.");let r=t[0].dims,i=Array.from(t[1].getBigInt64Array(),Number),s=i.length<r.length?0:i.length-r.length,a=r.length<i.length?0:r.length-i.length;for(;s<i.length&&a<r.length;++s,++a)if(i[s]!==r[a]&&1!==i[s]&&1!==r[a])throw Error("Expand requires shape to be broadcastable to input")})(t.inputs),t.compute((n=(i=a=(r=t.inputs)[0].dims,s=Array.from(r[1].getBigInt64Array(),Number),i.length>s.length?sj(i,s):sj(s,i)),l=9===(o=r[0].dataType)||1===tj.size(a),u=9===o||a.length>0&&a[a.length-1]%4==0?4:1,d=l||n.length>0&&n[n.length-1]%4==0?4:1,p=[{type:12,data:c=Math.ceil(tj.size(n)/d)},...rl(a,n)],{name:"Expand",shaderCache:{hint:`${n.length};${u}${d}`,inputDependencies:["rank"]},getShaderSource:t=>{let r=rf("input",o,a.length,u),i=rg("output",o,n.length,d),s;if(9===o){let t=(t,s,a="")=>`
          let outputIndices${s} = ${i.offsetToIndices(`outputOffset + ${s}u`)};
          let offset${s} = ${r.broadcastedIndicesToOffset(`outputIndices${s}`,i)};
          let index${s} = offset${s} / 4u;
          let component${s} = offset${s} % 4u;
          ${t}[${s}] = ${a}(${r.getByOffset(`index${s}`)}[component${s}]);
        `;s=`
        let outputOffset = global_idx * ${d};
        var data = vec4<u32>(0);
        ${t("data",0,"u32")}
        ${t("data",1,"u32")}
        ${t("data",2,"u32")}
        ${t("data",3,"u32")}
        ${i.setByOffset("global_idx","data")}
      }`}else s=`
        let outputIndices = ${i.offsetToIndices(`global_idx * ${d}`)};
        let inputOffset = ${r.broadcastedIndicesToOffset("outputIndices",i)};
        let data = ${i.type.value}(${r.getByOffset(`inputOffset / ${u}`)});
        ${i.setByOffset("global_idx","data")}
      }`;return`
    ${t.registerUniform("vec_size","u32").declareVariables(r,i)}
    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${s}`},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p})}),{inputs:[0]})}}),nL=eA(()=>{a9(),nt(),nl(),ng(),sV=t=>{var r;let i,s,a,n;t.inputs.length<2||0===tj.size(t.inputs[1].dims)?ij(t):t.compute((i=(r=t.inputs)[0].dataType,s=tj.size(r[0].dims),n=(a=tj.size(r[1].dims))%4==0,{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:t=>{let r=rf("x",i,[1],4),s=rf("bias",i,[1],4),a=rg("y",i,[1],4),o=t=>`
      let bias${t}_offset: u32 = (global_idx * 4 + ${t}) % uniforms.bias_size;
      let bias${t} = ${s.getByOffset(`bias${t}_offset / 4`)}[bias${t}_offset % 4];`,l=n?`
      let bias = ${s.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${o(0)}${o(1)}${o(2)}${o(3)}
      let bias = ${r.type.value}(bias0, bias1, bias2, bias3);`;return`${t.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(r,s,a)}

    ${iD(ro(i))}

    ${t.mainStart(rs)}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${r.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${a.setByOffset("global_idx",iN("x_in"))}
    }`},getRunData:t=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:a}],dispatchGroup:{x:Math.ceil(s/rs/4)}})}))}}),nO=eA(()=>{a9(),nt(),no(),nl(),sG=t=>ri({axis:t.axis}),sU=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h;(t=>{if(!t||2!==t.length)throw Error("Gather requires 2 inputs.")})(t.inputs),t.compute((i=t.inputs,s=r,a=i[0].dims,n=i[1].dims,o=a.length,l=tj.normalizeAxis(s.axis,o),(u=a.slice(0)).splice(l,1,...n),d=a[l],c=9===i[0].dataType?4:1,h=[{type:12,data:p=Math.ceil(tj.size(u)/c)},{type:6,data:d},{type:12,data:l},...rl(i[0].dims,i[1].dims,u)],{name:"Gather",shaderCache:{hint:s.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:t=>{let r=rf("data",i[0].dataType,i[0].dims.length,c),s=rf("inputIndices",i[1].dataType,i[1].dims.length),a=rg("output",i[0].dataType,u.length,c),d=t=>{let i=n.length,a=`var indicesIndices${t}  = ${s.type.indices}(0);`;for(let r=0;r<i;r++)a+=`${i>1?`indicesIndices${t}[${r}]`:`indicesIndices${t}`} = ${u.length>1?`outputIndices${t}[uniforms.axis + ${r}]`:`outputIndices${t}`};`;a+=`
          var idx${t} = ${s.getByIndices(`indicesIndices${t}`)};
          if (idx${t} < 0) {
            idx${t} = idx${t} + uniforms.axisDimLimit;
          }
          var dataIndices${t} : ${r.type.indices};
        `;for(let r=0,s=0;r<o;r++)r===l?(a+=`${o>1?`dataIndices${t}[${r}]`:`dataIndices${t}`} = u32(idx${t});`,s+=i):(a+=`${o>1?`dataIndices${t}[${r}]`:`dataIndices${t}`} = ${u.length>1?`outputIndices${t}[${s}]`:`outputIndices${t}`};`,s++);return a},p;if(9===i[0].dataType){let t=(t,i,s="")=>`
          let outputIndices${i} = ${a.offsetToIndices(`outputOffset + ${i}u`)};
          ${d(i)};
          let offset${i} = ${r.indicesToOffset(`dataIndices${i}`)};
          let index${i} = offset${i} / 4u;
          let component${i} = offset${i} % 4u;
          ${t}[${i}] = ${s}(${r.getByOffset(`index${i}`)}[component${i}]);
        `;p=`
        let outputOffset = global_idx * ${c};
        var value = vec4<u32>(0);
        ${t("value",0,"u32")}
        ${t("value",1,"u32")}
        ${t("value",2,"u32")}
        ${t("value",3,"u32")}
        ${a.setByOffset("global_idx","value")}
      `}else p=`
      let outputIndices = ${a.offsetToIndices("global_idx")};
      ${d("")};
      let value = ${r.getByIndices("dataIndices")};
      ${a.setByOffset("global_idx","value")};
      `;return`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(r,s,a)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${p}
      }`}}))}}),nB=eA(()=>{a9(),nt(),nl(),sq=(t,r)=>{var i,s,a,n,o,l;let u,d,c=t.inputs,p=c[0].dims,h=c[0].dataType,m=c[1].dims,f=m[m.length-1],g=tj.sizeToDimension(m,m.length-1),_=tj.sizeFromDimension(p,r.batchDims+f),y=tj.sizeToDimension(p,r.batchDims),b=tj.sizeFromDimension(p,r.batchDims),w=Array(f),x=_;for(let t=0;t<f;++t)w[f-1-t]=x,x*=p[r.batchDims+f-1-t];let v=(i=t,s=c[1],a=w,n=r.batchDims,o=p,u=[{type:12,data:l=g},{type:12,data:n},{type:12,data:o},{type:12,data:a},{type:12,data:g/y},{type:12,data:b},{type:12,data:f}],d=[l],u.push(...rl(s.dims,d)),i.compute({name:"computeSliceOffsets",shaderCache:{hint:`${o.length}_${a.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:d,dataType:i.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:t=>{let r=rf("indices_data",s.dataType,s.dims.length),i=rg("input_slice_offsets_data",12,1,1),n=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:o.length},{name:"sizes_from_slice_dims_data",type:"u32",length:a.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${t.registerUniforms(n).declareVariables(r,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${1===o.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${1===a.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[s],outputs:[-1]})[0]),M=r.batchDims+f;if(M>p.length)throw Error("last dimension of indices must not be larger than rank of input tensor");let T=m.slice(0,-1).concat(p.slice(M)),k=tj.size(T),$=[{type:12,data:k},{type:12,data:_},...rl(c[0].dims,v.dims,T)];t.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:T,dataType:h}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:$}),getShaderSource:t=>{let r=rf("data",c[0].dataType,c[0].dims.length),i=rf("slice_offsets",12,v.dims.length),s=rg("output",c[0].dataType,T.length);return`
          ${t.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(r,i,s)}
            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[c[0],v]})},sW=t=>({batchDims:t.batch_dims,cacheKey:""})}),nD=eA(()=>{a9(),nt(),no(),nl(),sH=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h,m;((t,r)=>{if(t.length<3||t.length>4)throw Error("GatherBlockQuantized requires 3 or 4 inputs.");let i=tj.normalizeAxis(r.quantizeAxis,t[0].dims.length),s=r.blockSize,a=t[0],n=t[2],o=4===t.length?t[3]:void 0;if(n.dims.length!==a.dims.length||!a.dims.map((t,r)=>r===i?Math.ceil(t/s)===n.dims[r]:t===n.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==a.dataType)throw Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==n.dims.length||!o.dims.map((t,r)=>t===n.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}})(t.inputs,r),t.compute((i=t.inputs,s=r,a=i[0].dims,n=i[1].dims,o=a.length,l=tj.normalizeAxis(s.gatherAxis,o),u=tj.normalizeAxis(s.quantizeAxis,o),(d=a.slice(0)).splice(l,1,...n),c=tj.size(d),p=i[2].dataType,h=22===i[0].dataType,m=[{type:12,data:c},{type:12,data:u},{type:12,data:l},{type:12,data:s.blockSize},...rl(...i.map((t,r)=>t.dims),d)],{name:"GatherBlockQuantized",shaderCache:{hint:`${s.cacheKey};${i.filter((t,r)=>1!==r).map(t=>t.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:i.length},(t,r)=>"rank")},getRunData:()=>({outputs:[{dims:d,dataType:p}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:t=>{let r=rf("data",i[0].dataType,i[0].dims.length),s=rf("inputIndices",i[1].dataType,i[1].dims.length),o=rf("scales",i[2].dataType,i[2].dims.length),u=i.length>3?rf("zeroPoint",i[3].dataType,i[3].dims.length):void 0,c=rg("output",p,d.length),m=[r,s,o];return u&&m.push(u),`
        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...m,c)}
        ${t.mainStart()}
        let output_indices = ${c.offsetToIndices("global_idx")};
        var indices_indices = ${s.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${c.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${s.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${c.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${r.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${c.indicesGet("output_indices","i")};
          ${r.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${s.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${a[l]};
        }
        ${r.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${d.length}; i++) {
          let index = ${c.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${r.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${r.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${r.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${h?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${o.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${o.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${o.getByIndices("scale_indices")};
        ${u?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${u.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${u.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${h?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${ro(p)}(quantized_data - zero_point) * scale;
        ${c.setByOffset("global_idx","dequantized_data")};
    }`}}))},sK=t=>ri({blockSize:t.blockSize,gatherAxis:t.gatherAxis,quantizeAxis:t.quantizeAxis})}),nN=eA(()=>{a9(),nt(),no(),nl(),sQ=t=>ri({axis:t.axis}),sX=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h,m,f,g,_;(t=>{if(!t||2!==t.length)throw Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)})(t.inputs),t.compute((i=t.inputs,s=r,a=i[0].dims,n=i[0].dataType,o=a.length,l=i[1].dims,u=i[1].dataType,c=a[d=tj.normalizeAxis(s.axis,o)],p=l.slice(0),h=tj.size(p),m=rf("input",n,o),f=rf("indicesInput",u,l.length),g=rg("output",n,p.length),(_=[{type:12,data:h},{type:6,data:c},{type:12,data:d}]).push(...rl(a,l,p)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:_}),getShaderSource:t=>`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(m,f,g)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${f.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${m.type.indices}(outputIndices);
      ${m.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${m.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}))}}),nj=eA(()=>{a9(),nt(),nl(),sJ=t=>({transA:t.transA,transB:t.transB,alpha:t.alpha,beta:t.beta,cacheKey:`${t.transA};${t.transB};${1===t.alpha}`}),sY=(t,r)=>{(t=>{if(!t)throw Error("Input is missing");if(t.length<2||t.length>3)throw Error("Invaid input number.");if(3===t.length&&t[2].dims.length>2)throw Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||3===t.length&&t[0].dataType!==t[2].dataType)throw Error("Input types are mismatched")})(t.inputs),t.compute(((t,r)=>{let i=t[0].dims.slice(),s=t[1].dims.slice(),[a,n,o]=tV.getShapeOfGemmResult(i,r.transA,s,r.transB,3===t.length?t[2].dims:void 0),l=[a,n],u=Math.ceil(n/16),d=Math.ceil(a/16),c=(tj.size(l),[{type:12,data:u},{type:12,data:a},{type:12,data:n},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}]),p=["type","type"];return 3===t.length&&(c.push(...rl(t[2].dims)),p.push("rank")),c.push(...rl(l)),{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:u*d},programUniforms:c}),getShaderSource:i=>{let s=rf("a",t[0].dataType,t[0].dims),a=rf("b",t[1].dataType,t[1].dims),n=null,o=[s,a];3===t.length&&(n=rf("c",t[2].dataType,t[2].dims.length),o.push(n));let u=rg("output",t[0].dataType,l.length);o.push(u);let d="",c="";r.transA&&r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${s.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${s.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${s.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):r.transA||r.transB||(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${s.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===r.alpha?"":"value *= uniforms.alpha;";return`
  ${i.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...o)}
  var<workgroup> tile_a: array<array<${s.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${a.type.storage}, 16>, 16>;
  ${i.mainStart([16,16,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${u.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${c}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${d}
      }
      workgroupBarrier();
    }

    ${p}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${null!=n?`let cOffset = ${n.broadcastedIndicesToOffset("vec2(m, n)",u)}; value += ${u.type.value}(uniforms.beta) * ${n.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}})(t.inputs,r))}}),nR=eA(()=>{a9(),nt(),no(),nl(),[sZ,s0,s1,s2]=[0,1,2,3],s3=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,s4=(t,r)=>{var i,s;let a,n,o,l,u,d,c;(t=>{if(4!==t[0].dims.length)throw Error("only 4-D tensor is supported.");if(t[0].dims.length!==t[1].dims.length)throw Error("input dimensions must be equal to grid dimensions");if(t[0].dims.length-2!==t[1].dims[t[1].dims.length-1])throw Error(`last dimension of grid must be equal to ${t[0].dims.length-2}`);if(t[0].dims[0]!==t[1].dims[0])throw Error("grid batch size must match input batch size")})(t.inputs),t.compute((i=t.inputs,s=r,a=rf("x",i[0].dataType,i[0].dims.length),n=[i[1].dims[0],i[1].dims[1],i[1].dims[2]],o=rf("grid",i[1].dataType,n.length,2),l=[i[0].dims[0],i[0].dims[1],i[1].dims[1],i[1].dims[2]],"NHWC"===s.format&&(l=[i[0].dims[0],i[1].dims[1],i[1].dims[2],i[0].dims[3]],[sZ,s0,s1,s2]=[0,3,1,2]),u=rg("output",i[0].dataType,l.length),d=a.type.value,c=[{type:12,data:tj.size(l)},...rl(i[0].dims,n,l)],{name:"GridSample",shaderCache:{hint:`${s.cacheKey}`,inputDependencies:["type","type"]},getRunData:t=>{let r=tj.size(l);return{outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:c}},getShaderSource:t=>{let r,i,n,l,c,p,h,m,f;return`
  ${t.registerUniform("output_size","u32").declareVariables(a,o,u)}
  ${s3}
  ${r=d,`
  fn gs_bicubic_interpolate(p: mat4x4<${r}>, x: f32, y: f32) -> ${r} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${r}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`}
  ${i=s,`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${0===i.alignCorners?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`}
  ${n=s,`
  ${"reflection"===n.paddingMode?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`}
  ${l=a,c=d,p=s,`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${c} {
     var pixel = ${c}(0);
     var indices = vec4<u32>(0);
     indices[${sZ}] = batch;
     indices[${s0}] = channel;`+(()=>{switch(p.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${s1}] = u32(r);
            indices[${s2}] = u32(c);
          } else {
            return ${c}(0);
          }
        `;case"border":return`
          indices[${s1}] = u32(clamp(r, 0, H - 1));
          indices[${s2}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${s1}] = gs_reflect(r, border[1], border[3]);
          indices[${s2}] = gs_reflect(c, border[0], border[2]);
        `;default:throw Error(`padding mode ${p.paddingMode} is not supported`)}})()+`
    return ${l.getByIndices("indices")};
  }
`}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${s1}]);
      let W_in = i32(uniforms.x_shape[${s2}]);

      ${0===s.alignCorners?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${u.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${sZ}], indices[${s1}], indices[${s2}]);
      let nxy = ${o.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${h=u,m=d,f=s,(()=>{switch(f.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${sZ}], indices[${s0}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${sZ}], indices[${s0}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${sZ}], indices[${s0}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${sZ}], indices[${s0}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${sZ}], indices[${s0}], border);

          let dx2 = ${m}(f32(x2) - x);
          let dx1 = ${m}(x - f32(x1));
          let dy2 = ${m}(f32(y2) - y);
          let dy1 = ${m}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${m}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${sZ}], indices[${s0}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw Error(`mode ${f.mode} is not supported`)}})()+`${h.setByOffset("global_idx","result")}`}
  }`}}))},s8=t=>ri({alignCorners:t.align_corners,mode:t.mode,paddingMode:t.padding_mode,format:t.format})}),nV=eA(()=>{a9(),nt(),no(),na(),nh(),nl(),nu(),s6=(t,r)=>t.length>r&&t[r].dims.length>0?t[r]:void 0,s5=t=>ri({...t}),s9=ri({perm:[0,2,1,3]}),s7=(t,r,i,s,a,n,o,l)=>{var u,d,c,p,h,m,f;let g,_,y,b=n;if(!(o&&tj.size(o.dims)>0))return 3===n.dims.length&&(b=n.reshape([r,s,i,a])),1===i||1===s?b:t.compute(rv(b,s9.perm),{inputs:[b],outputs:[-1]})[0];if(1===s)throw Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=(u=t,d=n,c=o,p=r,h=s,m=i*a,f=l,g=[p,h,m],y=[{type:12,data:_=tj.size(g)},{type:12,data:f},{type:12,data:m}],b=u.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:g,dataType:d.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:y}),getShaderSource:t=>{let r=rg("qkv_with_bias",d.dataType,g),i=rf("qkv",d.dataType,g),s=rf("bias",c.dataType,g);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(i,s,r)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[d,c],outputs:[-1]})[0]).reshape([r,s,i,a]),1===i||1===s?b:t.compute(rv(b,s9.perm),{inputs:[b],outputs:[-1]})[0]},ae=(t,r)=>{let i=((t,r)=>{let i,s=t[0],a=s6(t,1),n=s6(t,2),o=s6(t,3),l=s6(t,4),u=s6(t,5),d=s6(t,6),c=s6(t,7);if(3!==s.dims.length&&5!==s.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let p=s.dims[0],h=s.dims[1],m=3===s.dims.length?s.dims[2]:r.numHeads*s.dims[4],f=h,g=0,_=0,y=Math.floor(m/r.numHeads);if(d&&c&&tj.size(d.dims)&&tj.size(c.dims)){if(4!==d.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==r.numHeads||d.dims[3]!==y)throw Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==y)throw Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==c.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');g=d.dims[2],_=d.dims[2]}else if(d&&tj.size(d.dims)||c&&tj.size(c.dims))throw Error('Input "past_key" and "past_value" shall be both present or both absent');if(a&&tj.size(a.dims)>0){if(3!==s.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==a.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===a.dims.length){if(a.dims[2]!==s.dims[2])throw Error('Input "query" and "key" shall have same dim 2 (hidden_size)');i=2,f=a.dims[1]}else if(5===a.dims.length){if(a.dims[2]!==r.numHeads||2!==a.dims[3]||a.dims[4]!==y)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw Error('Expect "value" be none when "key" has packed kv format.');i=5,f=a.dims[1]}else{if(a.dims[1]!==r.numHeads||a.dims[3]!==y)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');i=0,f=a.dims[2]}}else{if(5!==s.dims.length)throw Error('Input "query" is expected to have 5 dimensions when key is empty');if(s.dims[2]!==r.numHeads||3!==s.dims[3])throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');i=3}if(o&&tj.size(o.dims)>0){if(1!==o.dims.length)throw Error('Input "bias" is expected to have 1 dimension');if(a&&5===a.dims.length&&2===a.dims[3])throw Error("bias is not allowed for packed kv.")}let b=g+f,w=0;if(l&&tj.size(l.dims)>0){w=8;let t=l.dims;throw 1===t.length?t[0]===p?w=1:t[0]===3*p+2&&(w=3):2===t.length&&t[0]===p&&t[1]===b&&(w=5),8===w?Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):Error("Mask not supported")}let x=!1,v=m;if(n&&tj.size(n.dims)>0){if(3!==n.dims.length&&4!==n.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==n.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===n.dims.length){if(f!==n.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(f!==n.dims[2])throw Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],x=!0}}if(l&&tj.size(l.dims)>0)throw Error("Key padding mask is not supported");if(u&&tj.size(u.dims)>0){if(4!==u.dims.length)throw Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==p||u.dims[1]!==r.numHeads||u.dims[2]!==h||u.dims[3]!==b)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:g,kvSequenceLength:f,totalSequenceLength:b,maxSequenceLength:_,inputHiddenSize:0,hiddenSize:m,vHiddenSize:v,headSize:y,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:w,scale:r.scale,broadcastResPosBias:!1,passPastInKv:x,qkvFormat:i}})(t.inputs,r),s=t.inputs[0],a=s6(t.inputs,1),n=s6(t.inputs,2),o=s6(t.inputs,3),l=s6(t.inputs,4),u=s6(t.inputs,5),d=s6(t.inputs,6),c=s6(t.inputs,7);if(5===s.dims.length)throw Error("Packed QKV is not implemented");if(a?.dims.length===5)throw Error("Packed KV is not implemented");let p=a&&n&&4===a.dims.length&&4===n.dims.length,h=s7(t,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,s,o,0);if(p)return r5(t,h,a,n,l,void 0,d,c,u,i);if(!a||!n)throw Error("key and value must be provided");let m=s7(t,i.batchSize,i.numHeads,i.kvSequenceLength,i.headSize,a,o,i.hiddenSize),f=s7(t,i.batchSize,i.numHeads,i.kvSequenceLength,i.vHeadSize,n,o,2*i.hiddenSize);r5(t,h,m,f,l,void 0,d,c,u,i)}}),nG=eA(()=>{a9(),nt(),no(),nl(),at=(t,r)=>{let i=t[0].dims,s=tj.size(i),a=t[0].dataType,n=tj.normalizeAxis(r.axis,i.length),o=Array(r.numOutputs),l=rf("input",a,i.length),u=Array(r.numOutputs),d=[],c=[],p=0,h=[{type:12,data:s}];for(let s=0;s<r.numOutputs;s++){p+=r.splitSizes[s],u[s]=p;let l=i.slice();l[n]=r.splitSizes[s],c.push(l),o[s]=rg(`output${s}`,a,l.length),d.push({dims:c[s],dataType:t[0].dataType})}return h.push({type:12,data:u},...rl(i,...c)),{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:t=>{let r;return`
  ${t.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(l,...o)}
  ${r=u.length,`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${rh("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`}
  ${(t=>{let r=t.length,i=[];for(let s=0;s<r;++s){let a=t[s].setByIndices("indices","input[global_idx]");1===r?i.push(a):0===s?i.push(`if (output_number == ${s}u) { ${a} }`):s===r-1?i.push(`else { ${a} }`):i.push(`else if (output_number == ${s}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${i.join(`
`)}
      }`})(o)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${l.offsetToIndices("global_idx")};
    var index = ${l.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${rh("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${l.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`},getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h})}},ar=(t,r)=>{let i,s;var a,n,o=t.inputs;if(!o||o.length<1)throw Error("too few inputs");let l=1===t.inputs.length?r:(a=t.inputs,i=[],s=(n=r).numOutputs,a[1].dims[0]>0&&(a[1].getBigInt64Array().forEach(t=>i.push(Number(t))),s=i.length),ri({numOutputs:s,axis:n.axis,splitSizes:i}));t.compute(at(t.inputs,l),{inputs:[0]})},ai=t=>{let r=t.axis,i=t.splitSizes,s=t.numOutputs<0?i.length:t.numOutputs;if(s!==i.length)throw Error("numOutputs and splitSizes lengh must be equal");return ri({axis:r,numOutputs:s,splitSizes:i})}}),nU=eA(()=>{a9(),nt(),no(),nl(),as=(t,r)=>{let{interleaved:i,numHeads:s,rotaryEmbeddingDim:a,scale:n}=r,o=t[0].dims[0],l=tj.sizeFromDimension(t[0].dims,1),u=t[0].dims[t[0].dims.length-2],d=l/u,c=t[2].dims[1],p=0===a?2*c:d/s,h=[o,u,d/p,p-c],m=tj.computeStrides(h),f=[{type:1,data:n},{type:12,data:h},{type:12,data:m},...3===t[0].dims.length?Array({type:12,data:[l,d,p,1]}):[],...4===t[0].dims.length?Array({type:12,data:[l,p,u*p,1]}):[],...rl(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:ri({interleaved:i}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:r=>{let s=rf("input",t[0].dataType,t[0].dims.length),a=rf("position_ids",t[1].dataType,t[1].dims.length),n=rf("cos_cache",t[2].dataType,t[2].dims.length),o=rf("sin_cache",t[3].dataType,t[3].dims.length),l=rg("output",t[0].dataType,t[0].dims.length);return r.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:m.length},{name:"input_output_strides",type:"u32",length:m.length}]),`
        ${r.declareVariables(s,a,n,o,l)}

        ${r.mainStart(rs)}
          let half_rotary_emb_dim = uniforms.${n.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${r.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${a.broadcastedIndicesToOffset("bsnh.xy",rg("",a.type.tensor,2))};
            let position_id =
                u32(${a.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${i});
            let j = i + select(half_rotary_emb_dim, 1, ${i});
            let re = ${s.getByOffset("i")} * ${n.get("position_id","bsnh[3]")} -
                ${s.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};
            ${l.setByOffset("i","re")}
            let im = ${s.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} +
                ${s.getByOffset("j")} * ${n.get("position_id","bsnh[3]")};
            ${l.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${l.setByOffset("k",s.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(tj.size(h)/rs)},programUniforms:f})}},aa=(t,r)=>{((t,r)=>{let[i,s,a,n]=t,{numHeads:o,rotaryEmbeddingDim:l}=r;if(3!==i.dims.length&&4!==i.dims.length)throw Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${i.dims.length}`);if(!tj.areEqual(s.dims,[])&&!tj.areEqual(s.dims,[1])&&2!==s.dims.length)throw Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(2!==a.dims.length)throw Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(2!==n.dims.length)throw Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!tj.areEqual(a.dims,n.dims))throw Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(l>0&&0===o)throw Error("num_heads must be provided if rotary_embedding_dim is specified");let u=i.dims[0],d=i.dims[i.dims.length-2],c=a.dims[0],p=tj.sizeFromDimension(i.dims,1)/d,h=0===l?2*a.dims[1]:p/o;if(l>h)throw Error("rotary_embedding_dim must be less than or equal to head_size");if(2===s.dims.length){if(u!==s.dims[0])throw Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(d!==s.dims[1])throw Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(h/2!==a.dims[1]&&l/2!==a.dims[1])throw Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(d>c)throw Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")})(t.inputs,r),t.compute(as(t.inputs,r))}}),nq=eA(()=>{no(),a9(),nh(),nV(),nG(),nu(),nU(),nl(),an=ri({perm:[0,2,1,3]}),ao=(t,r,i)=>{let s=r,a=i.kvNumHeads;return 3===r.dims.length&&0!==i.kvSequenceLength&&(s=r.reshape([i.batchSize,i.kvSequenceLength,a,i.headSize]),s=t.compute(rv(s,an.perm),{inputs:[s],outputs:[-1]})[0]),s},al=(t,r)=>{let i=((t,r)=>{if(r.doRotary&&t.length<=7)throw Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let i=t[0],s=t[1],a=t[2],n=t[3],o=t[4];if(0!==r.doRotary&&t.length<=7)throw Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(-1!==r.localWindowSize)throw Error("Local attention is not supported");if(0!==r.softcap)throw Error("Softcap is not supported");if(0!==r.rotaryInterleaved)throw Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw Error("Smooth softmax is not supported");if(3!==i.dims.length&&5!==i.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let l=i.dims[0],u=i.dims[1],d=3===i.dims.length?i.dims[2]:r.numHeads*i.dims[4],c=u,p=0,h=!s||0===s.dims.length,m=Math.floor(h?d/(r.numHeads+2*r.kvNumHeads):d/r.numHeads);h&&(d=m*r.numHeads);let f=n&&0!==n.dims.length,g=o&&0!==o.dims.length;if(f&&4===n.dims.length&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===m)throw Error("BSNH pastKey/pastValue is not supported");if(f&&g){if(4!==n.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(4!==o.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');p=n.dims[2]}else if(f||g)throw Error('Input "past_key" and "past_value" shall be both present or both absent');let _=1;if(s&&s.dims.length>0){if(3!==i.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==s.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===s.dims.length){if(i.dims[2]%s.dims[2]!=0)throw Error('Dimension 2 of "query" should be a multiple of "key"');c=s.dims[1]}else if(5===s.dims.length){if(s.dims[2]!==r.numHeads||2!==s.dims[3]||s.dims[4]!==m)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw Error('Expect "value" be none when "key" has packed kv format.');c=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==m)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=s.dims[2]}}else{if(3!==i.dims.length&&5!==i.dims.length)throw Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===i.dims.length&&(i.dims[2]!==r.numHeads||3!==i.dims[3]))throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}let y=!1,b=r.kvNumHeads?m*r.kvNumHeads:d;if(a&&a.dims.length>0){if(3!==a.dims.length&&4!==a.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==a.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(c!==a.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');b=a.dims[2]}else{if(c!==a.dims[2])throw Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');b=a.dims[1]*a.dims[3],y=!0}}let w=t.length>4?t[5]:void 0;if(w&&1!==w.dims.length&&w.dims[0]!==l)throw Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:d,vHiddenSize:b,headSize:m,vHeadSize:Math.floor(b/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:y,qkvFormat:_}})(t.inputs,r);if(5===t.inputs[0].dims.length)throw Error("Packed QKV is not implemented");if(t.inputs[1]?.dims.length===5)throw Error("Packed KV is not implemented");let s=t.inputs[0],a=t.inputs[1]&&t.inputs[1].dims.length>0?t.inputs[1]:void 0,n=t.inputs[2]&&t.inputs[2].dims.length>0?t.inputs[2]:void 0,o=t.inputs[3]&&0!==t.inputs[3].dims.length?t.inputs[3]:void 0,l=t.inputs[4]&&0!==t.inputs[4].dims.length?t.inputs[4]:void 0,u=t.inputs.length>4?t.inputs[5]:void 0,d=t.inputs.length>5?t.inputs[6]:void 0,c=i.kvNumHeads?i.kvNumHeads:i.numHeads,p=ri({axis:2,numOutputs:3,splitSizes:[i.numHeads*i.headSize,c*i.headSize,c*i.headSize]}),[h,m,f]=a||n?[s,a,n]:t.compute(at([s],p),{inputs:[s],outputs:[-1,-1,-1]}),g,_;if(r.doRotary){var y,b,w,x;let s,a,n,o=t.compute((y=i.batchSize,b=i.sequenceLength,w=u,x=d,s=[y*b],n=[{type:12,data:a=y*b},{type:12,data:b},{type:12,data:y}],{name:"GeneratePositionIds",shaderCache:{hint:`${y};${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:7}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:n}),getShaderSource:t=>{let r=rf("seq_lens",w.dataType,w.dims),i=rf("total_seq_lens",x.dataType,x.dims),a=rg("pos_ids",7,s);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}]).declareVariables(r,i,a)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${i.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${r.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${a.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${a.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${a.setByOffset("global_idx","seqlen")}
    };
  }
  `}}),{inputs:[u,d],outputs:[-1]})[0],l=t.inputs[7],c=t.inputs[8],p=ri({interleaved:0!==r.rotaryInterleaved,numHeads:i.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),f=[h,o,l,c],v=[-1];g=t.compute(as(f,p),{inputs:f,outputs:v})[0],f.splice(0,1,m);let M=ri({interleaved:0!==r.rotaryInterleaved,numHeads:i.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});_=t.compute(as(f,M),{inputs:f,outputs:v})[0]}let v=s7(t,i.batchSize,i.numHeads,i.sequenceLength,i.headSize,r.doRotary?g:h,void 0,0),M=ao(t,r.doRotary?_:m,i),T=ao(t,f,i);r5(t,v,M,T,void 0,void 0,o,l,void 0,i,u,d)}}),nW=eA(()=>{a9(),nt(),nu(),nl(),au=(t,r,i,s,a,n,o,l)=>{let u=ru(n),d=1===u?"f32":`vec${u}f`,c=1===u?"vec2f":`mat2x${u}f`,p=a*o,h=64;1===p&&(h=256);let m=[a,o,n/u],f=[a,o,2],g=[];return g.push(...rl(m,f)),t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${l};${h}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:p},programUniforms:g}),getShaderSource:t=>{let a=rf("x",r.dataType,3,u),n=[a,rf("scale",i.dataType,i.dims),rf("bias",s.dataType,s.dims),rg("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${c}, ${h}>;
  const workgroup_size = ${h}u;
  ${t.declareVariables(...n)}
  ${t.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${d}(0);
    var squared_sum = ${d}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${d}(${a.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${c}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${rp("workgroup_shared[0][0]",u)} / f32(hight * ${u});
      let squared_sum_final = ${rp("workgroup_shared[0][1]",u)} / f32(hight * ${u});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${l}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[r,i,s],outputs:[-1]})[0]},ad=(t,r)=>{var i,s,a;let n,o,l,u,d,c,p,h,m;"NHWC"===r.format?((t,r,i)=>{let s=r[0].dims,a=s[0],n=s[s.length-1],o=tj.sizeFromDimension(s,1)/n,l=ru(n),u=tj.size(s)/l,d=[{type:12,data:o},{type:12,data:Math.floor(n/l)}],c=!1,p=[0,s.length-1];for(let t=0;t<s.length-2;t++)c=c||1!==s[t+1],p.push(t+1);let h=(c=c&&1!==s[s.length-1])?t.compute(rv(t.inputs[0],p),{inputs:[t.inputs[0]],outputs:[-1]})[0]:t.inputs[0].reshape(Array.from({length:s.length},(t,r)=>s[p[r]])),m=au(t,h,r[1],r[2],a,o,n,i.epsilon);t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let i=rn(r[0].dataType),a=1===l?"vec2f":`mat${l}x2f`,n=t=>{let r=0===t?"x":"y",s=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${i}(${s}(scale.${r}))`;case 2:return`vec2<${i}>(${s}(scale[0].${r}, scale[1].${r}))`;case 4:return`vec4<${i}>(${s}(scale[0].${r}, scale[1].${r}, scale[2].${r}, scale[3].${r}))`;default:throw Error(`Not supported compoents ${l}`)}},o=rf("input",r[0].dataType,r[0].dims,l),u=rg("output",r[0].dataType,s,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${o.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${a}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${u.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${t.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${n(0)}, ${n(1)});
  }`}},{inputs:[r[0],m]})})(t,t.inputs,r):(i=t,s=t.inputs,a=r,o=(n=s[0].dims)[0],l=n[1],u=tj.sizeFromDimension(n,2),d=ru(u),c=tj.size(n)/d,p=au(i,s[0],s[1],s[2],o,u,l,a.epsilon),h=[o,l,u/d],m=[o,l],i.compute({name:"InstanceNormalization",shaderCache:{hint:`${d}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:n,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:[{type:12,data:c},...rl(h,m,h)]}),getShaderSource:t=>{let r=rf("x",s[0].dataType,h.length,d),i=rf("scale_shift",1,m.length,2),a=rg("output",s[0].dataType,h.length,d),n=[r,i,a];return`
  ${t.registerUniform("output_size","u32").declareVariables(...n)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${i.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${r.getByOffset("global_idx")} * ${a.type.value}(scale_shift.x) + ${a.type.value}(scale_shift.y);
      ${a.setByOffset("global_idx","value")};
  }`}},{inputs:[s[0],p]}))}}),nH=eA(()=>{a9(),nt(),nl(),ac=(t,r)=>{(t=>{if(!t||t.length<2)throw Error("layerNorm requires at least 2 inputs.")})(t.inputs),t.compute(((t,r,i)=>{let s=r.simplified,a=t[0].dims,n=t[1],o=!s&&t[2],l=tj.normalizeAxis(r.axis,a.length),u=tj.sizeToDimension(a,l),d=tj.sizeFromDimension(a,l),c=tj.size(n.dims),p=o?tj.size(o.dims):0;if(c!==d||o&&p!==d)throw Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let t=0;t<a.length;++t)t<l?h.push(a[t]):h.push(1);let m=ru(d),f=["type","type"],g=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/m)},{type:1,data:r.epsilon}];o&&f.push("type");let _=i>1,y=i>2,b=[{dims:a,dataType:t[0].dataType}];return _&&b.push({dims:h,dataType:1}),y&&b.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${m};${i};${s}`,inputDependencies:f},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:r=>{let i=rn(t[0].dataType),l=[rf("x",t[0].dataType,t[0].dims,m),rf("scale",n.dataType,n.dims,m)];return o&&l.push(rf("bias",o.dataType,o.dims,m)),l.push(rg("output",t[0].dataType,a,m)),_&&l.push(rg("mean_data_output",1,h)),y&&l.push(rg("inv_std_output",1,h)),`
  ${r.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...l)}
  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${rd("f32",m)};
    var mean_square_vector = ${rd("f32",m)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${rc(i,m,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${rp("mean_vector",m)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${rp("mean_square_vector",m)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${rc(i,m,"x[j + offset]")};
      let f32scale = ${rc(i,m,"scale[j]")};
      output[j + offset] = ${l[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${rc(i,m,"bias[j]")}`:""}
      );
    }

    ${_?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}})(t.inputs,r,t.outputCount))}}),nK=eA(()=>{nt(),nM(),nT(),ap=t=>{var r=t.inputs;if(!r||2!==r.length)throw Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw Error("shared dimension does not match.");let i=tN.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!i)throw Error("Can't use matmul on the given tensors");let s=i[i.length-1],a=t.inputs[0].dims[t.inputs[0].dims.length-1];if(s<8&&a<8)t.compute(si(t.inputs,{activation:""},i));else{let r=i[i.length-2],n=tj.size(t.inputs[0].dims.slice(0,-2)),o=tj.size(t.inputs[1].dims.slice(0,-2));if(1!==n&&1===r&&1===o){let r=t.inputs[0].reshape([1,n,a]),o=t.inputs[1].reshape([1,a,s]),l=[1,n,s],u=[r,o];t.compute(so(u,{activation:""},i,l),{inputs:u})}else t.compute(so(t.inputs,{activation:""},i))}}}),nQ=eA(()=>{a9(),nt(),no(),nl(),ah=(t,r)=>{var i,s,a,n;let o,l,u,d,c,p,h,m,f,g,_,y,b,w,x,v,M,T,k,$,C,S,P,E,F,A,I,z,L,O,B,D,N,j,R,V,G,U,q,W,H;((t,r)=>{if(t.length<3||t.length>4)throw Error("MatMulNBits requires 3 or 4 inputs");let i=t[0],s=i.dims.length;if(i.dims[s-1]!==r.k)throw Error("The last dim of input shape does not match the k value");let a=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,o=t[1];if(!tj.areEqual(o.dims,[r.n,a,n]))throw Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let l=t[2].dims;if(tj.size(l)!==r.n*a)throw Error("scales input size error.");if(4===t.length){let i=t[3].dims,s=r.bits>4?r.n*a:r.n*Math.floor((a+1)/2);if(tj.size(i)!==s)throw Error("zeroPoints input size error.")}})(t.inputs,r),32===r.blockSize&&t.adapterInfo.isVendor("intel")&&t.adapterInfo.isArchitecture("gen-12lp")?t.compute((i=t.inputs,s=r,l=(o=i[0].dims).length,u=o[l-2],d=s.k,c=s.n,p=o.slice(0,l-2),h=tj.size(p),m=i[1].dims[2]/4,f=i[0].dataType,g=ru(s.k),_=ru(m),y=p.concat([u,c]),v=(x=(w=128/(b=c%8==0?8:c%4==0?4:1))*_*8)/g,M=x/s.blockSize,T=tj.size(y)/b,k=[],$=[h,u,d/g],(C=tj.convertShape(i[1].dims).slice()).splice(-1,1,m/_),k.push(...rl($)),k.push(...rl(C)),k.push(...rl(i[2].dims)),4===i.length&&k.push(...rl(tj.convertShape(i[3].dims))),S=[h,u,c],k.push(...rl(S)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${s.blockSize};${g};${_};${w};${b}`,inputDependencies:Array(i.length).fill("rank")},getRunData:()=>({outputs:[{dims:y,dataType:f}],dispatchGroup:{x:T},programUniforms:k}),getShaderSource:t=>{let r=$.length,a=rf("a",i[0].dataType,r,g),n=rf("b",12,C.length,_),o=rf("scales",i[2].dataType,i[2].dims.length),l=[a,n,o],u=4===i.length?rf("zero_points",12,i[3].dims.length):void 0;u&&l.push(u);let d=S.length,c=rg("output",i[0].dataType,d),p=rn(i[0].dataType);return`
        var<workgroup> sub_a: array<${a.type.value}, ${v}>;
        var<workgroup> inter_results: array<array<${c.type.value}, ${w}>, ${b}>;
        ${t.declareVariables(...l,c)}
        ${t.mainStart([w,b,1])}
          let output_indices = ${c.offsetToIndices(`workgroup_index * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${M} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${v};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${v}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${a.getByIndices(`${a.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${a.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${M} + local_id.x;
            ${u?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${p}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${p}(8);`}
            let scale = ${o.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${n.getByIndices(`${n.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${s.blockSize/g};
            for (var i: u32 = 0; i < ${_}; i++) {
              ${(()=>{switch(g){case 1:return`
          let a_data0 = vec4<${p}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${p}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${p}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${p}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw Error(`${g}-component is not supported.`)}})()}
              let b_value = ${1===_?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${p}>(${Array.from({length:4},(t,r)=>`${p}(b_value_lower[${r}]), ${p}(b_value_upper[${r}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${p}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(t,r)=>`dot(a_data${r}, b_dequantized_values[${r}])`).join(" + ")};
              word_offset += ${8/g};
            }
            workgroupBarrier();
          }

          if (local_idx < ${b}) {
            var output_value: ${c.type.value} = ${c.type.value}(0);
            for (var b = 0u; b < ${w}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${c.setByIndices(`${c.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}})):t.compute((a=t.inputs,n=r,E=(P=a[0].dims).length,F=P[E-2],A=n.k,I=n.n,z=P.slice(0,E-2),L=tj.size(z),O=a[1].dims[2]/4,B=a[0].dataType,D=ru(n.k),N=ru(O),j=ru(I),R=z.concat([F,I]),V=F>1&&I/j%2==0?2:1,G=tj.size(R)/j/V,U=[],q=[L,F,A/D],(W=tj.convertShape(a[1].dims).slice()).splice(-1,1,O/N),U.push(...rl(q)),U.push(...rl(W)),U.push(...rl(a[2].dims)),4===a.length&&U.push(...rl(tj.convertShape(a[3].dims))),H=[L,F,I/j],U.push(...rl(H)),{name:"MatMulNBits",shaderCache:{hint:`${n.blockSize};${n.bits};${D};${N};${j};${V};64`,inputDependencies:Array(a.length).fill("rank")},getRunData:()=>({outputs:[{dims:R,dataType:B}],dispatchGroup:{x:G},programUniforms:U}),getShaderSource:t=>{let r=q.length,i=rf("a",a[0].dataType,r,D),s=rf("b",12,W.length,N),o=rf("scales",a[2].dataType,a[2].dims.length),l=[i,s,o],u=4===a.length?rf("zero_points",12,a[3].dims.length):void 0;u&&l.push(u);let d=H.length,c=rg("output",a[0].dataType,d,j),p=rn(a[0].dataType),h=(()=>{switch(D){case 1:return`array<${p}, 8>`;case 2:return`mat4x2<${p}>`;case 4:return`mat2x4<${p}>`;default:throw Error(`${D}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${c.type.value}, ${64*V}>;
        ${t.declareVariables(...l,c)}
        ${t.mainStart([64,1,1])}
          let output_indices = ${c.offsetToIndices(`(global_idx / 64) * ${V}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${n.blockSize/D};
            ${(()=>{let t=`
            var col_index = col * ${j};
            ${u?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${p}(8);`}
            `;for(let r=0;r<j*V;r++)t+=`
            let scale${r} = ${o.getByOffset("col_index * nBlocksPerCol + block")};
            ${u?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${r} = ${p}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return t})()}
            for (var word: u32 = 0; word < ${O}; word += ${N}) {
              ${(()=>{let t=`col_index = col * ${j};`;for(let r=0;r<j*V;r++)t+=`
            let b${r}_data = ${s.getByIndices(`${s.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return t+`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${h};
            var b_dequantized_values: ${h};`})()}
              for (var i: u32 = 0; i < ${N}; i++) {
                ${(()=>{let t=`
          // reuse a data
            var input_offset = ${i.indicesToOffset(`${i.type.indices}(batch, row, word_offset)`)};
            var a_data: ${h};
            for (var j: u32 = 0; j < ${8/D}; j++) {
              a_data[j] = ${i.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let r=0;r<j*V;r++)t+=`
            b_value = ${1===N?`b${r}_data`:`b${r}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${h}(${Array.from({length:4},(t,r)=>`${p}(b_value_lower[${r}]), ${p}(b_value_upper[${r}])`).join(", ")});
            b_dequantized_values = ${1===D?`${h}(${Array.from({length:8},(t,i)=>`(b_quantized_values[${i}] - ${u?`zero_point${r}`:"zero_point"}) * scale${r}`).join(", ")});`:`(b_quantized_values - ${h}(${Array(8).fill(`${u?`zero_point${r}`:"zero_point"}`).join(",")})) * scale${r};`};
            workgroup_shared[local_id.x * ${V} + ${Math.floor(r/j)}]${j>1?`[${r%j}]`:""} += ${Array.from({length:8/D},(t,r)=>`${1===D?`a_data[${r}] * b_dequantized_values[${r}]`:`dot(a_data[${r}], b_dequantized_values[${r}])`}`).join(" + ")};
          `;return t})()}
                word_offset += ${8/D};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${V}) {
            var output_value: ${c.type.value} = ${c.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${V};
            }
            ${c.setByIndices(`${c.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}))},am=t=>ri(t)}),nX=eA(()=>{a9(),nt(),nl(),af=(t,r)=>{let i,s,a,n;var o,l,u=t.inputs;if(!u||u.length<1)throw Error("Too few inputs");if(1!==u[0].dataType&&10!==u[0].dataType)throw Error("Input type must be float or float16.");if(u.length>=2){let t=2*u[0].dims.length===u[1].dims[0];if(4===u.length&&(t=2*u[3].dims[0]===u[1].dims[0]),!t)throw Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}let d=((t,r)=>{if(!(t.length>1))return r;{let i=t[1].getBigInt64Array(),s=t.length>=3&&t[2].data?10===t[2].dataType?t[2].getUint16Array()[0]:t[2].getFloat32Array()[0]:0,a=t[0].dims.length,n=new Int32Array(2*a).fill(0);if(t.length>=4){let r=t[3].getBigInt64Array();for(let t=0;t<r.length;t++)n[Number(r[t])]=Number(i[t]),n[Number(r[t])+a]=Number(i[t+r.length])}else i.forEach((t,r)=>n[Number(r)]=Number(t));let o=[];return n.forEach(t=>o.push(t)),{mode:r.mode,value:s,pads:o}}})(t.inputs,r);t.compute((o=t.inputs,l=d,i=tj.padShape(o[0].dims.slice(),l.pads),s=o[0].dims,a=[{type:12,data:tj.size(i)},{type:6,data:l.pads}],n=o.length>=3&&o[2].data,0===l.mode&&a.push({type:n?o[2].dataType:1,data:l.value}),a.push(...rl(o[0].dims,i)),{name:"Pad",shaderCache:{hint:`${l.mode}${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:o[0].dataType}],dispatchGroup:{x:Math.ceil(tj.size(i)/64)},programUniforms:a}),getShaderSource:t=>{let r=rg("output",o[0].dataType,i.length),a=rf("x",o[0].dataType,s.length),u=a.type.value,d=((t,r,i)=>{switch(i.mode){case 0:var s=t,a=r,n=i.pads.length;let o="";for(let t=a-1;t>=0;--t)o+=`
            k = i32(${s.indicesGet("indices",t)}) - ${rh("uniforms.pads",t,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${rh("uniforms.x_shape",t,a)})) {
              break;
            }
            offset += k * i32(${rh("uniforms.x_strides",t,a)});
        `;return`
          value = ${s.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `;case 1:var l=t,u=r,d=i.pads.length;let c="";for(let t=u-1;t>=0;--t)c+=`
                k = i32(${l.indicesGet("indices",t)}) - ${rh("uniforms.pads",t,d)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${rh("uniforms.x_shape",t,u)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${rh("uniforms.x_shape",t,u)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${rh("uniforms.x_strides",t,u)});
            `;return`
              var offset = 0;
              var k = 0;
              ${c}
              value = x[offset];
          `;case 2:var p=t,h=r,m=i.pads.length;let f="";for(let t=h-1;t>=0;--t)f+=`
                k = i32(${p.indicesGet("indices",t)}) - ${rh("uniforms.pads",t,m)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${rh("uniforms.x_shape",t,h)})) {
                  k = i32(${rh("uniforms.x_shape",t,h)}) - 1;
                }
                offset += k * i32(${rh("uniforms.x_strides",t,h)});
            `;return`
              var offset = 0;
              var k = 0;
              ${f}
              value = x[offset];
          `;case 3:var g=t,_=r,y=i.pads.length;let b="";for(let t=_-1;t>=0;--t)b+=`
                k = i32(${g.indicesGet("indices",t)}) - ${rh("uniforms.pads",t,y)};
                if (k < 0)  {
                  k += i32(${rh("uniforms.x_shape",t,_)}]);
                }
                if (k >= i32(${rh("uniforms.x_shape",t,_)})) {
                  k -= i32(${rh("uniforms.x_shape",t,_)});
                }
                offset += k * i32(${rh("uniforms.x_strides",t,_)});
            `;return`
              var offset = 0;
              var k = 0;
              ${b}
              value = x[offset];
          `;default:throw Error("Invalid mode")}})(r,s.length,l),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:l.pads.length}];return 0===l.mode&&c.push({name:"constant_value",type:n?u:"f32"}),`
            ${t.registerUniforms(c).declareVariables(a,r)}
            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${r.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${d}
            output[global_idx] = value;
        }`}}),{inputs:[0]})}}),nJ=eA(()=>{e0(),a9(),nt(),nl(),ag=t=>{if(es.webgpu.validateInputContent&&(!t||1!==t.length))throw Error("Pool ops requires 1 input.")},a_=(t,r,i)=>{let s="NHWC"===r.format,a=t.dims.slice();s&&a.splice(1,0,a.pop());let n=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),l=r.strides.slice(),u=n?r.dilations.slice():[],d=r.pads.slice();tR.adjustPoolAttributes(i,a,o,l,u,d);let c=tR.computePoolOutputShape(i,a,l,u,o,d,r.autoPad),p=Object.assign({},r);n?Object.assign(p,{kernelShape:o,strides:l,pads:d,dilations:u,cacheKey:r.cacheKey}):Object.assign(p,{kernelShape:o,strides:l,pads:d,cacheKey:r.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,s?h:c]},ay=(t,r)=>{let i="NHWC"===r.format,s=[{type:12,data:tj.size(t)},{type:12,data:tj.size(r.kernelShape)}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let t=r.kernelShape[r.kernelShape.length-1],i=r.strides[r.strides.length-1],n=r.pads[r.pads.length/2-1],o=r.pads[r.pads.length-1],l=!!(n+o);s.push({type:12,data:t},{type:12,data:i},{type:12,data:n},{type:12,data:o}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(2===r.kernelShape.length){let t=r.kernelShape[r.kernelShape.length-2],i=r.strides[r.strides.length-2],n=r.pads[r.pads.length/2-2],o=r.pads[r.pads.length-2];u=!!(n+o),s.push({type:12,data:t},{type:12,data:i},{type:12,data:n},{type:12,data:o}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,a,!0,l,u]}{if(i)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let t=tj.computeStrides(r.kernelShape);return s.push({type:12,data:t},{type:12,data:r.pads},{type:12,data:r.strides}),a.push({name:"kernelStrides",type:"u32",length:t.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length}),[s,a,!!r.pads.reduce((t,r)=>t+r),!1,!1]}},ab=(t,r,i,s,a,n,o,l,u,d,c,p)=>{let h="NHWC"===a.format,m=r.type.value,f=rg("output",r.type.tensor,s);if(a.kernelShape.length<=2){let s="",d="",g="",_=i-(h?2:1);if(s=c?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,2===a.kernelShape.length){let t=i-(h?3:2);d=p?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${t}] < 0 || xIndices[${t}] >= uniforms.x_shape[${t}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                `,g=`
              }
            `}return`
            ${t.registerUniforms(u).declareVariables(r,f)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${m}(${l});
              var pad = 0;
              ${d}
              ${s}
              ${g}
              ${o}

              output[global_idx] = value;
            }`}{if(h)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let s=a.kernelShape.length,c=a.pads.length,p="";return p=d?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${t.registerUniforms(u).declareVariables(r,f)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${s}>;

              var value = ${m}(${l});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${s-1}u; j++) {
                  offsets[j] = offset / ${rh("uniforms.kernelStrides","j",s)};
                  offset -= offsets[j] * ${rh("uniforms.kernelStrides","j",s)};
                }
                offsets[${s-1}] = offset;

                isPad = false;
                for (var j = ${i-s}u; j < ${i}u; j++) {
                  xIndices[j] = indices[j] * ${rh("uniforms.strides",`j - ${i-s}u`,s)}
                    + offsets[j - ${i-s}u] - ${rh("uniforms.pads","j - 2u",c)};
                  ${p}
              }
              ${o}

              output[global_idx] = value;
            }`}},aw=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,ax=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),av=(t,r,i,s)=>{let[a,n]=a_(r,s,i),o=rf("x",r.dataType,r.dims.length),l=o.type.value,u="";a.countIncludePad?u+=`value /= ${l}(uniforms.kernelSize);`:u+=`value /= ${l}(i32(uniforms.kernelSize) - pad);`;let[d,c,p,h,m]=ay(n,a);return d.push(...rl(r.dims,n)),{name:t,shaderCache:{hint:`${s.cacheKey};${p};${h};${m}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tj.size(n)/64)},programUniforms:d}),getShaderSource:t=>ab(t,o,r.dims.length,n.length,a,"value += x_val;",u,0,c,p,h,m)}},aM=t=>{let r,i=0!==t.count_include_pad,s=ax(t);if(0!==s.ceilMode)throw Error("using ceil() in shape computation is not yet supported for AveragePool");let a={countIncludePad:i,...s,cacheKey:""};return{...a,cacheKey:(r=a,`${aw(r)};${r.countIncludePad}`)}},aT=(t,r)=>{ag(t.inputs),t.compute(av("AveragePool",t.inputs[0],!1,r))},ak={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},a$=t=>{let r=t.format;return{format:r,...ak,cacheKey:r}},aC=(t,r)=>{ag(t.inputs),t.compute(av("GlobalAveragePool",t.inputs[0],!0,r))},aS=(t,r,i,s)=>{let[a,n]=a_(r,s,i),o=`
      value = max(x_val, value);
    `,l=rf("x",r.dataType,r.dims.length),[u,d,c,p,h]=ay(n,a);return u.push(...rl(r.dims,n)),{name:t,shaderCache:{hint:`${s.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tj.size(n)/64)},programUniforms:u}),getShaderSource:t=>ab(t,l,r.dims.length,n.length,a,o,"",10===r.dataType?-65504:-1e5,d,c,p,h)}},aP=(t,r)=>{ag(t.inputs),t.compute(aS("MaxPool",t.inputs[0],!1,r))},aE=t=>{let r,i=t.storage_order,s=t.dilations,a=ax(t);if(0!==i)throw Error("column major storage order is not yet supported for MaxPool");if(0!==a.ceilMode)throw Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:i,dilations:s,...a,cacheKey:""};return{...n,cacheKey:(r=n,`${aw(r)};${r.storageOrder};${r.dilations}`)}},aF=t=>{let r=t.format;return{format:r,...ak,cacheKey:r}},aA=(t,r)=>{ag(t.inputs),t.compute(aS("GlobalMaxPool",t.inputs[0],!0,r))}}),nY=eA(()=>{a9(),nt(),no(),nl(),aI=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h,m,f,g,_,y,b,w,x,v,M,T,k,$,C;((t,r)=>{if(t.length<2||t.length>3)throw Error("DequantizeLinear requires 2 or 3 inputs.");if(3===t.length&&t[1].dims===t[2].dims)throw Error("x-scale and x-zero-point must have the same shape.");if(3===t.length&&t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(6===t[0].dataType&&t.length>2)throw Error("In the case of dequantizing int32 there is no zero point.");if(0!==t[1].dims.length&&1!==t[1].dims.length&&t[1].dims.length!==t[0].dims.length)throw Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(t.length>2){if(t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(t[1].dims.length!==t[2].dims.length)throw Error("scale and zero-point inputs must have the same rank.");if(!t[1].dims.map((r,i)=>r===t[2].dims[i]).reduce((t,r)=>t&&r,!0))throw Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(0===t[1].dims.length||1===t[1].dims.length&&1===t[1].dims[0])throw Error("blockSize must be set only for block quantization.");if(!t[1].dims.map((i,s)=>s===r.axis||i===t[0].dims[s]).reduce((t,r)=>t&&r,!0))throw Error("For block qunatization, scale input shape to match the input shape except for the axis");if(t[1].dims.length!==t[0].dims.length)throw Error("For block qunatization the scale input rank must be the same as the x rank.");let i=t[0].dims[r.axis],s=t[1].dims[r.axis];if(r.blockSize<Math.ceil(i/s)||r.blockSize>Math.ceil(i/(s-1)-1))throw Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}})(t.inputs,r),t.compute((i=t.inputs,s=r,a=tj.normalizeAxis(s.axis,i[0].dims.length),o=3===(n=i[0].dataType),l=i[0].dims,u=i[1].dataType,d=tj.size(l),p=(c=3===n||2===n)?[Math.ceil(tj.size(i[0].dims)/4)]:i[0].dims,h=i[1].dims,f=(m=i.length>2?i[2]:void 0)?c?[Math.ceil(tj.size(m.dims)/4)]:m.dims:void 0,_=!1==(g=0===h.length||1===h.length&&1===h[0])&&1===h.length,y=ru(d),w=(b=g&&(!c||4===y))?y:1,x=rf("input",c?12:n,p.length,b&&!c?y:1),v=rf("scale",u,h.length),M=m?rf("zero_point",c?12:n,f.length):void 0,T=rg("output",u,l.length,w),k=[x,v],M&&k.push(M),$=[p,h],m&&$.push(f),C=[{type:12,data:d/w},{type:12,data:a},{type:12,data:s.blockSize},...rl(...$,l)],{name:"DequantizeLinear",shaderCache:{hint:s.cacheKey,inputDependencies:M?["rank","rank","rank"]:["rank","rank"]},getShaderSource:t=>`
      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...k,T)}
      ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${T.offsetToIndices("global_idx")};

          // Set input x
          ${c?`
            let input = ${x.getByOffset("global_idx / 4")};
            let x_vec = ${o?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${1===w?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${x.getByOffset("global_idx")};`};

          // Set scale input
          ${g?`let scale_value= ${v.getByOffset("0")}`:_?`
            let scale_index = ${T.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${v.getByOffset("scale_index")};`:`
            var scale_indices: ${v.type.indices} = output_indices;
            let index = ${v.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${v.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${v.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${M?g?c?`
                let zero_point_input = ${M.getByOffset("0")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${M.getByOffset("0")}`:_?c?`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${M.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${M.getByOffset("zero_point_index")};`:c?`
                let zero_point_offset = ${v.indicesToOffset("scale_indices")};
                let zero_point_input = ${M.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${M.getByIndices("scale_indices")};`:`let zero_point_value = ${c?o?"i32":"u32":x.type.value}(0);`};
      // Compute and write output
      ${T.setByOffset("global_idx",`${T.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:l,dataType:u}],dispatchGroup:{x:Math.ceil(d/w/64),y:1,z:1},programUniforms:C})}))},az=t=>ri({axis:t.axis,blockSize:t.blockSize})}),nZ=eA(()=>{e0(),a9(),nl(),aL=t=>{var r,i,s,a;let n,o,l,u=0,d=0,c=0;6===t.inputs[0].dataType?(u=t.inputs[0].getInt32Array()[0],d=t.inputs[1].getInt32Array()[0],c=t.inputs[2].getInt32Array()[0]):1===t.inputs[0].dataType&&(u=t.inputs[0].getFloat32Array()[0],d=t.inputs[1].getFloat32Array()[0],c=t.inputs[2].getFloat32Array()[0]),es.webgpu.validateInputContent&&((t,r,i)=>{if(t===r||t<r&&i<0||t>r&&i>0)throw Error("Range these inputs' contents are invalid.")})(u,d,c),t.compute((r=u,i=d,s=c,a=t.inputs[0].dataType,o=[n=Math.abs(Math.ceil((i-r)/s))],l=[{type:12,data:n},{type:a,data:r},{type:a,data:s},...rl(o)],{name:"Range",shaderCache:{hint:`${a}`},getShaderSource:t=>{let r=rg("output",a,o.length),i=r.type.value;return`
        ${t.registerUniforms([{name:"outputSize",type:"u32"},{name:"start",type:i},{name:"delta",type:i}]).declareVariables(r)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${i}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:o,dataType:a}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:l})}),{inputs:[]})}}),n0=eA(()=>{a9(),nt(),no(),nl(),aO=(t,r)=>`${1===t?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,aB=(t,r,i)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${i?"global_idx":"idx"} + i];
        ${((t,r,i,s)=>{if("none"!==t&&"i32"!==s&&"u32"!==s&&"f32"!==s)throw Error(`Input ${s} is not supported with reduction ${t}.`);let a=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(t){case"none":return`${r}=${i};`;case"add":return"i32"===s||"u32"===s?`atomicAdd(&${r}, bitcast<${s}>(${i}));`:`
              ${a}bitcast<${s}>(oldValue) + (${i})${n}`;case"max":return"i32"===s||"u32"===s?`atomicMax(&${r}, bitcast<${s}>(${i}));`:`
                ${a}max(bitcast<f32>(oldValue), (${i}))${n}`;case"min":return"i32"===s||"u32"===s?`atomicMin(&${r}, bitcast<${s}>(${i}));`:`${a}min(bitcast<${s}>(oldValue), (${i}))${n}`;case"mul":return`${a}(bitcast<${s}>(oldValue) * (${i}))${n}`;default:throw Error(`Reduction ${t} is not supported.`)}})(t.reduction,"output[data_offset + i]","value",r)}
      }`,aD=t=>ri({reduction:t.reduction}),aN=(t,r)=>{var i,s;let a,n,o,l,u,d,c;t.compute((i=t.inputs,s=r,a=i[0].dims,n=i[1].dims,o=Math.ceil(tj.size(n)/1),l=n[n.length-1],u=tj.sizeFromDimension(a,l),d=tj.sizeFromDimension(n,0)/l,c=[{type:12,data:o},{type:12,data:l},{type:12,data:u},...rl(i[1].dims,i[2].dims,a)],{name:"ScatterND",shaderCache:{hint:`${s.cacheKey}_${s.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:t=>{let r=rf("indices",i[1].dataType,i[1].dims.length),n=rf("updates",i[2].dataType,i[2].dims.length,1),o="none"!==s.reduction&&""!==s.reduction?r_("output",i[0].dataType,a.length):rg("output",i[0].dataType,a.length,1);return`
      ${t.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(r,n,o)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${"none"===s.reduction}) {
    for (var i = 0; i < ${d}; i = i + 1) {
      for (var j = i + 1; j < ${d}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${"none"===s.reduction} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${d}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${aO(a.length,!1)}
      }
      ${aB(s,o.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${aO(a.length,!0)}
  }
  ${aB(s,o.type.value,!0)}
  }`}}),{inputs:[t.inputs[1],t.inputs[2]],outputs:[]})}}),n1=eA(()=>{a9(),nt(),no(),nl(),aj=(t,r,i,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${t}) * (${r});
  let whole = ${s}(big / (${i}));
  let fract = ${s}(big % (${i})) / ${s}(${i});
  return whole + fract;
`,aR=(t,r,i,s)=>t.rank>s?`
    ${t.indicesSet("input_indices",r,"channel")};
    ${t.indicesSet("input_indices",i,"batch")};
`:"",aV=(t,r)=>{var i,s,a,n,o,l,u,d,c,p,h,m;let f,g,_,y,b,w,x,v,M,T,k,$,C,S,P,E,F=[],A=[],I=[],z=new Uint32Array(f=t.customDataBuffer,f.byteOffset,1)[0];if(0!==r.antialias)throw Error("Only default value (0) for Antialias attribute is supported");((t,r,i,s,a,n)=>{let[o,l,u]=i>10?[1,2,3]:[-1,t.length>1?1:-1,-1],d=t[0].dims.length;if(o>0&&t.length>o&&t[o].dims.length>0)t[o].getFloat32Array().forEach(t=>n.push(t));else if("tf_crop_and_resize"===r.coordinateTransformMode)throw Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&t.length>l&&1===t[l].dims.length&&t[l].dims[0]>0){var c,p,h;let a;if(t[l].getFloat32Array().forEach(t=>s.push(t)),0!==s.length&&s.length!==d&&i>=18&&s.length!==r.axes.length)throw Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");((t,r)=>{if(t.every(t=>t>0||(()=>{throw Error("Resize requires scales input values to be positive")})),t.length>0){if("linear"===r.mode){if(2!==t.length&&3!==t.length&&(4!==t.length||1!==t[0]||1!==t[1])&&(4!==t.length||1!==t[0]||1!==t[3])&&(5!==t.length||1!==t[0]||1!==t[1]))throw Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if("cubic"===r.mode&&2!==t.length&&(4!==t.length||1!==t[0]||1!==t[1])&&(4!==t.length||1!==t[0]||1!==t[3]))throw Error("Resize requires scales input size to be 2 or 4 for cubic mode")}})(s,r),r.axes.length>0&&(c=s,p=r.axes,h=d,p.every(t=>t>=0&&t<h||(()=>{throw Error("Resize requires axes input values to be positive and less than rank")})),a=Array(h).fill(1),p.forEach((t,r)=>a[t]=c[r]),a).forEach((t,r)=>s[r]=t)}if(u>0&&t.length>u&&1===t[u].dims.length&&t[u].dims[0]>0&&(t[u].getBigInt64Array().forEach(t=>a.push(Number(t))),0!==a.length&&a.length!==d&&i>=18&&a.length!==r.axes.length))throw Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(0!==s.length&&s.length!==r.axes.length)throw Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==a.length&&a.length!==r.axes.length)throw Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if("u">typeof s&&"u">typeof a&&s.length>0&&a.length>d)throw Error("Resize requires only of scales or sizes to be specified")})(t.inputs,r,z,F,A,I),t.compute((i=t.inputs[0],s=r,a=z,n=F,o=A,l=I,y=i.dims,b=(u=l,d=s.axes,g=Array(c=y.length).fill(0).concat(Array(c).fill(1)),_=0===u.length?g:u.slice(),d.length>0?(d.forEach((t,r)=>{g[t]=_[r],g[r+c]=_[d.length+r]}),g):_),w=((t,r,i,s)=>{let a=[];if(i.length>0)if(s.length>0){if(t.forEach(t=>a.push(t)),Math.max(...s)>t.length)throw Error("axes is out of bound");s.forEach((t,r)=>a[t]=i[r])}else i.forEach(t=>a.push(t));else{if(0===r.length)throw Error("Resize requires either scales or sizes.");a=t.map((t,i)=>Math.round(t*r[i]))}return a})(y,n,o,s.axes),x=n.slice(),0===n.length&&(x=y.map((t,r)=>0===t?1:w[r]/t),"stretch"!==s.keepAspectRatioPolicy&&(p=y,h=x,m=s,v=(()=>{switch(m.keepAspectRatioPolicy){case"not_larger":return m.axes.length>0?Math.min(...m.axes.map(t=>h[t]),Number.MAX_VALUE):Math.min(...h,Number.MAX_VALUE);case"not_smaller":return m.axes.length>0?Math.max(...m.axes.map(t=>h[t]),5e-324):Math.max(...h,5e-324);default:throw Error(`Keep aspect ratio policy ${m.keepAspectRatioPolicy} is not supported`)}})(),h.fill(1,0,h.length),M=p.slice(),m.axes.length>0?(m.axes.forEach(t=>h[t]=v),m.axes.forEach(t=>M[t]=Math.round(p[t]*h[t]))):(h.fill(v,0,h.length),M.forEach((t,r)=>M[r]=Math.round(t*h[r]))),w=M)),T=rg("output",i.dataType,w.length),k=rf("input",i.dataType,y.length),$=tj.size(w),C=y.length===w.length&&y.every((t,r)=>t===w[r]),S="tf_crop_and_resize"===s.coordinateTransformMode,P=s.extrapolationValue,E=k.type.value,{name:"Resize",shaderCache:{hint:`${s.cacheKey}|${a}|${x.length>0?"cubic"===s.mode?x:x.length:""}|${o.length>0?o:""}|${b.length>0?b:""}|${C}|${"nearest"===s.mode?y.length:y}`,inputDependencies:["rank"]},getShaderSource:t=>{let r,i;return`
      ${C?"":`
      ${r=s.coordinateTransformMode,i=E,`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${i} { `+(()=>{switch(r){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${i}(xResized) / ${i}(xScale);
          } else {
            ${aj("xResized","lengthOriginal","lengthResized",i)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${i}(xResized) + 0.5) / ${i}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${i}(xResized) + 0.5) / ${i}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${aj("xResized","lengthOriginal - 1","lengthResized - 1",i)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${i}(roiStart) * ${i}(lengthOriginal - 1) +
                        (${i}(xResized) * ${i}(roiEnd - roiStart) * ${i}(lengthOriginal - 1)) /
                        ${i}(lengthResized - 1);
                  } else {
                    return 0.5 * ${i}(roiStart + roiEnd) * ${i}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${i}xScale * ${i}(lengthResized);
                  const adjustment = ${i}(lengthResized) / outputWidth;
                  const center = ${i}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${i}(xResized) + 0.5) / ${i}(xScale)) - 0.5;`;case"half_pixel":return`return ((${i}(xResized) + 0.5) / ${i}(xScale)) - 0.5;`;default:throw Error(`Coordinate transform mode ${r} is not supported`)}})()+"}"};
      ${(()=>{switch(s.mode){case"nearest":let t,r,i,n,o,l,u,d,c,p,h,m;return`
              ${t=k,r=y,`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${rh("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`};
              ${i=s.nearestMode,n=a,o=E,`fn getNearestPixelFromOriginal(xOriginal: ${o}, isDownSample: bool) -> ${o} {`+(()=>{switch(i){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(n<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw Error(`Nearest mode ${i} is not supported`)}})()+"}"};
              ${l=k,u=T,d=y,c=w,p=x.length,h=b.length,m=S,`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${u.type.indices}) -> ${l.type.indices} {
      var input_indices: ${l.type.indices};
      for (var i:u32 = 0; i < ${c.length}; i++) {
        var output_index = ${u.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${rh("uniforms.scales","i",p)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${rh("uniforms.roi","i",h)};
          var roi_hi = ${rh("uniforms.roi",`i + ${d.length}`,h)};
          var input_shape_i = ${rh("uniforms.input_shape","i",d.length)};
          var output_shape_i = ${rh("uniforms.output_shape","i",c.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${m} || (original_idx >= 0 && original_idx < ${u.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${u.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${l.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`};
              `;case"linear":let f,g,_,v,M;return`
              ${f=T,g=y,_=w,v=x.length,M=b.length,`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${f.type.indices}) -> array<${f.type.value}, ${_.length}> {
      var original_indices: array<${f.type.value}, ${_.length}>;
      for (var i:u32 = 0; i < ${_.length}; i++) {
        var output_index = ${f.indicesGet("output_indices","i")};
        var scale = ${rh("uniforms.scales","i",v)};
        var roi_low = ${rh("uniforms.roi","i",M)};
        var roi_hi = ${rh("uniforms.roi",`i + ${g.length}`,M)};
        if (scale == 1.0) {
          original_indices[i] = ${f.type.value}(output_index);
        } else {
          var input_shape_i = ${rh("uniforms.input_shape","i",g.length)};
          var output_shape_i = ${rh("uniforms.output_shape","i",_.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`};
              ${(()=>{if(2===y.length||4===y.length)return`${((t,r,i,s,a)=>{let[n,o,l,u]=2===i.length?[-1,0,1,-1]:[0,2,3,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(row, ${i[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(col, ${i[l]} - 1))`)};
      ${aR(t,u,n,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${o}];
      var col:${d} = originalIndices[${l}];
      ${s?`if (row < 0 || row > (${i[o]} - 1) || col < 0 || col > (${i[l]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${i[o]} - 1));
      col = max(0, min(col, ${i[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${i.length>2?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${i.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`})(k,T,y,S,P)}`;if(3===y.length||5===y.length)return`${((t,r,i,s,a)=>{let[n,o,l,u,d]=3===i.length?[-1,0,1,2,-1]:[0,2,3,4,1],c=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(depth, ${i[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(height, ${i[l]} - 1))`)};
      ${t.indicesSet("input_indices",u,`max(0, min(width, ${i[u]} - 1))`)};
      ${aR(t,d,n,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${o}];
      var height:${c} = originalIndices[${l}];
      var width:${c} = originalIndices[${u}];
      ${s?`if (depth < 0 || depth > (${i[o]} - 1) || height < 0 || height > (${i[l]} - 1) || width < 0 || (width > ${i[u]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${i[o]} - 1));
      height = max(0, min(height, ${i[l]} - 1));
      width = max(0, min(width, ${i[u]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${i.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${i.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`})(k,T,y,S,P)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(2===y.length||4===y.length)return`${((t,r,i,s,a,n,o,l,u,d)=>{let[c,p]=2===i.length?[0,1]:[2,3],h=t.type.value,m=o=>{let p=o===c?"row":"col";return`
      fn ${p}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${r.type.indices}) -> ${h} {
        var output_index = ${r.indicesGet("output_indices",o)};
        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[o]},
        ${s[o]}, ${i[o]}, ${n[o]}, ${n[o]} + ${i.length});
        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${l} && (originalIdx < 0 || originalIdx > (${i[o]} - 1))) {
          return ${u};
        }
        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${p}: ${h} = originalIdx + ${h}(i);
          if (${p} < 0 || ${p} >= ${i[o]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:l?`return ${u};`:`${p} = max(0, min(${p}, ${i[o]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",o,`u32(${p})`)};
          data[i + 1] = ${o===c?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${m(c)};
    ${m(p)};
  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {
    var absS = abs(s);
    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${h} = 1.0 - absS;
    var twoMinusAbsS: ${h} = 2.0 - absS;
    var onePlusAbsS: ${h} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {
    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${h} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `})(k,T,y,w,x,b,s.cubicCoeffA,S,s.extrapolationValue,s.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${t.registerUniform("output_size","u32").registerUniform("scales","f32",x.length).registerUniform("roi","f32",b.length).declareVariables(k,T)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${C?"output[global_idx] = input[global_idx];":`
        let output_indices = ${T.offsetToIndices("global_idx")};
        var input_indices: ${k.type.indices};
        ${(()=>{switch(s.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${k.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${s.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${2===y.length||4===y.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${s.mode}`)}})()};
`}
      }`},getRunData:()=>({outputs:[{dims:w,dataType:i.dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},{type:1,data:x},{type:1,data:b},...rl(y,w)]})}),{inputs:[0]})},aG=t=>{let r=t.antialias,i=t.axes,s=t.coordinateTransformMode,a=t.cubicCoeffA,n=0!==t.excludeOutside,o=t.extrapolationValue,l=t.keepAspectRatioPolicy,u=t.mode,d=""===t.nearestMode?"simple":t.nearestMode;return ri({antialias:r,axes:i,coordinateTransformMode:s,cubicCoeffA:a,excludeOutside:n,extrapolationValue:o,keepAspectRatioPolicy:l,mode:u,nearestMode:d})}}),n2=eA(()=>{a9(),nt(),nl(),aU=(t,r)=>{var i,s,a,n;let o,l,u,d,c,p,h,m,f,g,_,y,b;(t=>{if(!t||t.length<3)throw Error("layerNorm requires at least 3 inputs.");let r=t[0],i=t[1],s=t[2];if(r.dataType!==i.dataType||r.dataType!==s.dataType)throw Error("All inputs must have the same data type");if(3!==r.dims.length&&2!==r.dims.length)throw Error("Input must be 2D or 3D");if(3!==i.dims.length&&2!==i.dims.length)throw Error("Skip must be 2D or 3D");let a=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(i.dims[i.dims.length-1]!==a)throw Error("Skip must have the same hidden size as input");if(i.dims[i.dims.length-2]!==n)throw Error("Skip must have the same sequence length as input");if(1!==s.dims.length)throw Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==a)throw Error("Gamma must have the same hidden size as input");if(t.length>3){let r=t[3];if(1!==r.dims.length)throw Error("Beta must be 1D");if(r.dims[r.dims.length-1]!==a)throw Error("Beta must have the same hidden size as input")}if(t.length>4){let r=t[4];if(1!==r.dims.length)throw Error("Bias must be 1D");if(r.dims[r.dims.length-1]!==a)throw Error("Bias must have the same hidden size as input")}})(t.inputs);let w=[0];t.outputCount>1&&w.push(-3),t.outputCount>2&&w.push(-3),t.outputCount>3&&w.push(3),t.compute((i=t.inputs,s=r,a=t.outputCount,n=!1,o=s.simplified,l=i[0].dims,u=tj.size(l),d=l.slice(-1)[0],c=n?l.slice(0,-1).concat(1):[],p=!o&&i.length>3,h=i.length>4,m=n&&a>1,f=n&&a>2,g=a>3,y=[{type:12,data:u},{type:12,data:_=ru(d)},{type:12,data:d},{type:1,data:s.epsilon}],b=[{dims:l,dataType:i[0].dataType}],a>1&&b.push({dims:c,dataType:1}),a>2&&b.push({dims:c,dataType:1}),a>3&&b.push({dims:l,dataType:i[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${_};${m};${f};${g}`,inputDependencies:i.map((t,r)=>"type")},getShaderSource:t=>{let r=[rf("x",i[0].dataType,i[0].dims,_),rf("skip",i[1].dataType,i[1].dims,_),rf("gamma",i[2].dataType,i[2].dims,_)];p&&r.push(rf("beta",i[3].dataType,i[3].dims,_)),h&&r.push(rf("bias",i[4].dataType,i[4].dims,_)),r.push(rg("output",i[0].dataType,l,_)),m&&r.push(rg("mean_output",1,c)),f&&r.push(rg("inv_std_output",1,c)),g&&r.push(rg("input_skip_bias_sum",i[0].dataType,l,_));let s=rn(i[0].dataType),a=rn(1,_);return`

      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...r)}
      var<workgroup> sum_shared : array<${a}, 64>;
      var<workgroup> sum_squared_shared : array<${a}, 64>;

      ${t.mainStart([64,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${h?"bias[offset1d + i]":s+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${g?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${rc(s,_,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${rp("sum",_)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${rp("square_sum",_)} / f32(uniforms.hidden_size) ${o?"":"- mean * mean"} + uniforms.epsilon);
        ${m?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${o?"":`- ${s}(mean)`}) *
            ${s}(inv_std_dev) * gamma[offset1d + i]
            ${p?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(u/d)},programUniforms:y})}),{outputs:w})}}),n3=eA(()=>{a9(),nt(),no(),nl(),aq=(t,r)=>{let i=[];if(t.length>r)if(7===t[r].dataType)t[r].getBigInt64Array().forEach(t=>i.push(Number(t)));else if(6===t[r].dataType)t[r].getInt32Array().forEach(t=>i.push(Number(t)));else throw Error(`Input ${r} must be an array of int32 or int64`);return i},aW=(t,r,i,s,a)=>{let n=t;return t<0&&(n+=i[s[r]]),a[r]<0?Math.max(0,Math.min(n,i[s[r]]-1)):Math.max(0,Math.min(n,i[s[r]]))},aH=(t,r)=>{var i=t.inputs,s=r;if(!i||i.length<1)throw Error("too few inputs");if(0!==s.axes.length){if(s.axes.length!==s.starts.length||s.axes.length!==s.ends.length)throw Error("axes, starts and ends must have the same length")}else if(s.starts.length!==s.ends.length)throw Error("starts and ends must have the same length");i.slice(1).forEach((t,r)=>{if(6!==i[r+1].dataType&&7!==i[r+1].dataType)throw Error(`Input ${r} must be an array of int32 or int64`)});let a=((t,r)=>{if(!(t.length>1))return r;{let r=aq(t,1),i=aq(t,2),s=aq(t,3);return 0===s.length&&(s=[...Array(t[0].dims.length).keys()]),ri({starts:r,ends:i,axes:s})}})(t.inputs,r);t.compute(((t,r)=>{let i=t[0].dims,s=tj.size(i),a=r.axes.length>0?tj.normalizeAxes(r.axes,i.length):[...Array(i.length).keys()],n=aq(t,4);n.forEach(t=>0!==t||(()=>{throw Error("step cannot be 0")})),0===n.length&&(n=Array(a.length).fill(1));let o=r.starts.map((t,r)=>aW(t,r,i,a,n)),l=r.ends.map((t,r)=>aW(t,r,i,a,n));if(a.length!==o.length||a.length!==l.length)throw Error("start, ends and axes should have the same number of elements");if(a.length!==i.length)for(let t=0;t<i.length;++t)a.includes(t)||(o.splice(t,0,0),l.splice(t,0,i[t]),n.splice(t,0,1));let u=n.map(t=>Math.sign(t));n.forEach((t,r,i)=>{if(t<0){let s=(l[r]-o[r])/t,a=o[r],u=a+s*n[r];o[r]=u,l[r]=a,i[r]=-t}});let d=i.slice(0);a.forEach((t,r)=>{d[t]=Math.ceil((l[t]-o[t])/n[t])});let c={dims:d,dataType:t[0].dataType},p=rg("output",t[0].dataType,d.length),h=rf("input",t[0].dataType,t[0].dims.length),m=tj.size(d),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:n.length}],g=[{type:12,data:m},{type:12,data:o},{type:6,data:u},{type:12,data:n},...rl(t[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${u.length}_${o.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:t=>{let r,s,a;return`
      ${t.registerUniforms(f).declareVariables(h,p)}
        ${r=h,s=p,a=i,`fn calculateInputIndices(output_indices: ${s.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${a.length}; i >= 0; i--) {
            let input_shape_i = ${rh("uniforms.input_shape","i",a.length)};
            let steps_i = ${rh("uniforms.steps","i",a.length)};
            let signs_i = ${rh("uniforms.signs","i",a.length)};
            let starts_i = ${rh("uniforms.starts","i",a.length)};
            var output_index = ${s.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`}
        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`},getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:g})}})(t.inputs,a),{inputs:[0]})},aK=t=>{let r=t.starts,i=t.ends,s=t.axes;return ri({starts:r,ends:i,axes:s})}}),n4=eA(()=>{a9(),nt(),no(),nu(),nl(),aQ=(t,r)=>{var i,s;let a,n,o,l,u,d,c,p,h,m,f,g,_,y,b,w,x,v,M;(t=>{if(!t||1!==t.length)throw Error("Softmax op requires 1 input.")})(t.inputs),i=t,s=r,n=(a=i.inputs[0]).dims,o=tj.size(n),l=n.length,d=(u=tj.normalizeAxis(s.axis,l))<n.length-1,p=[],d?((p=Array.from({length:l},(t,r)=>r))[u]=l-1,p[l-1]=u,c=i.compute(rv(a,p),{inputs:[a],outputs:[-1]})[0]):c=a,f=o/(m=(h=c.dims)[l-1]),g=ru(m),_=m/g,y=64,1===f&&(y=256),b=rf("x",c.dataType,c.dims,g),w=rg("result",c.dataType,c.dims,g),x=b.type.value,v="f32"===rn(c.dataType)?`var threadMax = ${x}(-3.402823e+38f);`:`var threadMax = ${x}(-65504.0h);`,M=i.compute({name:"Softmax",shaderCache:{hint:`${g};${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:h,dataType:c.dataType}],dispatchGroup:{x:f},programUniforms:[{type:6,data:_}]}),getShaderSource:t=>{let r;return`
      var<workgroup> rowMaxShared : ${x};
      var<workgroup> rowSumShared : ${x};
      var<workgroup> threadShared : array<${x}, ${y}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${x} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${x}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${t.registerUniform("packedCols","i32").declareVariables(b,w)}
      ${t.mainStart(y)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${y};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${x}(${r="threadShared[0]",4===g?`max(max(${r}.x, ${r}.y), max(${r}.z, ${r}.w))`:2===g?`max(${r}.x, ${r}.y)`:3===g?`max(max(${r}.x, ${r}.y), ${r}.z)`:r});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${x}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${x}(${rp("threadShared[0]",g)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`}},{inputs:[c],outputs:[d?-1:0]})[0],d&&i.compute(rv(M,p),{inputs:[M]})},aX=t=>ri({axis:t.axis})}),n8=eA(()=>{a9(),nt(),nl(),aJ=t=>Array.from(t.getBigInt64Array(),Number),aY=t=>{var r,i;let s,a,n,o,l,u,d;(t=>{if(!t||2!==t.length)throw Error("Tile requires 2 inputs.");if(1!==t[0].dataType&&10!==t[0].dataType&&6!==t[0].dataType&&12!==t[0].dataType)throw Error("Tile only support float, float16, int32, and uint32 data types");if(7!==t[1].dataType)throw Error("Tile `repeats` input should be of int64 data type");if(1!==t[1].dims.length)throw Error("Tile `repeats` input should be 1-D");if(aJ(t[1]).length!==t[0].dims.length)throw Error("Tile `repeats` input should have same number of elements as rank of input data tensor")})(t.inputs),t.compute((s=(r=t.inputs)[0].dims,n=((t,r)=>{let i=[];for(let s=0;s<t.length;++s)i.push(t[s]*r[s]);return i})(s,a=i??aJ(r[1])),o=tj.size(n),l=r[0].dataType,u=rf("input",l,s.length),d=rg("output",l,n.length),{name:"Tile",shaderCache:{hint:`${a}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...rl(r[0].dims,n)]}),getShaderSource:t=>`
      const inputShape = ${u.indices(...s)};
      ${t.registerUniform("output_size","u32").declareVariables(u,d)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${d.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`}),{inputs:[0]})}}),n6=eA(()=>{a9(),nt(),nl(),aZ=t=>{t.compute((t=>{let r=t[1].dims,i=t[2].dims,s=t[0].dims,a=t[1].dataType,n=!(tj.areEqual(r,i)&&tj.areEqual(i,s)),o=r,l=tj.size(r);if(n){let t=tN.calcShape(tN.calcShape(r,i,!1),s,!1);if(!t)throw Error("Can't perform where op on the given tensors");o=t,l=tj.size(o)}let u=Math.ceil(l/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:r=>((t,r,i,s,a)=>{let n=rg("output_data",a,i.length,4),o=rf("a_data",r[1].dataType,r[1].dims.length,4),l=rf("b_data",r[2].dataType,r[2].dims.length,4),u=rf("c_data",r[0].dataType,r[0].dims.length,4),d,c=(t,r,i)=>`select(${r}, ${t}, ${i})`;if(s){let t=(t,r,i="")=>{let s=`a_data[index_a${r}][component_a${r}]`,a=`b_data[index_b${r}][component_b${r}]`,d=`bool(c_data[index_c${r}] & (0xffu << (component_c${r} * 8)))`;return`
            let output_indices${r} = ${n.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offset_a${r} = ${o.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let offset_b${r} = ${l.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let offset_c${r} = ${u.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let index_a${r} = offset_a${r} / 4u;
            let index_b${r} = offset_b${r} / 4u;
            let index_c${r} = offset_c${r} / 4u;
            let component_a${r} = offset_a${r} % 4u;
            let component_b${r} = offset_b${r} % 4u;
            let component_c${r} = offset_c${r} % 4u;
            ${t}[${r}] = ${i}(${c(s,a,d)});
          `};d=9===a?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("output_data[global_idx]",0)}
            ${t("output_data[global_idx]",1)}
            ${t("output_data[global_idx]",2)}
            ${t("output_data[global_idx]",3)}
          `}else d=n.setByOffset("global_idx",c(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`
        ${t.registerUniform("vec_size","u32").declareVariables(u,o,l,n)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`})(r,t,o,n,a),getRunData:()=>({outputs:[{dims:o,dataType:a}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:u},...rl(s,r,i,o)]})}})(t.inputs))}}),n5=eA(()=>{np(),nh(),nm(),nf(),n_(),ny(),nb(),nS(),nE(),nF(),nA(),nI(),nz(),nL(),nO(),nB(),nD(),nN(),nj(),nR(),nq(),nW(),nH(),nK(),nQ(),nV(),nX(),nJ(),nY(),nZ(),n0(),nc(),n1(),nU(),n2(),n3(),n4(),nG(),n8(),nu(),ng(),n6(),a0=new Map([["Abs",[ir]],["Acos",[ii]],["Acosh",[is]],["Add",[iH]],["ArgMax",[r4,r8]],["ArgMin",[r3,r8]],["Asin",[ia]],["Asinh",[io]],["Atan",[il]],["Atanh",[iu]],["Attention",[r9]],["AveragePool",[aT,aM]],["BatchNormalization",[r7]],["BiasAdd",[ie]],["BiasSplitGelu",[iq]],["Cast",[ic,id]],["Ceil",[ih]],["Clip",[ip]],["Concat",[i3,i4]],["Conv",[sw,sy]],["ConvTranspose",[sC,sk]],["Cos",[im]],["Cosh",[ig]],["CumSum",[sS,sP]],["DepthToSpace",[sE,sF]],["DequantizeLinear",[aI,az]],["Div",[iK]],["Einsum",[sD,sN]],["Elu",[iy,i_]],["Equal",[iQ]],["Erf",[iw]],["Exp",[ix]],["Expand",[sR]],["FastGelu",[sV]],["Floor",[iv]],["FusedConv",[sw,sy]],["Gather",[sU,sG]],["GatherElements",[sX,sQ]],["GatherBlockQuantized",[sH,sK]],["GatherND",[sq,sW]],["Gelu",[iM]],["Gemm",[sY,sJ]],["GlobalAveragePool",[aC,a$]],["GlobalMaxPool",[aA,aF]],["Greater",[iZ]],["GreaterOrEqual",[i1]],["GridSample",[s4,s8]],["GroupQueryAttention",[al]],["HardSigmoid",[iF,iE]],["InstanceNormalization",[ad]],["LayerNormalization",[ac]],["LeakyRelu",[iT,i_]],["Less",[i0]],["LessOrEqual",[i2]],["Log",[iV]],["MatMul",[ap]],["MatMulNBits",[ah,am]],["MaxPool",[aP,aE]],["Mul",[iX]],["MultiHeadAttention",[ae,s5]],["Neg",[i$]],["Not",[ik]],["Pad",[af]],["Pow",[iJ]],["QuickGelu",[iU,i_]],["Range",[aL]],["Reciprocal",[iC]],["ReduceMin",[rJ]],["ReduceMean",[rW]],["ReduceMax",[rX]],["ReduceSum",[rZ]],["ReduceProd",[rY]],["ReduceL1",[rH]],["ReduceL2",[rK]],["ReduceLogSum",[r1]],["ReduceLogSumExp",[rQ]],["ReduceSumSquare",[r0]],["Relu",[iS]],["Resize",[aV,aG]],["RotaryEmbedding",[aa]],["ScatterND",[aN,aD]],["Sigmoid",[iP]],["Sin",[iA]],["Sinh",[iI]],["Slice",[aH,aK]],["SkipLayerNormalization",[aU]],["Split",[ar,ai]],["Sqrt",[iz]],["Softmax",[aQ,aX]],["Sub",[iY]],["Tan",[iL]],["Tanh",[iB]],["ThresholdedRelu",[iR,i_]],["Tile",[aY]],["Transpose",[rM,rT]],["Where",[aZ]]])}),n9=eA(()=>{e0(),ne(),nl(),a1=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,i,s,a){eM(t.programInfo.name);let n=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let l=[];for(let t of r)l.push({binding:l.length,resource:{buffer:t.buffer}});for(let t of i)l.push({binding:l.length,resource:{buffer:t.buffer}});a&&l.push({binding:l.length,resource:a});let u=n.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:l,label:t.programInfo.name});if("capturing"===this.backend.sessionStatus){let r={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:u,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(r)}o.setPipeline(t.computePipeline),o.setBindGroup(0,u),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),eT(t.programInfo.name)}dispose(){}build(t,r){eM(t.name);let i=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(t=>{i.features.has(t.feature)&&s.push(`enable ${t.extension};`)});let a=rw(r,this.backend.device.limits),n=t.getShaderSource(a),o=`${s.join(`
`)}
${a.additionalImplementations}
${n}`,l=i.createShaderModule({code:o,label:t.name});tB("verbose",()=>`[WebGPU] ${t.name} shader code: ${o}`);let u=i.createComputePipeline({compute:{module:l,entryPoint:"main"},layout:"auto",label:t.name});return eT(t.name),{programInfo:t,computePipeline:u,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(t){let r="number"==typeof t?t:t.x,i="number"==typeof t?1:t.y||1,s="number"==typeof t?1:t.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=a&&i<=a&&s<=a)return[r,i,s];let n=r*i*s,o=Math.ceil(Math.sqrt(n));if(!(o>a))return[o,o,1];if((o=Math.ceil(Math.cbrt(n)))>a)throw Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}}}),n7={};eI(n7,{WebGpuBackend:()=>ot});var oe,ot,or=eA(()=>{e0(),a9(),ne(),nr(),nn(),n5(),n9(),oe=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},ot=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let i=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:i},a=t=>r.features.has(t)&&i.push(t)&&!0;a("chromium-experimental-timestamp-query-inside-passes")||a("timestamp-query"),a("shader-f16"),a("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new oe(r.info||await r.requestAdapterInfo()),this.gpuDataManager=rt(this),this.programManager=new a1(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,tO(t.logLevel,!!t.debug),this.device.onuncapturederror=t=>{t.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${t.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){"u">typeof this.querySet&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};"at-passes"===this.queryType&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){let t;this.commandEncoder&&(eM(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),t=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),i=this.pendingQueries.get(t);for(let t=0;t<r.length/2;t++){let s=i[t],a=s.kernelId,n=this.kernels.get(a),o=n.kernelType,l=n.kernelName,u=s.programName,d=s.inputTensorViews,c=s.outputTensorViews,p=r[2*t],h=r[2*t+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let m=Number(p-this.queryTimeBase),f=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(m)||!Number.isSafeInteger(f))throw RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(t=>({dims:t.dims,dataType:tk(t.dataType)})),outputsMetadata:c.map(t=>({dims:t.dims,dataType:tk(t.dataType)})),kernelId:a,kernelType:o,kernelName:l,programName:u,startTime:m,endTime:f});else{let t="";d.forEach((r,i)=>{t+=`input[${i}]: [${r.dims}] | ${tk(r.dataType)}, `});let r="";c.forEach((t,i)=>{r+=`output[${i}]: [${t.dims}] | ${tk(t.dataType)}, `}),console.log(`[profiling] kernel "${a}|${o}|${l}|${u}" ${t}${r}execution time: ${f-m} ns`)}ex("GPU",`${u}::${p}::${h}`)}t.unmap(),this.pendingQueries.delete(t)}),eT())}run(t,r,i,s,a,n){var o,l,u;let d,c;eM(t.name);let p=[];for(let t=0;t<r.length;++t){let i=r[t].data;if(0===i)continue;let s=this.gpuDataManager.get(i);if(!s)throw Error(`no GPU data for input: ${i}`);p.push(s)}let{outputs:h,dispatchGroup:m,programUniforms:f}=t.getRunData(r),g=0===i.length?h.map((t,r)=>r):i;if(g.length!==h.length)throw Error(`Output size ${g.length} must be equal to ${h.length}.`);let _=[],y=[];for(let t=0;t<h.length;++t){if(!Number.isInteger(g[t])||g[t]<-3||g[t]>=n)throw Error(`Invalid output index: ${g[t]}`);if(-3===g[t])continue;let r=-1===g[t],i=-2===g[t],o=r||i?a(h[t].dataType,h[t].dims):s(g[t],h[t].dataType,h[t].dims);if(_.push(o),0===o.data)continue;let l=this.gpuDataManager.get(o.data);if(!l)throw Error(`no GPU data for output: ${o.data}`);if(r&&this.temporaryData.push(l),i){let t=this.kernelPersistentData.get(this.currentKernelId);t||(t=[],this.kernelPersistentData.set(this.currentKernelId,t)),t.push(l)}y.push(l)}if(p.length!==r.length||y.length!==_.length){if(0===y.length)return eT(t.name),_;throw Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(f){let t=0,r=[];f.forEach(i=>{let s="number"==typeof i.data?[i.data]:i.data;if(0===s.length)return;let a=10===i.type?2:4,n,o;10===i.type?(o=s.length>4?16:s.length>2?8:s.length*a,n=s.length>4?16:a*s.length):(o=s.length<=2?s.length*a:16,n=16),t=Math.ceil(t/o)*o,r.push(t);let l=10===i.type?8:4;t+=s.length>4?Math.ceil(s.length/l)*n:s.length*a});let i=new ArrayBuffer(t=16*Math.ceil(t/16));f.forEach((t,s)=>{let a=r[s],n="number"==typeof t.data?[t.data]:t.data;if(6===t.type)new Int32Array(i,a,n.length).set(n);else if(12===t.type)new Uint32Array(i,a,n.length).set(n);else if(10===t.type)new Uint16Array(i,a,n.length).set(n);else if(1===t.type)new Float32Array(i,a,n.length).set(n);else throw Error(`Unsupported uniform type: ${tk(t.type)}`)});let s=this.gpuDataManager.create(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,i,0,t),this.gpuDataManager.release(s.id),d={offset:0,size:t,buffer:s.buffer}}let b=this.programManager.normalizeDispatchGroupSize(m),w=(o=t,l=r,u=1===b[1]&&1===b[2],c=o.name,o.shaderCache?.hint&&(c+="["+o.shaderCache.hint+"]"),c+=":"+u+`:${((t,r)=>{if(r.length!==t.length)throw Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${t.length}.`);let i=[];for(let s=0;s<t.length;++s){let a=t[s].dataType;switch(r[s]){case"none":i.push("");break;case"type":i.push(`${a}`);break;case"rank":{let r=t[s].dims.length;i.push(`${a};${r}`);break}case"dims":{let r=t[s].dims.join(",");i.push(`${a};${r}`);break}default:throw Error(`unsupported input dependency: ${r[s]}`)}}return i.join("|")})(l,o.shaderCache?.inputDependencies??Array(l.length).fill("dims"))}`),x=this.programManager.getArtifact(w);if(x||(x=this.programManager.build(t,b),this.programManager.setArtifact(w,x),tB("info",()=>`[artifact] key: ${w}, programName: ${t.name}`)),f&&x.uniformVariablesInfo){if(f.length!==x.uniformVariablesInfo.length)throw Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${f.length} in program "${x.programInfo.name}".`);for(let t=0;t<f.length;t++){let r=f[t],i=r.type,s="number"==typeof r.data?1:r.data.length,[a,n]=x.uniformVariablesInfo[t];if(i!==a||s!==n)throw Error(`Uniform variable ${t} mismatch: expect type ${a} with size ${n}, got type ${i} with size ${s} in program "${x.programInfo.name}".`)}}if(tB("info",()=>`[ProgramManager] run "${t.name}" (key=${w}) with ${b[0]}x${b[1]}x${b[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let t={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:_};this.pendingKernels.push(t),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(t)}return this.programManager.run(x,p,y,b,d),eT(t.name),_}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,i,s){let a=a0.get(t);if(!a)throw Error(`kernel not implemented: ${t}`);let n={kernelType:t,kernelName:s,kernelEntry:a[0],attributes:[a[1],i]};this.kernels.set(r,n)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,i){let s=this.kernels.get(t);if(!s)throw Error(`kernel not created: ${t}`);let a=s.kernelType,n=s.kernelName,o=s.kernelEntry,l=s.attributes;if(null!==this.currentKernelId)throw Error(`kernel "[${a}] ${n}" is not allowed to be called recursively`);this.currentKernelId=t,l[0]&&(l[1]=l[0](l[1]),l[0]=void 0),tB("info",()=>`[WebGPU] Start to run kernel "[${a}] ${n}"...`);let u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),o(r,l[1]),0}catch(t){return i.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${n}" failed. ${t}`)),1}finally{for(let t of(u&&i.push(this.device.popErrorScope().then(t=>t?`GPU validation error for kernel "[${a}] ${n}": ${t.message}`:null)),this.temporaryData))this.gpuDataManager.release(t.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,i,s){let a=this.sessionExternalDataMapping.get(t);a||(a=new Map,this.sessionExternalDataMapping.set(t,a));let n=a.get(r),o=this.gpuDataManager.registerExternalBuffer(i,s,n);return a.set(r,[o,i]),o}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,i){return async()=>{let s=await t7(this,t,r);return tq(s.buffer,i)}}writeTimestamp(t){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){tB("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){tB("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){tB("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),i=t.length;this.pendingKernels=[];for(let s=0;s<i;s++){let i=this.getComputePassEncoder(),a=t[s];this.writeTimestamp(2*this.pendingDispatchNumber),i.setPipeline(a.computePipeline),i.setBindGroup(0,a.bindGroup),i.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),oi={};eI(oi,{init:()=>on});var os,oa,on,oo,ol,ou,od,oc,op,oh,om,of,og,o_,oy,ob,ow,ox,ov,oM,oT,ok,o$,oC,oS,oP,oE,oF,oA,oI,oz,oL,oO,oB,oD,oN=eA(()=>{a9(),ne(),nt(),ns(),os=class t{constructor(t,r,i,s){this.module=t,this.dataType=r,this.data=i,this.dims=s}getFloat32Array(){if(1!==this.dataType)throw Error("Invalid data type");let t=tj.size(this.dims);return 0===t?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(7!==this.dataType)throw Error("Invalid data type");let t=tj.size(this.dims);return 0===t?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(6!==this.dataType)throw Error("Invalid data type");let t=tj.size(this.dims);return 0===t?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw Error("Invalid data type");let t=tj.size(this.dims);return 0===t?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(r){if(tj.size(r)!==tj.size(this.dims))throw Error("Invalid new shape");return new t(this.module,this.dataType,this.data,r)}},oa=class{constructor(t,r,i){this.module=t,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=t.PTR_SIZE,a=i/t.PTR_SIZE,n=4===s?"i32":"i64";this.opKernelContext=Number(t.getValue(s*a++,n));let o=Number(t.getValue(s*a++,n));this.outputCount=Number(t.getValue(s*a++,n)),this.customDataOffset=Number(t.getValue(s*a++,"*")),this.customDataSize=Number(t.getValue(s*a++,n));let l=[];for(let r=0;r<o;r++){let r=Number(t.getValue(s*a++,n)),i=Number(t.getValue(s*a++,"*")),o=Number(t.getValue(s*a++,n)),u=[];for(let r=0;r<o;r++)u.push(Number(t.getValue(s*a++,n)));l.push(new os(t,r,i,u))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let i=r?.inputs?.map(t=>"number"==typeof t?this.inputs[t]:t)??this.inputs,s=r?.outputs??[],a=(t,r,i)=>new os(this.module,r,this.output(t,i),i),n=(t,r)=>{let i=t$(t,r);if(!i)throw Error(`Unsupported data type: ${t}`);let s=i>0?this.backend.gpuDataManager.create(i).id:0;return new os(this.module,t,s,r)};return this.backend.run(t,i,s,a,n,this.outputCount)}output(t,r){let i=this.module.stackSave();try{let i=this.module.PTR_SIZE,s=4===i?"i32":"i64",a=this.module.stackAlloc((1+r.length)*i);this.module.setValue(a,r.length,s);for(let t=0;t<r.length;t++)this.module.setValue(a+i*(t+1),r[t],s);return this.module._JsepOutput(this.opKernelContext,t,a)}catch(i){throw Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(i)}}},on=async(t,r,i,s)=>{let a=r.jsepInit;if(!a)throw Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===t){let t=new(or(),ez(n7)).WebGpuBackend;await t.initialize(i,s),a("webgpu",[t,r=>t.alloc(Number(r)),r=>t.free(r),(i,s,a,n=!1)=>{if(n)tB("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(i)}, dst=${Number(s)}, size=${Number(a)}`),t.memcpy(Number(i),Number(s));else{tB("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(i)}, gpuDataId=${Number(s)}, size=${Number(a)}`);let n=r.HEAPU8.subarray(Number(i>>>0),Number(i>>>0)+Number(a));t.upload(Number(s),n)}},async(i,s,a)=>{tB("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await t.download(Number(i),()=>r.HEAPU8.subarray(Number(s)>>>0,Number(s+a)>>>0))},(i,s,a)=>t.createKernel(i,Number(s),a,r.UTF8ToString(r._JsepGetNodeName(Number(s)))),r=>t.releaseKernel(r),(i,s,a,n)=>{tB("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let o=new oa(r,t,Number(s));return t.computeKernel(Number(i),o,n)},()=>t.captureBegin(),()=>t.captureEnd(),()=>t.replay()])}else{let t=new t3(i);a("webnn",[t,()=>t.reserveTensorId(),r=>t.releaseTensorId(r),async(r,i,s,a,n)=>t.ensureTensor(r,i,s,a,n),(r,i)=>{t.uploadTensor(r,i)},async(r,i)=>t.downloadTensor(r,i)])}}}),oj=eA(()=>{a6(),a5(),a9(),a4(),a8(),a7(),oo=async t=>{var r,i;r=t.wasm.numThreads,i=tS(t.logLevel),0!==tg()._OrtInit(r,i)&&tb("Can't initialize onnxruntime.")},ol=async(t,r)=>{tg().asyncInit?.();{let i=(oN(),ez(oi)).init;if("webgpu"===r){if(typeof navigator>"u"||!navigator.gpu)throw Error("WebGPU is not supported in current environment");let r=t.webgpu.adapter;if(r){if("object"!=typeof r.limits||"object"!=typeof r.features||"function"!=typeof r.requestDevice)throw Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=t.webgpu.powerPreference;if(void 0!==i&&"low-power"!==i&&"high-performance"!==i)throw Error(`Invalid powerPreference setting: "${i}"`);let s=t.webgpu.forceFallbackAdapter;if(void 0!==s&&"boolean"!=typeof s)throw Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(!(r=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:s})))throw Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await i("webgpu",tg(),t,r)}if("webnn"===r){if(typeof navigator>"u"||!navigator.ml)throw Error("WebNN is not supported in current environment");await i("webnn",tg(),t)}}},ou=new Map,od=(t,r)=>{let i=tg(),s=i.stackSave(),a=0;try{let s=i.PTR_SIZE,n=i.stackAlloc(2*s);0!==i._OrtGetInputOutputMetadata(t,r,n,n+s)&&tb("Can't get session input/output metadata.");let o=Number(i.getValue(n,"*"));a=Number(i.getValue(n+s,"*"));let l=i.HEAP32[a/4];if(0===l)return[o,0];let u=i.HEAPU32[a/4+1],d=[];for(let t=0;t<u;t++){let r=Number(i.getValue(a+8+t*s,"*"));d.push(0!==r?i.UTF8ToString(r):Number(i.getValue(a+8+(t+u)*s,"*")))}return[o,l,d]}finally{i.stackRestore(s),0!==a&&i._OrtFree(a)}},oc=t=>{let r=tg(),i=r._malloc(t.byteLength);if(0===i)throw Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return r.HEAPU8.set(t,i),[i,t.byteLength]},op=async(t,r)=>{let i,s,a=tg();Array.isArray(t)?[i,s]=t:t.buffer===a.HEAPU8.buffer?[i,s]=[t.byteOffset,t.byteLength]:[i,s]=oc(t);let n=0,o=0,l=0,u=[],d=[],c=[];try{if([o,u]=await tM(r),r?.externalData&&a.mountExternalData){let t=[];for(let i of r.externalData){let r="string"==typeof i?i:i.path;t.push(tA("string"==typeof i?i:i.data).then(t=>{a.mountExternalData(r,t)}))}await Promise.all(t)}for(let t of r?.executionProviders??[])if(("string"==typeof t?t:t.name)==="webnn"){if(a.shouldTransferToMLTensor=!1,"string"!=typeof t){let r=t?.context,i=t?.gpuDevice,s=t?.deviceType,n=t?.powerPreference;r?a.currentContext=r:i?a.currentContext=await a.webnnCreateMLContext(i):a.currentContext=await a.webnnCreateMLContext({deviceType:s,powerPreference:n})}else a.currentContext=await a.webnnCreateMLContext();break}n=await a._OrtCreateSession(i,s,o),a.webgpuOnCreateSession?.(n),0===n&&tb("Can't create a session."),a.jsepOnCreateSession?.(),a.currentContext&&(a.webnnRegisterMLContext(n,a.currentContext),a.currentContext=void 0,a.shouldTransferToMLTensor=!0);let[t,p]=(t=>{let r=tg(),i=r.stackSave();try{let i=r.PTR_SIZE,s=r.stackAlloc(2*i);0!==r._OrtGetInputOutputCount(t,s,s+i)&&tb("Can't get session input/output count.");let a=4===i?"i32":"i64";return[Number(r.getValue(s,a)),Number(r.getValue(s+i,a))]}finally{r.stackRestore(i)}})(n),h=!!r?.enableGraphCapture,m=[],f=[],g=[],_=[],y=[];for(let r=0;r<t;r++){let[t,i,s]=od(n,r);0===t&&tb("Can't get an input name."),d.push(t);let o=a.UTF8ToString(t);m.push(o),g.push(0===i?{name:o,isTensor:!1}:{name:o,isTensor:!0,type:tk(i),shape:s})}for(let i=0;i<p;i++){let[s,o,l]=od(n,i+t);0===s&&tb("Can't get an output name."),c.push(s);let u=a.UTF8ToString(s);f.push(u),_.push(0===o?{name:u,isTensor:!1}:{name:u,isTensor:!0,type:tk(o),shape:l});{if(h&&r?.preferredOutputLocation===void 0){y.push("gpu-buffer");continue}let t="string"==typeof r?.preferredOutputLocation?r.preferredOutputLocation:r?.preferredOutputLocation?.[u]??"cpu";if("cpu"!==t&&"cpu-pinned"!==t&&"gpu-buffer"!==t&&"ml-tensor"!==t)throw Error(`Not supported preferred output location: ${t}.`);if(h&&"gpu-buffer"!==t)throw Error(`Not supported preferred output location: ${t}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);y.push(t)}}let b=null;return y.some(t=>"gpu-buffer"===t||"ml-tensor"===t)&&(l=a._OrtCreateBinding(n),0===l&&tb("Can't create IO binding."),b={handle:l,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(t=>tF(t))}),ou.set(n,[n,d,c,b,h,!1]),[n,m,f,g,_]}catch(t){throw d.forEach(t=>a._OrtFree(t)),c.forEach(t=>a._OrtFree(t)),0!==l&&0!==a._OrtReleaseBinding(l)&&tb("Can't release IO binding."),0!==n&&0!==a._OrtReleaseSession(n)&&tb("Can't release session."),t}finally{a._free(i),0!==o&&0!==a._OrtReleaseSessionOptions(o)&&tb("Can't release session options."),u.forEach(t=>a._free(t)),a.unmountExternalData?.()}},oh=t=>{let r=tg(),i=ou.get(t);if(!i)throw Error(`cannot release session. invalid session id: ${t}`);let[s,a,n,o,l]=i;o&&(l&&0!==r._OrtClearBoundOutputs(o.handle)&&tb("Can't clear bound outputs."),0!==r._OrtReleaseBinding(o.handle)&&tb("Can't release IO binding.")),r.jsepOnReleaseSession?.(t),r.webnnOnReleaseSession?.(t),r.webgpuOnReleaseSession?.(t),a.forEach(t=>r._OrtFree(t)),n.forEach(t=>r._OrtFree(t)),0!==r._OrtReleaseSession(s)&&tb("Can't release session."),ou.delete(t)},om=async(t,r,i,s,a,n,o=!1)=>{if(!t)return void r.push(0);let l=tg(),u=l.PTR_SIZE,d=t[0],c=t[1],p=t[3],h=p,m,f;if("string"===d&&("gpu-buffer"===p||"ml-tensor"===p))throw Error("String tensor is not supported on GPU.");if(o&&"gpu-buffer"!==p)throw Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if("gpu-buffer"===p){let r=t[2].gpuBuffer;f=t$(tT(d),c);{let t=l.jsepRegisterBuffer;if(!t)throw Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');m=t(s,n,r,f)}}else if("ml-tensor"===p){let r=t[2].mlTensor;f=t$(tT(d),c);let i=l.webnnRegisterMLTensor;if(!i)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');m=i(s,r,tT(d),c)}else{let r=t[2];if(Array.isArray(r)){f=u*r.length,m=l._malloc(f),i.push(m);for(let t=0;t<r.length;t++){if("string"!=typeof r[t])throw TypeError(`tensor data at index ${t} is not a string`);l.setValue(m+t*u,t_(r[t],i),"*")}}else{let t=l.webnnIsGraphInput;if("string"!==d&&t)if(t(s,l.UTF8ToString(a))){let t=tT(d);f=t$(t,c),h="ml-tensor";let i=l.webnnCreateTemporaryTensor,a=l.webnnUploadTensor;if(!i||!a)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');let n=await i(s,t,c);a(n,new Uint8Array(r.buffer,r.byteOffset,r.byteLength)),m=n}else f=r.byteLength,m=l._malloc(f),i.push(m),l.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,f),m);else f=r.byteLength,m=l._malloc(f),i.push(m),l.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,f),m)}}let g=l.stackSave(),_=l.stackAlloc(4*c.length);try{c.forEach((t,r)=>l.setValue(_+r*u,t,4===u?"i32":"i64"));let t=l._OrtCreateTensor(tT(d),m,f,_,c.length,tF(h));0===t&&tb(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(t)}finally{l.stackRestore(g)}},of=async(t,r,i,s,a,n)=>{let o=tg(),l=o.PTR_SIZE,u=ou.get(t);if(!u)throw Error(`cannot run inference. invalid session id: ${t}`);let d=u[0],c=u[1],p=u[2],h=u[3],m=u[4],f=u[5],g=r.length,_=s.length,y=0,b=[],w=[],x=[],v=[],M=o.stackSave(),T=o.stackAlloc(g*l),k=o.stackAlloc(g*l),$=o.stackAlloc(_*l),C=o.stackAlloc(_*l);try{let u;[y,b]=tw(n);for(let s=0;s<g;s++)await om(i[s],w,v,t,c[r[s]],r[s],m);for(let r=0;r<_;r++)await om(a[r],x,v,t,p[s[r]],g+s[r],m);for(let t=0;t<g;t++)o.setValue(T+t*l,w[t],"*"),o.setValue(k+t*l,c[r[t]],"*");for(let t=0;t<_;t++)o.setValue($+t*l,x[t],"*"),o.setValue(C+t*l,p[s[t]],"*");if(h&&!f){let{handle:i,outputPreferredLocations:n,outputPreferredLocationsEncoded:l}=h;if(c.length!==g)throw Error(`input count from feeds (${g}) is expected to be always equal to model's input count (${c.length}).`);for(let s=0;s<g;s++){let a=r[s];await o._OrtBindInput(i,c[a],w[s])!==0&&tb(`Can't bind input[${s}] for session=${t}.`)}for(let r=0;r<_;r++){let u=s[r];a[r]?.[3]?0!==o._OrtBindOutput(i,p[u],x[r],0)&&tb(`Can't bind pre-allocated output[${r}] for session=${t}.`):0!==o._OrtBindOutput(i,p[u],0,l[u])&&tb(`Can't bind output[${r}] to ${n[r]} for session=${t}.`)}ou.set(t,[d,c,p,h,m,!0])}o.jsepOnRunStart?.(d),o.webnnOnRunStart?.(d),u=h?await o._OrtRunWithBinding(d,h.handle,_,$,y):await o._OrtRun(d,k,T,g,C,_,$,y),0!==u&&tb("failed to call OrtRun().");let M=[];for(let r=0;r<_;r++){let i=Number(o.getValue($+r*l,"*"));if(i===x[r]){M.push(a[r]);continue}let n=o.stackSave(),u=o.stackAlloc(4*l),c=!1,p,m=0;try{0!==o._OrtGetTensorData(i,u,u+l,u+2*l,u+3*l)&&tb(`Can't access output tensor data on index ${r}.`);let a=4===l?"i32":"i64",n=Number(o.getValue(u,a));m=o.getValue(u+l,"*");let d=o.getValue(u+2*l,"*"),f=Number(o.getValue(u+3*l,a)),g=[];for(let t=0;t<f;t++)g.push(Number(o.getValue(d+t*l,a)));0!==o._OrtFree(d)&&tb("Can't free memory for tensor dims.");let _=g.reduce((t,r)=>t*r,1);p=tk(n);let y=h?.outputPreferredLocations[s[r]];if("string"===p){if("gpu-buffer"===y||"ml-tensor"===y)throw Error("String tensor is not supported on GPU.");let t=[];for(let r=0;r<_;r++){let i=o.getValue(m+r*l,"*"),s=o.getValue(m+(r+1)*l,"*"),a=r===_-1?void 0:s-i;t.push(o.UTF8ToString(i,a))}M.push([p,g,t,"cpu"])}else if("gpu-buffer"===y&&_>0){let t=o.jsepGetBuffer;if(!t)throw Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let r=t(m),s=t$(n,_);if(void 0===s||!tP(p))throw Error(`Unsupported data type: ${p}`);c=!0,M.push([p,g,{gpuBuffer:r,download:o.jsepCreateDownloader(r,s,p),dispose:()=>{0!==o._OrtReleaseTensor(i)&&tb("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===y&&_>0){let r=o.webnnEnsureTensor,s=o.webnnIsInt64Supported;if(!r||!s)throw Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===t$(n,_)||!tE(p))throw Error(`Unsupported data type: ${p}`);if("int64"===p&&!s(t))throw Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let a=await r(t,m,n,g,!1);c=!0,M.push([p,g,{mlTensor:a,download:o.webnnCreateMLTensorDownloader(m,p),dispose:()=>{o.webnnReleaseTensorId(m),o._OrtReleaseTensor(i)}},"ml-tensor"])}else{let t=new(tC(p))(_);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(o.HEAPU8.subarray(m,m+t.byteLength)),M.push([p,g,t,"cpu"])}}finally{o.stackRestore(n),"string"===p&&m&&o._free(m),c||o._OrtReleaseTensor(i),o.webnnOnRunEnd?.(d)}}return h&&!m&&(0!==o._OrtClearBoundOutputs(h.handle)&&tb("Can't clear bound outputs."),ou.set(t,[d,c,p,h,m,!1])),M}finally{o.stackRestore(M),w.forEach(t=>o._OrtReleaseTensor(t)),x.forEach(t=>o._OrtReleaseTensor(t)),v.forEach(t=>o._free(t)),0!==y&&o._OrtReleaseRunOptions(y),b.forEach(t=>o._free(t))}},og=t=>{let r=tg(),i=ou.get(t);if(!i)throw Error("invalid session id");let s=i[0],a=r._OrtEndProfiling(s);0===a&&tb("Can't get an profile file name."),r._OrtFree(a)},o_=t=>{let r=[];for(let i of t){let t=i[2];!Array.isArray(t)&&"buffer"in t&&r.push(t.buffer)}return r}}),oR=eA(()=>{e0(),oj(),a4(),a3(),oy=()=>!!es.wasm.proxy&&"u">typeof document,ow=!1,ox=!1,ov=!1,ok=new Map,o$=(t,r)=>{let i=ok.get(t);i?i.push(r):ok.set(t,[r])},oC=()=>{if(ow||!ox||ov||!ob)throw Error("worker not ready")},oS=t=>{switch(t.data.type){case"init-wasm":ow=!1,t.data.err?(ov=!0,oT[1](t.data.err)):(ox=!0,oT[0]()),oM&&(URL.revokeObjectURL(oM),oM=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ok.get(t.data.type);t.data.err?r.shift()[1](t.data.err):r.shift()[0](t.data.out)}}},oP=async()=>{if(!ox){if(ow)throw Error("multiple calls to 'initWasm()' detected.");if(ov)throw Error("previous call to 'initWasm()' failed.");if(ow=!0,oy())return new Promise((r,i)=>{ob?.terminate(),tl().then(([s,a])=>{try{(ob=a).onerror=t=>i(t),ob.onmessage=oS,oT=[r,i];let n={type:"init-wasm",in:es};!n.in.wasm.wasmPaths&&(s||tt)&&(n.in.wasm.wasmPaths={wasm:new t.U(t.r(37811)).href}),ob.postMessage(n),oM=s}catch(t){i(t)}},i)});try{await tf(es.wasm),await oo(es),ox=!0}catch(t){throw ov=!0,t}finally{ow=!1}}},oE=async t=>{if(oy())return oC(),new Promise((r,i)=>{o$("init-ep",[r,i]);let s={type:"init-ep",in:{epName:t,env:es}};ob.postMessage(s)});await ol(es,t)},oF=async t=>oy()?(oC(),new Promise((r,i)=>{o$("copy-from",[r,i]),ob.postMessage({type:"copy-from",in:{buffer:t}},[t.buffer])})):oc(t),oA=async(t,r)=>{if(!oy())return op(t,r);if(r?.preferredOutputLocation)throw Error('session option "preferredOutputLocation" is not supported for proxy.');return oC(),new Promise((i,s)=>{o$("create",[i,s]);let a={type:"create",in:{model:t,options:{...r}}},n=[];t instanceof Uint8Array&&n.push(t.buffer),ob.postMessage(a,n)})},oI=async t=>{if(oy())return oC(),new Promise((r,i)=>{o$("release",[r,i]),ob.postMessage({type:"release",in:t})});oh(t)},oz=async(t,r,i,s,a,n)=>{if(!oy())return of(t,r,i,s,a,n);if(i.some(t=>"cpu"!==t[3]))throw Error("input tensor on GPU is not supported for proxy.");if(a.some(t=>t))throw Error("pre-allocated output tensor is not supported for proxy.");return oC(),new Promise((a,o)=>{o$("run",[a,o]),ob.postMessage({type:"run",in:{sessionId:t,inputIndices:r,inputs:i,outputIndices:s,options:n}},o_(i))})},oL=async t=>{if(oy())return oC(),new Promise((r,i)=>{o$("end-profiling",[r,i]),ob.postMessage({type:"end-profiling",in:t})});og(t)}}),oV=eA(()=>{e0(),oR(),a9(),e1(),a7(),oO=(t,r)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[t.type,t.dims,{mlTensor:t.mlTensor},"ml-tensor"];default:throw Error(`invalid data location: ${t.location} for ${r()}`)}},oB=t=>{switch(t[3]){case"cpu":return new ew(t[0],t[2],t[1]);case"gpu-buffer":{let r=t[0];if(!tP(r))throw Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:i,download:s,dispose:a}=t[2];return ew.fromGpuBuffer(i,{dataType:r,dims:t[1],download:s,dispose:a})}case"ml-tensor":{let r=t[0];if(!tE(r))throw Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:i,download:s,dispose:a}=t[2];return ew.fromMLTensor(i,{dataType:r,dims:t[1],download:s,dispose:a})}default:throw Error(`invalid data location: ${t[3]}`)}},oD=class{async fetchModelAndCopyToWasmMemory(t){return oF(await tA(t))}async loadModel(t,r){let i;eM(),i="string"==typeof t?await this.fetchModelAndCopyToWasmMemory(t):t,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await oA(i,r),eT()}async dispose(){return oI(this.sessionId)}async run(t,r,i){eM();let s=[],a=[];Object.entries(t).forEach(t=>{let r=t[0],i=t[1],n=this.inputNames.indexOf(r);if(-1===n)throw Error(`invalid input '${r}'`);s.push(i),a.push(n)});let n=[],o=[];Object.entries(r).forEach(t=>{let r=t[0],i=t[1],s=this.outputNames.indexOf(r);if(-1===s)throw Error(`invalid output '${r}'`);n.push(i),o.push(s)});let l=s.map((t,r)=>oO(t,()=>`input "${this.inputNames[a[r]]}"`)),u=n.map((t,r)=>t?oO(t,()=>`output "${this.outputNames[o[r]]}"`):null),d=await oz(this.sessionId,a,l,o,u,i),c={};for(let t=0;t<d.length;t++)c[this.outputNames[o[t]]]=n[t]??oB(d[t]);return eT(),c}startProfiling(){}endProfiling(){oL(this.sessionId)}}}),oG={};eI(oG,{OnnxruntimeWebAssemblyBackend:()=>oq,initializeFlags:()=>oU,wasmBackend:()=>oW});var oU,oq,oW,oH=eA(()=>{e0(),oR(),oV(),oU=()=>{("number"!=typeof es.wasm.initTimeout||es.wasm.initTimeout<0)&&(es.wasm.initTimeout=0);let t=es.wasm.simd;if("boolean"!=typeof t&&void 0!==t&&"fixed"!==t&&"relaxed"!==t&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${t}". Reset it to \`false\` and ignore SIMD feature checking.`),es.wasm.simd=!1),"boolean"!=typeof es.wasm.proxy&&(es.wasm.proxy=!1),"boolean"!=typeof es.wasm.trace&&(es.wasm.trace=!1),"number"!=typeof es.wasm.numThreads||!Number.isInteger(es.wasm.numThreads)||es.wasm.numThreads<=0)if("u">typeof self&&!self.crossOriginIsolated)es.wasm.numThreads=1;else{let t=typeof navigator>"u"?eF("node:os").cpus().length:navigator.hardwareConcurrency;es.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},oW=new(oq=class{async init(t){oU(),await oP(),await oE(t)}async createInferenceSessionHandler(t,r){let i=new oD;return await i.loadModel(t,r),i}})});e0(),e0(),e0();{let t=(oH(),ez(oG)).wasmBackend;Y("webgpu",t,5),Y("webnn",t,5),Y("cpu",t,10),Y("wasm",t,10)}Object.defineProperty(es.versions,"web",{value:"1.22.0-dev.20250409-89f8206ba4",enumerable:!0}),t.s(["InferenceSession",()=>e$,"TRACE",()=>ex,"TRACE_FUNC_BEGIN",()=>eM,"TRACE_FUNC_END",()=>eT,"Tensor",()=>ew,"default",()=>eZ,"env",()=>es,"registerBackend",()=>Y],7575);var oK=t.i(7575);let oQ={get url(){return`file://${t.P("node_modules/@huggingface/transformers/dist/transformers.web.js")}`}};var oX={"onnxruntime-common":t=>{t.exports=K},"onnxruntime-web":t=>{t.exports=oK},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(t,r,i)=>{i.r(r),i.d(r,{Environment:()=>en,Interpreter:()=>eo,Template:()=>ec,parse:()=>V,tokenize:()=>d});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),a=class{constructor(t,r){this.value=t,this.type=r}};function n(t){return/\w/.test(t)}function o(t){return/[0-9]/.test(t)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],u=new Map([["n","\n"],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(t,r={}){let i=[],c=function(t,r={}){return t.endsWith("\n")&&(t=t.slice(0,-1)),r.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%-])/gm,"$1")),r.trim_blocks&&(t=t.replace(/([#%-]})\n/g,"$1")),t.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}(t,r),p=0,h=0,m=t=>{let r="";for(;t(c[p]);){if("\\"===c[p]){if(++p>=c.length)throw SyntaxError("Unexpected end of input");let t=c[p++],i=u.get(t);if(void 0===i)throw SyntaxError(`Unexpected escaped character: ${t}`);r+=i;continue}if(r+=c[p++],p>=c.length)throw SyntaxError("Unexpected end of input")}return r};t:for(;p<c.length;){let t=i.at(-1)?.type;if(void 0===t||t===s.CloseStatement||t===s.CloseExpression||t===s.Comment){let t="";for(;p<c.length&&("{"!==c[p]||"%"!==c[p+1]&&"{"!==c[p+1]&&"#"!==c[p+1]);)t+=c[p++];if(t.length>0){i.push(new a(t,s.Text));continue}}if("{"===c[p]&&"#"===c[p+1]){p+=2;let t="";for(;"#"!==c[p]||"}"!==c[p+1];){if(p+2>=c.length)throw SyntaxError("Missing end of comment tag");t+=c[p++]}i.push(new a(t,s.Comment)),p+=2;continue}m(t=>/\s/.test(t));let r=c[p];if("-"===r||"+"===r){let t=i.at(-1)?.type;if(t===s.Text||void 0===t)throw SyntaxError(`Unexpected character: ${r}`);switch(t){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++p;let t=m(o);i.push(new a(`${r}${t}`,t.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(let[t,r]of l)if(("}}"!==t||!(h>0))&&c.slice(p,p+t.length)===t){i.push(new a(t,r)),r===s.OpenExpression?h=0:r===s.OpenCurlyBracket?++h:r===s.CloseCurlyBracket&&--h,p+=t.length;continue t}if("'"===r||'"'===r){++p;let t=m(t=>t!==r);i.push(new a(t,s.StringLiteral)),++p;continue}if(o(r)){let t=m(o);if("."===c[p]&&o(c[p+1])){++p;let r=m(o);t=`${t}.${r}`}i.push(new a(t,s.NumericLiteral));continue}if(n(r)){let t=m(n);i.push(new a(t,s.Identifier));continue}throw SyntaxError(`Unexpected character: ${r}`)}return i}var c=class{type="Statement"},p=class extends c{constructor(t){super(),this.body=t}type="Program"},h=class extends c{constructor(t,r,i){super(),this.test=t,this.body=r,this.alternate=i}type="If"},m=class extends c{constructor(t,r,i,s){super(),this.loopvar=t,this.iterable=r,this.body=i,this.defaultBlock=s}type="For"},f=class extends c{type="Break"},g=class extends c{type="Continue"},_=class extends c{constructor(t,r,i){super(),this.assignee=t,this.value=r,this.body=i}type="Set"},y=class extends c{constructor(t,r,i){super(),this.name=t,this.args=r,this.body=i}type="Macro"},b=class extends c{constructor(t){super(),this.value=t}type="Comment"},w=class extends c{type="Expression"},x=class extends w{constructor(t,r,i){super(),this.object=t,this.property=r,this.computed=i}type="MemberExpression"},v=class extends w{constructor(t,r){super(),this.callee=t,this.args=r}type="CallExpression"},M=class extends w{constructor(t){super(),this.value=t}type="Identifier"},T=class extends w{constructor(t){super(),this.value=t}type="Literal"},k=class extends T{type="IntegerLiteral"},$=class extends T{type="FloatLiteral"},C=class extends T{type="StringLiteral"},S=class extends T{type="ArrayLiteral"},P=class extends T{type="TupleLiteral"},E=class extends T{type="ObjectLiteral"},F=class extends w{constructor(t,r,i){super(),this.operator=t,this.left=r,this.right=i}type="BinaryExpression"},A=class extends w{constructor(t,r){super(),this.operand=t,this.filter=r}type="FilterExpression"},I=class extends c{constructor(t,r){super(),this.filter=t,this.body=r}type="FilterStatement"},z=class extends w{constructor(t,r){super(),this.lhs=t,this.test=r}type="SelectExpression"},L=class extends w{constructor(t,r,i){super(),this.operand=t,this.negate=r,this.test=i}type="TestExpression"},O=class extends w{constructor(t,r){super(),this.operator=t,this.argument=r}type="UnaryExpression"},B=class extends w{constructor(t,r,i){super(),this.start=t,this.stop=r,this.step=i}type="SliceExpression"},D=class extends w{constructor(t,r){super(),this.key=t,this.value=r}type="KeywordArgumentExpression"},N=class extends w{constructor(t){super(),this.argument=t}type="SpreadExpression"},j=class extends c{constructor(t,r,i){super(),this.call=t,this.callerArgs=r,this.body=i}type="CallStatement"},R=class extends w{constructor(t,r,i){super(),this.condition=t,this.trueExpr=r,this.falseExpr=i}type="Ternary"};function V(t){let r=new p([]),i=0;function n(r,s){let a=t[i++];if(!a||a.type!==r)throw Error(`Parser Error: ${s}. ${a.type} !== ${r}.`);return a}function o(t){if(!d(t))throw SyntaxError(`Expected ${t}`);++i}function l(...r){return i+r.length<=t.length&&r.every((r,s)=>r===t[i+s].type)}function u(...r){return t[i]?.type===s.OpenStatement&&t[i+1]?.type===s.Identifier&&r.includes(t[i+1]?.value)}function d(...r){return i+r.length<=t.length&&r.every((r,s)=>"Identifier"===t[i+s].type&&r===t[i+s].value)}function c(t=!1){let r=t?X:w,a=[r()],n=l(s.Comma);for(;n&&(++i,a.push(r()),l(s.Comma)););return n?new P(a):a[0]}function w(){return function t(){let r=T();if(d("if")){++i;let s=T();return d("else")?(++i,new R(s,r,t())):new z(r,s)}return r}()}function T(){let r=V();for(;d("or");){let s=t[i];++i,r=new F(s,r,V())}return r}function V(){let r=G();for(;d("and");){let s=t[i];++i,r=new F(s,r,G())}return r}function G(){let r;for(;d("not");){let s=t[i];++i,r=new O(s,G())}return r??function(){let r=U();for(;;){let n;if(d("not","in"))n=new a("not in",s.Identifier),i+=2;else if(d("in"))n=t[i++];else if(l(s.ComparisonBinaryOperator))n=t[i++];else break;r=new F(n,r,U())}return r}()}function U(){let r=K();for(;l(s.AdditiveBinaryOperator);){let s=t[i];++i,r=new F(s,r,K())}return r}function q(t){let r=new v(t,W());return r=H(r),l(s.OpenParen)&&(r=q(r)),r}function W(){n(s.OpenParen,"Expected opening parenthesis for arguments list");let r=function(){let r=[];for(;!l(s.CloseParen);){let a;if(t[i].type===s.MultiplicativeBinaryOperator&&"*"===t[i].value)++i,a=new N(w());else if(a=w(),l(s.Equals)){if(++i,!(a instanceof M))throw SyntaxError("Expected identifier for keyword argument");a=new D(a,w())}r.push(a),l(s.Comma)&&++i}return r}();return n(s.CloseParen,"Expected closing parenthesis for arguments list"),r}function H(r){for(;l(s.Dot)||l(s.OpenSquareBracket);){let a,o=t[i];++i;let u=o.type===s.OpenSquareBracket;if(u)a=function(){let t=[],r=!1;for(;!l(s.CloseSquareBracket);)l(s.Colon)?(t.push(void 0),++i,r=!0):(t.push(w()),l(s.Colon)&&(++i,r=!0));if(0===t.length)throw SyntaxError("Expected at least one argument for member/slice expression");if(r){if(t.length>3)throw SyntaxError("Expected 0-3 arguments for slice expression");return new B(...t)}return t[0]}(),n(s.CloseSquareBracket,"Expected closing square bracket");else if("Identifier"!==(a=X()).type)throw SyntaxError("Expected identifier following dot operator");r=new x(r,a,u)}return r}function K(){let r=Q();for(;l(s.MultiplicativeBinaryOperator);)r=new F(t[i++],r,Q());return r}function Q(){let t=function(){let t,r=(t=H(X()),l(s.OpenParen)?q(t):t);for(;l(s.Pipe);){++i;let t=X();if(!(t instanceof M))throw SyntaxError("Expected identifier for the filter");l(s.OpenParen)&&(t=q(t)),r=new A(r,t)}return r}();for(;d("is");){++i;let r=d("not");r&&++i;let s=X();if(!(s instanceof M))throw SyntaxError("Expected identifier for the test");t=new L(t,r,s)}return t}function X(){let r=t[i++];switch(r.type){case s.NumericLiteral:{let t=r.value;return t.includes(".")?new $(Number(t)):new k(Number(t))}case s.StringLiteral:{let a=r.value;for(;l(s.StringLiteral);)a+=t[i++].value;return new C(a)}case s.Identifier:return new M(r.value);case s.OpenParen:{let t=c();return n(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),t}case s.OpenSquareBracket:{let t=[];for(;!l(s.CloseSquareBracket);)t.push(w()),l(s.Comma)&&++i;return++i,new S(t)}case s.OpenCurlyBracket:{let t=new Map;for(;!l(s.CloseCurlyBracket);){let r=w();n(s.Colon,"Expected colon between key and value in object literal");let a=w();t.set(r,a),l(s.Comma)&&++i}return++i,new E(t)}default:throw SyntaxError(`Unexpected token: ${r.type}`)}}for(;i<t.length;)r.body.push(function r(){switch(t[i].type){case s.Comment:return new b(t[i++].value);case s.Text:return new C(n(s.Text,"Expected text token").value);case s.OpenStatement:return function(){let a;if(n(s.OpenStatement,"Expected opening statement token"),t[i].type!==s.Identifier)throw SyntaxError(`Unknown statement, got ${t[i].type}`);let p=t[i].value;switch(p){case"set":++i,a=function(){let t=c(),a=null,d=[];if(l(s.Equals))++i,a=c();else{for(n(s.CloseStatement,"Expected %} token");!u("endset");)d.push(r());n(s.OpenStatement,"Expected {% token"),o("endset")}return n(s.CloseStatement,"Expected closing statement token"),new _(t,a,d)}();break;case"if":++i,a=function t(){let a=w();n(s.CloseStatement,"Expected closing statement token");let o=[],l=[];for(;!u("elif","else","endif");)o.push(r());if(u("elif")){++i,++i;let r=t();l.push(r)}else if(u("else"))for(++i,++i,n(s.CloseStatement,"Expected closing statement token");!u("endif");)l.push(r());return new h(a,o,l)}(),n(s.OpenStatement,"Expected {% token"),o("endif"),n(s.CloseStatement,"Expected %} token");break;case"macro":++i,a=function(){let t=X();if("Identifier"!==t.type)throw SyntaxError("Expected identifier following macro statement");let i=W();n(s.CloseStatement,"Expected closing statement token");let a=[];for(;!u("endmacro");)a.push(r());return new y(t,i,a)}(),n(s.OpenStatement,"Expected {% token"),o("endmacro"),n(s.CloseStatement,"Expected %} token");break;case"for":++i,a=function(){let t=c(!0);if(!(t instanceof M||t instanceof P))throw SyntaxError(`Expected identifier/tuple for the loop variable, got ${t.type} instead`);if(!d("in"))throw SyntaxError("Expected `in` keyword following loop variable");++i;let a=w();n(s.CloseStatement,"Expected closing statement token");let o=[];for(;!u("endfor","else");)o.push(r());let l=[];if(u("else"))for(++i,++i,n(s.CloseStatement,"Expected closing statement token");!u("endfor");)l.push(r());return new m(t,a,o,l)}(),n(s.OpenStatement,"Expected {% token"),o("endfor"),n(s.CloseStatement,"Expected %} token");break;case"call":{++i;let t=null;l(s.OpenParen)&&(t=W());let d=X();if("Identifier"!==d.type)throw SyntaxError("Expected identifier following call statement");let c=W();n(s.CloseStatement,"Expected closing statement token");let p=[];for(;!u("endcall");)p.push(r());n(s.OpenStatement,"Expected '{%'"),o("endcall"),n(s.CloseStatement,"Expected closing statement token"),a=new j(new v(d,c),t,p);break}case"break":++i,n(s.CloseStatement,"Expected closing statement token"),a=new f;break;case"continue":++i,n(s.CloseStatement,"Expected closing statement token"),a=new g;break;case"filter":{++i;let t=X();t instanceof M&&l(s.OpenParen)&&(t=q(t)),n(s.CloseStatement,"Expected closing statement token");let d=[];for(;!u("endfilter");)d.push(r());n(s.OpenStatement,"Expected '{%'"),o("endfilter"),n(s.CloseStatement,"Expected '%}'"),a=new I(t,d);break}default:throw SyntaxError(`Unknown statement type: ${p}`)}return a}();case s.OpenExpression:let a;return n(s.OpenExpression,"Expected opening expression token"),a=w(),n(s.CloseExpression,"Expected closing expression token"),a;default:throw SyntaxError(`Unexpected token type: ${t[i].type}`)}}());return r}function G(t,r,i=1){void 0===r&&(r=t,t=0);let s=[];for(let a=t;a<r;a+=i)s.push(a);return s}function U(t,r,i,s=1){let a=Math.sign(s);a>=0?(r=(r??=0)<0?Math.max(t.length+r,0):Math.min(r,t.length),i=(i??=t.length)<0?Math.max(t.length+i,0):Math.min(i,t.length)):(r=(r??=t.length-1)<0?Math.max(t.length+r,-1):Math.min(r,t.length-1),i=(i??=-1)<-1?Math.max(t.length+i,-1):Math.min(i,t.length-1));let n=[];for(let o=r;a*o<a*i;o+=s)n.push(t[o]);return n}function q(t){var r,i;let s,a,n;return r=new Date,i=t,s=new Intl.DateTimeFormat(void 0,{month:"long"}),a=new Intl.DateTimeFormat(void 0,{month:"short"}),n=t=>t<10?"0"+t:t.toString(),i.replace(/%[YmdbBHM%]/g,t=>{switch(t){case"%Y":return r.getFullYear().toString();case"%m":return n(r.getMonth()+1);case"%d":return n(r.getDate());case"%b":return a.format(r);case"%B":return s.format(r);case"%H":return n(r.getHours());case"%M":return n(r.getMinutes());case"%%":return"%";default:return t}})}var W=class extends Error{},H=class extends Error{},K=class{type="RuntimeValue";value;builtins=new Map;constructor(t){this.value=t}__bool__(){return new Y(!!this.value)}toString(){return String(this.value)}},Q=class extends K{type="IntegerValue"},X=class extends K{type="FloatValue";toString(){return this.value%1==0?this.value.toFixed(1):this.value.toString()}},J=class extends K{type="StringValue";builtins=new Map([["upper",new ei(()=>new J(this.value.toUpperCase()))],["lower",new ei(()=>new J(this.value.toLowerCase()))],["strip",new ei(()=>new J(this.value.trim()))],["title",new ei(()=>new J(this.value.replace(/\b\w/g,t=>t.toUpperCase())))],["capitalize",new ei(()=>new J(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new Q(this.value.length)],["rstrip",new ei(()=>new J(this.value.trimEnd()))],["lstrip",new ei(()=>new J(this.value.trimStart()))],["startswith",new ei(t=>{if(0===t.length)throw Error("startswith() requires at least one argument");let r=t[0];if(r instanceof J)return new Y(this.value.startsWith(r.value));if(r instanceof et){for(let t of r.value){if(!(t instanceof J))throw Error("startswith() tuple elements must be strings");if(this.value.startsWith(t.value))return new Y(!0)}return new Y(!1)}throw Error("startswith() argument must be a string or tuple of strings")})],["endswith",new ei(t=>{if(0===t.length)throw Error("endswith() requires at least one argument");let r=t[0];if(r instanceof J)return new Y(this.value.endsWith(r.value));if(r instanceof et){for(let t of r.value){if(!(t instanceof J))throw Error("endswith() tuple elements must be strings");if(this.value.endsWith(t.value))return new Y(!0)}return new Y(!1)}throw Error("endswith() argument must be a string or tuple of strings")})],["split",new ei(t=>{let r=t[0]??new es;if(!(r instanceof J||r instanceof es))throw Error("sep argument must be a string or null");let i=t[1]??new Q(-1);if(!(i instanceof Q))throw Error("maxsplit argument must be a number");let s=[];if(r instanceof es){let t=this.value.trimStart();for(let{0:r,index:a}of t.matchAll(/\S+/g)){if(-1!==i.value&&s.length>=i.value&&void 0!==a){s.push(r+t.slice(a+r.length));break}s.push(r)}}else{if(""===r.value)throw Error("empty separator");s=this.value.split(r.value),-1!==i.value&&s.length>i.value&&s.push(s.splice(i.value).join(r.value))}return new et(s.map(t=>new J(t)))})],["replace",new ei(t=>{let r;if(t.length<2)throw Error("replace() requires at least two arguments");let i=t[0],s=t[1];if(!(i instanceof J&&s instanceof J))throw Error("replace() arguments must be strings");if(!((r=t.length>2?"KeywordArgumentsValue"===t[2].type?t[2].value.get("count")??new es:t[2]:new es)instanceof Q||r instanceof es))throw Error("replace() count argument must be a number or null");return new J(function(t,r,i,s){if(0===s)return t;let a=null==s||s<0?1/0:s,n=0===r.length?RegExp("(?=)","gu"):RegExp(r.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gu");return t.replaceAll(n,t=>a>0?(--a,i):t)}(this.value,i.value,s.value,r.value))})]])},Y=class extends K{type="BooleanValue"},Z=class extends K{type="ObjectValue";__bool__(){return new Y(this.value.size>0)}builtins=new Map([["get",new ei(([t,r])=>{if(!(t instanceof J))throw Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??r??new es})],["items",new ei(()=>this.items())],["keys",new ei(()=>this.keys())],["values",new ei(()=>this.values())]]);items(){return new et(Array.from(this.value.entries()).map(([t,r])=>new et([new J(t),r])))}keys(){return new et(Array.from(this.value.keys()).map(t=>new J(t)))}values(){return new et(Array.from(this.value.values()))}},ee=class extends Z{type="KeywordArgumentsValue"},et=class extends K{type="ArrayValue";builtins=new Map([["length",new Q(this.value.length)]]);__bool__(){return new Y(this.value.length>0)}},er=class extends et{type="TupleValue"},ei=class extends K{type="FunctionValue"},es=class extends K{type="NullValue"},ea=class extends K{type="UndefinedValue"},en=class{constructor(t){this.parent=t}variables=new Map([["namespace",new ei(t=>{if(0===t.length)return new Z(new Map);if(1!==t.length||!(t[0]instanceof Z))throw Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]);tests=new Map([["boolean",t=>"BooleanValue"===t.type],["callable",t=>t instanceof ei],["odd",t=>{if(!(t instanceof Q))throw Error(`cannot odd on ${t.type}`);return t.value%2!=0}],["even",t=>{if(!(t instanceof Q))throw Error(`cannot even on ${t.type}`);return t.value%2==0}],["false",t=>"BooleanValue"===t.type&&!t.value],["true",t=>"BooleanValue"===t.type&&t.value],["none",t=>"NullValue"===t.type],["string",t=>"StringValue"===t.type],["number",t=>t instanceof Q||t instanceof X],["integer",t=>t instanceof Q],["iterable",t=>"ArrayValue"===t.type||"StringValue"===t.type],["mapping",t=>"ObjectValue"===t.type],["lower",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toLowerCase()}],["upper",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toUpperCase()}],["none",t=>"NullValue"===t.type],["defined",t=>"UndefinedValue"!==t.type],["undefined",t=>"UndefinedValue"===t.type],["equalto",(t,r)=>t.value===r.value],["eq",(t,r)=>t.value===r.value]]);set(t,r){return this.declareVariable(t,function t(r){switch(typeof r){case"number":return Number.isInteger(r)?new Q(r):new X(r);case"string":return new J(r);case"boolean":return new Y(r);case"undefined":return new ea;case"object":if(null===r)return new es;if(Array.isArray(r))return new et(r.map(t));return new Z(new Map(Object.entries(r).map(([r,i])=>[r,t(i)])));case"function":return new ei((i,s)=>t(r(...i.map(t=>t.value))??null));default:throw Error(`Cannot convert to runtime value: ${r}`)}}(r))}declareVariable(t,r){if(this.variables.has(t))throw SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,r),r}setVariable(t,r){return this.variables.set(t,r),r}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new ea}catch{return new ea}}},eo=class{global;constructor(t){this.global=t??new en}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,r){let i=this.evaluate(t.left,r);switch(t.operator.value){case"and":return i.__bool__().value?this.evaluate(t.right,r):i;case"or":return i.__bool__().value?i:this.evaluate(t.right,r)}let s=this.evaluate(t.right,r);switch(t.operator.value){case"==":return new Y(i.value==s.value);case"!=":return new Y(i.value!=s.value)}if(i instanceof ea||s instanceof ea){if(s instanceof ea&&["in","not in"].includes(t.operator.value))return new Y("not in"===t.operator.value);throw Error(`Cannot perform operation ${t.operator.value} on undefined values`)}if(i instanceof es||s instanceof es)throw Error("Cannot perform operation on null values");if("~"===t.operator.value)return new J(i.value.toString()+s.value.toString());if((i instanceof Q||i instanceof X)&&(s instanceof Q||s instanceof X)){let r=i.value,a=s.value;switch(t.operator.value){case"+":case"-":case"*":{let n="+"===t.operator.value?r+a:"-"===t.operator.value?r-a:r*a;return i instanceof X||s instanceof X?new X(n):new Q(n)}case"/":return new X(r/a);case"%":{let t=r%a;return i instanceof X||s instanceof X?new X(t):new Q(t)}case"<":return new Y(r<a);case">":return new Y(r>a);case">=":return new Y(r>=a);case"<=":return new Y(r<=a)}}else if(i instanceof et&&s instanceof et){if("+"===t.operator.value)return new et(i.value.concat(s.value))}else if(s instanceof et){let r=void 0!==s.value.find(t=>t.value===i.value);switch(t.operator.value){case"in":return new Y(r);case"not in":return new Y(!r)}}if((i instanceof J||s instanceof J)&&"+"===t.operator.value)return new J(i.value.toString()+s.value.toString());if(i instanceof J&&s instanceof J)switch(t.operator.value){case"in":return new Y(s.value.includes(i.value));case"not in":return new Y(!s.value.includes(i.value))}if(i instanceof J&&s instanceof Z)switch(t.operator.value){case"in":return new Y(s.value.has(i.value));case"not in":return new Y(!s.value.has(i.value))}throw SyntaxError(`Unknown operator "${t.operator.value}" between ${i.type} and ${s.type}`)}evaluateArguments(t,r){let i=[],s=new Map;for(let a of t)if("SpreadExpression"===a.type){let t=this.evaluate(a.argument,r);if(!(t instanceof et))throw Error(`Cannot unpack non-iterable type: ${t.type}`);for(let r of t.value)i.push(r)}else if("KeywordArgumentExpression"===a.type)s.set(a.key.value,this.evaluate(a.value,r));else{if(s.size>0)throw Error("Positional arguments must come before keyword arguments");i.push(this.evaluate(a,r))}return[i,s]}applyFilter(t,r,i){if("Identifier"===r.type){if("tojson"===r.value)return new J(el(t));if(t instanceof et)switch(r.value){case"list":return t;case"first":return t.value[0];case"last":return t.value[t.value.length-1];case"length":return new Q(t.value.length);case"reverse":return new et(t.value.reverse());case"sort":return new et(t.value.sort((t,r)=>{if(t.type!==r.type)throw Error(`Cannot compare different types: ${t.type} and ${r.type}`);switch(t.type){case"IntegerValue":case"FloatValue":return t.value-r.value;case"StringValue":return t.value.localeCompare(r.value);default:throw Error(`Cannot compare type: ${t.type}`)}}));case"join":return new J(t.value.map(t=>t.value).join(""));case"string":return new J(el(t));case"unique":{let r=new Set,i=[];for(let s of t.value)r.has(s.value)||(r.add(s.value),i.push(s));return new et(i)}default:throw Error(`Unknown ArrayValue filter: ${r.value}`)}if(t instanceof J)switch(r.value){case"length":case"upper":case"lower":case"title":case"capitalize":{let s=t.builtins.get(r.value);if(s instanceof ei)return s.value([],i);if(s instanceof Q)return s;throw Error(`Unknown StringValue filter: ${r.value}`)}case"trim":return new J(t.value.trim());case"indent":return new J(t.value.split("\n").map((t,r)=>0===r||0===t.length?t:"    "+t).join("\n"));case"join":case"string":return t;case"int":{let r=parseInt(t.value,10);return new Q(isNaN(r)?0:r)}case"float":{let r=parseFloat(t.value);return new X(isNaN(r)?0:r)}default:throw Error(`Unknown StringValue filter: ${r.value}`)}if(t instanceof Q||t instanceof X)switch(r.value){case"abs":return t instanceof Q?new Q(Math.abs(t.value)):new X(Math.abs(t.value));case"int":return new Q(Math.floor(t.value));case"float":return new X(t.value);default:throw Error(`Unknown NumericValue filter: ${r.value}`)}else if(t instanceof Z)switch(r.value){case"items":return new et(Array.from(t.value.entries()).map(([t,r])=>new et([new J(t),r])));case"length":return new Q(t.value.size);default:throw Error(`Unknown ObjectValue filter: ${r.value}`)}else if(t instanceof Y)switch(r.value){case"bool":return new Y(t.value);case"int":return new Q(+!!t.value);case"float":return new X(+!!t.value);case"string":return new J(t.value?"true":"false");default:throw Error(`Unknown BooleanValue filter: ${r.value}`)}throw Error(`Cannot apply filter "${r.value}" to type: ${t.type}`)}if("CallExpression"===r.type){if("Identifier"!==r.callee.type)throw Error(`Unknown filter: ${r.callee.type}`);let s=r.callee.value;if("tojson"===s){let[,s]=this.evaluateArguments(r.args,i),a=s.get("indent")??new es;if(!(a instanceof Q||a instanceof es))throw Error("If set, indent must be a number");return new J(el(t,a.value))}if("join"===s){let a;if(t instanceof J)a=Array.from(t.value);else if(t instanceof et)a=t.value.map(t=>t.value);else throw Error(`Cannot apply filter "${s}" to type: ${t.type}`);let[n,o]=this.evaluateArguments(r.args,i),l=n.at(0)??o.get("separator")??new J("");if(!(l instanceof J))throw Error("separator must be a string");return new J(a.join(l.value))}if("int"===s||"float"===s){let[a,n]=this.evaluateArguments(r.args,i),o=a.at(0)??n.get("default")??("int"===s?new Q(0):new X(0));if(t instanceof J){let r="int"===s?parseInt(t.value,10):parseFloat(t.value);return isNaN(r)?o:"int"===s?new Q(r):new X(r)}if(t instanceof Q||t instanceof X)return t;if(t instanceof Y)return"int"===s?new Q(+!!t.value):new X(+!!t.value);else throw Error(`Cannot apply filter "${s}" to type: ${t.type}`)}else if("default"===s){let[s,a]=this.evaluateArguments(r.args,i),n=s[0]??new J(""),o=s[1]??a.get("boolean")??new Y(!1);if(!(o instanceof Y))throw Error("`default` filter flag must be a boolean");return t instanceof ea||o.value&&!t.__bool__().value?n:t}if(t instanceof et){switch(s){case"selectattr":case"rejectattr":{let a,n="selectattr"===s;if(t.value.some(t=>!(t instanceof Z)))throw Error(`\`${s}\` can only be applied to array of objects`);if(r.args.some(t=>"StringLiteral"!==t.type))throw Error(`arguments of \`${s}\` must be strings`);let[o,l,u]=r.args.map(t=>this.evaluate(t,i));if(l){let t=i.tests.get(l.value);if(!t)throw Error(`Unknown test: ${l.value}`);a=t}else a=(...t)=>t[0].__bool__().value;return new et(t.value.filter(t=>{let r=t.value.get(o.value),i=!!r&&a(r,u);return n?i:!i}))}case"map":{let[,s]=this.evaluateArguments(r.args,i);if(s.has("attribute")){let r=s.get("attribute");if(!(r instanceof J))throw Error("attribute must be a string");let i=s.get("default");return new et(t.value.map(t=>{if(!(t instanceof Z))throw Error("items in map must be an object");return t.value.get(r.value)??i??new ea}))}throw Error("`map` expressions without `attribute` set are not currently supported.")}}throw Error(`Unknown ArrayValue filter: ${s}`)}if(t instanceof J){switch(s){case"indent":{let[s,a]=this.evaluateArguments(r.args,i),n=s.at(0)??a.get("width")??new Q(4);if(!(n instanceof Q))throw Error("width must be a number");let o=s.at(1)??a.get("first")??new Y(!1),l=s.at(2)??a.get("blank")??new Y(!1),u=t.value.split("\n"),d=" ".repeat(n.value);return new J(u.map((t,r)=>(o.value||0!==r)&&(l.value||0!==t.length)?d+t:t).join("\n"))}case"replace":{let s=t.builtins.get("replace");if(!(s instanceof ei))throw Error("replace filter not available");let[a,n]=this.evaluateArguments(r.args,i);return s.value([...a,new ee(n)],i)}}throw Error(`Unknown StringValue filter: ${s}`)}throw Error(`Cannot apply filter "${s}" to type: ${t.type}`)}throw Error(`Unknown filter: ${r.type}`)}evaluateFilterExpression(t,r){let i=this.evaluate(t.operand,r);return this.applyFilter(i,t.filter,r)}evaluateTestExpression(t,r){let i=this.evaluate(t.operand,r),s=r.tests.get(t.test.value);if(!s)throw Error(`Unknown test: ${t.test.value}`);let a=s(i);return new Y(t.negate?!a:a)}evaluateSelectExpression(t,r){return this.evaluate(t.test,r).__bool__().value?this.evaluate(t.lhs,r):new ea}evaluateUnaryExpression(t,r){let i=this.evaluate(t.argument,r);if("not"===t.operator.value)return new Y(!i.value);throw SyntaxError(`Unknown operator: ${t.operator.value}`)}evaluateTernaryExpression(t,r){return this.evaluate(t.condition,r).__bool__().value?this.evaluate(t.trueExpr,r):this.evaluate(t.falseExpr,r)}evalProgram(t,r){return this.evaluateBlock(t.body,r)}evaluateBlock(t,r){let i="";for(let s of t){let t=this.evaluate(s,r);"NullValue"!==t.type&&"UndefinedValue"!==t.type&&(i+=t.toString())}return new J(i)}evaluateIdentifier(t,r){return r.lookupVariable(t.value)}evaluateCallExpression(t,r){let[i,s]=this.evaluateArguments(t.args,r);s.size>0&&i.push(new ee(s));let a=this.evaluate(t.callee,r);if("FunctionValue"!==a.type)throw Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(i,r)}evaluateSliceExpression(t,r,i){if(!(t instanceof et||t instanceof J))throw Error("Slice object must be an array or string");let s=this.evaluate(r.start,i),a=this.evaluate(r.stop,i),n=this.evaluate(r.step,i);if(!(s instanceof Q||s instanceof ea))throw Error("Slice start must be numeric or undefined");if(!(a instanceof Q||a instanceof ea))throw Error("Slice stop must be numeric or undefined");if(!(n instanceof Q||n instanceof ea))throw Error("Slice step must be numeric or undefined");return t instanceof et?new et(U(t.value,s.value,a.value,n.value)):new J(U(Array.from(t.value),s.value,a.value,n.value).join(""))}evaluateMemberExpression(t,r){let i,s,a=this.evaluate(t.object,r);if(t.computed)if("SliceExpression"===t.property.type)return this.evaluateSliceExpression(a,t.property,r);else i=this.evaluate(t.property,r);else i=new J(t.property.value);if(a instanceof Z){if(!(i instanceof J))throw Error(`Cannot access property with non-string: got ${i.type}`);s=a.value.get(i.value)??a.builtins.get(i.value)}else if(a instanceof et||a instanceof J)if(i instanceof Q)s=a.value.at(i.value),a instanceof J&&(s=new J(a.value.at(i.value)));else if(i instanceof J)s=a.builtins.get(i.value);else throw Error(`Cannot access property with non-string/non-number: got ${i.type}`);else{if(!(i instanceof J))throw Error(`Cannot access property with non-string: got ${i.type}`);s=a.builtins.get(i.value)}return s instanceof K?s:new ea}evaluateSet(t,r){let i=t.value?this.evaluate(t.value,r):this.evaluateBlock(t.body,r);if("Identifier"===t.assignee.type){let s=t.assignee.value;r.setVariable(s,i)}else if("TupleLiteral"===t.assignee.type){let s=t.assignee;if(!(i instanceof et))throw Error(`Cannot unpack non-iterable type in set: ${i.type}`);let a=i.value;if(a.length!==s.value.length)throw Error(`Too ${s.value.length>a.length?"few":"many"} items to unpack in set`);for(let t=0;t<s.value.length;++t){let i=s.value[t];if("Identifier"!==i.type)throw Error(`Cannot unpack to non-identifier in set: ${i.type}`);r.setVariable(i.value,a[t])}}else if("MemberExpression"===t.assignee.type){let s=t.assignee,a=this.evaluate(s.object,r);if(!(a instanceof Z))throw Error("Cannot assign to member of non-object");if("Identifier"!==s.property.type)throw Error("Cannot assign to member with non-identifier property");a.value.set(s.property.value,i)}else throw Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new es}evaluateIf(t,r){let i=this.evaluate(t.test,r);return this.evaluateBlock(i.__bool__().value?t.body:t.alternate,r)}evaluateFor(t,r){let i,s,a=new en(r);if("SelectExpression"===t.iterable.type){let r=t.iterable;s=this.evaluate(r.lhs,a),i=r.test}else s=this.evaluate(t.iterable,a);if(!(s instanceof et||s instanceof Z))throw Error(`Expected iterable or object type in for loop: got ${s.type}`);s instanceof Z&&(s=s.keys());let n=[],o=[];for(let r=0;r<s.value.length;++r){let l,u=new en(a),d=s.value[r];if("Identifier"===t.loopvar.type)l=r=>r.setVariable(t.loopvar.value,d);else if("TupleLiteral"===t.loopvar.type){let r=t.loopvar;if("ArrayValue"!==d.type)throw Error(`Cannot unpack non-iterable type: ${d.type}`);if(r.value.length!==d.value.length)throw Error(`Too ${r.value.length>d.value.length?"few":"many"} items to unpack`);l=t=>{for(let i=0;i<r.value.length;++i){if("Identifier"!==r.value[i].type)throw Error(`Cannot unpack non-identifier type: ${r.value[i].type}`);t.setVariable(r.value[i].value,d.value[i])}}}else throw Error(`Invalid loop variable(s): ${t.loopvar.type}`);(!i||(l(u),this.evaluate(i,u).__bool__().value))&&(n.push(d),o.push(l))}let l="",u=!0;for(let r=0;r<n.length;++r){let i=new Map([["index",new Q(r+1)],["index0",new Q(r)],["revindex",new Q(n.length-r)],["revindex0",new Q(n.length-r-1)],["first",new Y(0===r)],["last",new Y(r===n.length-1)],["length",new Q(n.length)],["previtem",r>0?n[r-1]:new ea],["nextitem",r<n.length-1?n[r+1]:new ea]]);a.setVariable("loop",new Z(i)),o[r](a);try{let r=this.evaluateBlock(t.body,a);l+=r.value}catch(t){if(t instanceof H)continue;if(t instanceof W)break;throw t}u=!1}return u&&(l+=this.evaluateBlock(t.defaultBlock,a).value),new J(l)}evaluateMacro(t,r){return r.setVariable(t.name.value,new ei((r,i)=>{let s,a=new en(i);r=r.slice(),r.at(-1)?.type==="KeywordArgumentsValue"&&(s=r.pop());for(let i=0;i<t.args.length;++i){let n=t.args[i],o=r[i];if("Identifier"===n.type){if(!o)throw Error(`Missing positional argument: ${n.value}`);a.setVariable(n.value,o)}else if("KeywordArgumentExpression"===n.type){let t=o??s?.value.get(n.key.value)??this.evaluate(n.value,a);a.setVariable(n.key.value,t)}else throw Error(`Unknown argument type: ${n.type}`)}return this.evaluateBlock(t.body,a)})),new es}evaluateCallStatement(t,r){let i=new ei((r,i)=>{let s=new en(i);if(t.callerArgs)for(let i=0;i<t.callerArgs.length;++i){let a=t.callerArgs[i];if("Identifier"!==a.type)throw Error(`Caller parameter must be an identifier, got ${a.type}`);s.setVariable(a.value,r[i]??new ea)}return this.evaluateBlock(t.body,s)}),[s,a]=this.evaluateArguments(t.call.args,r);s.push(new ee(a));let n=this.evaluate(t.call.callee,r);if("FunctionValue"!==n.type)throw Error(`Cannot call something that is not a function: got ${n.type}`);let o=new en(r);return o.setVariable("caller",i),n.value(s,o)}evaluateFilterStatement(t,r){let i=this.evaluateBlock(t.body,r);return this.applyFilter(i,t.filter,r)}evaluate(t,r){if(!t)return new ea;switch(t.type){case"Program":return this.evalProgram(t,r);case"Set":return this.evaluateSet(t,r);case"If":return this.evaluateIf(t,r);case"For":return this.evaluateFor(t,r);case"Macro":return this.evaluateMacro(t,r);case"CallStatement":return this.evaluateCallStatement(t,r);case"Break":throw new W;case"Continue":throw new H;case"IntegerLiteral":return new Q(t.value);case"FloatLiteral":return new X(t.value);case"StringLiteral":return new J(t.value);case"ArrayLiteral":return new et(t.value.map(t=>this.evaluate(t,r)));case"TupleLiteral":return new er(t.value.map(t=>this.evaluate(t,r)));case"ObjectLiteral":{let i=new Map;for(let[s,a]of t.value){let t=this.evaluate(s,r);if(!(t instanceof J))throw Error(`Object keys must be strings: got ${t.type}`);i.set(t.value,this.evaluate(a,r))}return new Z(i)}case"Identifier":return this.evaluateIdentifier(t,r);case"CallExpression":return this.evaluateCallExpression(t,r);case"MemberExpression":return this.evaluateMemberExpression(t,r);case"UnaryExpression":return this.evaluateUnaryExpression(t,r);case"BinaryExpression":return this.evaluateBinaryExpression(t,r);case"FilterExpression":return this.evaluateFilterExpression(t,r);case"FilterStatement":return this.evaluateFilterStatement(t,r);case"TestExpression":return this.evaluateTestExpression(t,r);case"SelectExpression":return this.evaluateSelectExpression(t,r);case"Ternary":return this.evaluateTernaryExpression(t,r);case"Comment":return new es;default:throw SyntaxError(`Unknown node type: ${t.type}`)}}};function el(t,r,i){let s=i??0;switch(t.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(t.value);case"ArrayValue":case"ObjectValue":{let i=r?" ".repeat(r):"",a="\n"+i.repeat(s),n=a+i;if("ArrayValue"===t.type){let i=t.value.map(t=>el(t,r,s+1));return r?`[${n}${i.join(`,${n}`)}${a}]`:`[${i.join(", ")}]`}{let i=Array.from(t.value.entries()).map(([t,i])=>{let a=`"${t}": ${el(i,r,s+1)}`;return r?`${n}${a}`:a});return r?`{${i.join(",")}${a}}`:`{${i.join(", ")}}`}}default:throw Error(`Cannot convert to JSON: ${t.type}`)}}function eu(...t){return"{%- "+t.join(" ")+" -%}"}function ed(t,r=-1){switch(t.type){case"SpreadExpression":return`*${ed(t.argument)}`;case"Identifier":return t.value;case"IntegerLiteral":case"FloatLiteral":return`${t.value}`;case"StringLiteral":return JSON.stringify(t.value);case"BinaryExpression":{let i=function(t){switch(t.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":if("and"===t.operator.value)return 1;if("in"===t.operator.value||"not in"===t.operator.value)return 2}return 0}(t),s=ed(t.left,i),a=ed(t.right,i+1),n=`${s} ${t.operator.value} ${a}`;return i<r?`(${n})`:n}case"UnaryExpression":return t.operator.value+("not"===t.operator.value?" ":"")+ed(t.argument,1/0);case"CallExpression":{let r=t.args.map(ed).join(", ");return`${ed(t.callee)}(${r})`}case"MemberExpression":{let r=ed(t.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(t.object.type)||(r=`(${r})`);let i=ed(t.property);return t.computed||"Identifier"===t.property.type||(i=`(${i})`),t.computed?`${r}[${i}]`:`${r}.${i}`}case"FilterExpression":{let r=ed(t.operand,1/0);if("CallExpression"===t.filter.type)return`${r} | ${ed(t.filter)}`;return`${r} | ${t.filter.value}`}case"SelectExpression":return`${ed(t.lhs)} if ${ed(t.test)}`;case"TestExpression":return`${ed(t.operand)} is${t.negate?" not":""} ${t.test.value}`;case"ArrayLiteral":case"TupleLiteral":{let r=t.value.map(ed),i="ArrayLiteral"===t.type?"[]":"()";return`${i[0]}${r.join(", ")}${i[1]}`}case"ObjectLiteral":{let r=Array.from(t.value.entries()).map(([t,r])=>`${ed(t)}: ${ed(r)}`);return`{${r.join(", ")}}`}case"SliceExpression":{let r=t.start?ed(t.start):"",i=t.stop?ed(t.stop):"",s=t.step?`:${ed(t.step)}`:"";return`${r}:${i}${s}`}case"KeywordArgumentExpression":return`${t.key.value}=${ed(t.value)}`;case"Ternary":{let i=`${ed(t.trueExpr)} if ${ed(t.condition,0)} else ${ed(t.falseExpr)}`;return r>-1?`(${i})`:i}default:throw Error(`Unknown expression type: ${t.type}`)}}var ec=class{parsed;constructor(t){const r=d(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=V(r)}render(t){let r=new en;if(r.set("false",!1),r.set("true",!0),r.set("none",null),r.set("raise_exception",t=>{throw Error(t)}),r.set("range",G),r.set("strftime_now",q),r.set("True",!0),r.set("False",!1),r.set("None",null),t)for(let[i,s]of Object.entries(t))r.set(i,s);return new eo(r).run(this.parsed).value}format(t){return function(t,r="	"){let i="number"==typeof r?" ".repeat(r):r;return(function t(r,i,s){return r.map(r=>(function(r,i,s){let a=s.repeat(i);switch(r.type){case"Program":return t(r.body,i,s);case"If":return function(r,i,s){let a=s.repeat(i),n=[],o=r;for(;o;)if(n.push({test:o.test,body:o.body}),1===o.alternate.length&&"If"===o.alternate[0].type)o=o.alternate[0];else break;let l=a+eu("if",ed(n[0].test))+"\n"+t(n[0].body,i+1,s);for(let r=1;r<n.length;++r)l+="\n"+a+eu("elif",ed(n[r].test))+"\n"+t(n[r].body,i+1,s);return o&&o.alternate.length>0&&(l+="\n"+a+eu("else")+"\n"+t(o.alternate,i+1,s)),l+="\n"+a+eu("endif")}(r,i,s);case"For":var n,o,l,u,d,c,p,h,m,f,g,_,y=r,b=i,w=s;let x=w.repeat(b),v="";if("SelectExpression"===y.iterable.type){let t=y.iterable;v=`${ed(t.lhs)} if ${ed(t.test)}`}else v=ed(y.iterable);let M=x+eu("for",ed(y.loopvar),"in",v)+"\n"+t(y.body,b+1,w);return y.defaultBlock.length>0&&(M+="\n"+x+eu("else")+"\n"+t(y.defaultBlock,b+1,w)),M+="\n"+x+eu("endfor");case"Set":let T,k,$,C;return n=r,o=i,T=(l=s).repeat(o),k=ed(n.assignee),$=n.value?ed(n.value):"",C=T+eu("set",`${k}${n.value?" = "+$:""}`),0===n.body.length?C:C+"\n"+t(n.body,o+1,l)+"\n"+T+eu("endset");case"Macro":let S,P;return u=r,d=i,S=(c=s).repeat(d),P=u.args.map(ed).join(", "),S+eu("macro",`${u.name.value}(${P})`)+"\n"+t(u.body,d+1,c)+"\n"+S+eu("endmacro");case"Break":return a+eu("break");case"Continue":return a+eu("continue");case"CallStatement":let E,F,A;return p=r,h=i,E=(m=s).repeat(h),F=p.callerArgs&&p.callerArgs.length>0?`(${p.callerArgs.map(ed).join(", ")})`:"",A=E+eu(`call${F}`,ed(p.call))+"\n"+(t(p.body,h+1,m)+"\n")+(E+eu("endcall"));case"FilterStatement":let I,z;return f=r,g=i,z=(I=(_=s).repeat(g))+eu("filter","Identifier"===f.filter.type?f.filter.value:ed(f.filter))+"\n"+(t(f.body,g+1,_)+"\n")+(I+eu("endfilter"));case"Comment":return a+"{# "+r.value+" #}";default:return a+"{{- "+ed(r)+" -}}"}})(r,i,s)).join("\n")})(t.body,0,i).replace(/\n$/,"")}(this.parsed,t?.indent||"	")}}},"./src/backends/onnx.js":(t,r,i)=>{let s,a;i.r(r),i.d(r,{Tensor:()=>d.Tensor,createInferenceSession:()=>_,deviceToExecutionProviders:()=>f,isONNXProxy:()=>M,isONNXTensor:()=>x,runInferenceSession:()=>w});var n,o=i("./src/env.js"),l=i("?2ce3"),u=i("onnxruntime-web"),d=i("onnxruntime-common");let c=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),p=[],h=Symbol.for("onnxruntime");h in globalThis?a=globalThis[h]:o.apis.IS_NODE_ENV?(a=l??(n||(n=i.t(l,2))),"win32"===S.default.platform&&p.push("dml"),p.push("cpu"),s=["cpu"]):(a=u,o.apis.IS_WEBNN_AVAILABLE&&p.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&p.push("webgpu"),p.push("wasm"),s=["wasm"]);let m=a.InferenceSession;function f(t=null){if(!t)return s;switch(t){case"auto":return p;case"gpu":return p.filter(t=>["webgpu","cuda","dml","webnn-gpu"].includes(t))}if(p.includes(t))return[c[t]??t];throw Error(`Unsupported device: "${t}". Should be one of: ${p.join(", ")}.`)}let g=null;async function _(t,r,i){g&&await g;let s=m.create(t,r);g??=s;let a=await s;return a.config=i,a}let y=Promise.resolve(),b=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV;async function w(t,r){let i=()=>t.run(r);return await (b?y=y.then(i):i())}function x(t){return t instanceof a.Tensor}let v=a?.env;function M(){return v?.wasm?.proxy}v?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||v.wasm.wasmPaths||(v.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`),v.wasm.proxy=!1),v?.webgpu&&(v.webgpu.powerPreference="high-performance"),o.env.backends.onnx=v},"./src/base/feature_extraction_utils.js":(t,r,i)=>{i.r(r),i.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>l});var s=i("./src/utils/constants.js"),a=i("./src/utils/generic.js"),n=i("./src/utils/hub.js");class o extends a.Callable{constructor(t){super(),this.config=t}static async from_pretrained(t,r={}){return new this(await (0,n.getModelJSON)(t,s.FEATURE_EXTRACTOR_NAME,!0,r))}}function l(t,r){if(!(t instanceof Float32Array||t instanceof Float64Array))throw Error(`${r} expects input to be a Float32Array or a Float64Array, but got ${t?.constructor?.name??typeof t} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(t,r,i)=>{i.r(r),i.d(r,{ImageProcessor:()=>_,center_to_corners_format:()=>p,post_process_instance_segmentation:()=>g,post_process_object_detection:()=>h,post_process_panoptic_segmentation:()=>f,post_process_semantic_segmentation:()=>m});var s=i("./src/utils/generic.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/maths.js");i("./src/utils/image.js");var o=i("./src/utils/core.js"),l=i("./src/utils/hub.js"),u=i("./src/utils/constants.js");function d(t,r,i=0,s=null){let a=t/r,o=(0,n.bankers_round)(a)*r;return null!==s&&o>s&&(o=Math.floor(a)*r),o<i&&(o=Math.ceil(a)*r),o}function c([t,r],i){return[Math.max(Math.floor(t/i),1)*i,Math.max(Math.floor(r/i),1)*i]}function p([t,r,i,s]){return[t-i/2,r-s/2,t+i/2,r+s/2]}function h(t,r=.5,i=null,s=!1){let a=t.logits,o=t.pred_boxes,[l,u,d]=a.dims;if(null!==i&&i.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let t=0;t<l;++t){let l=null!==i?i[t]:null,h={boxes:[],classes:[],scores:[]},m=a[t],f=o[t];for(let t=0;t<u;++t){let i,a=m[t],o=[];if(s){i=a.sigmoid().data;for(let t=0;t<i.length;++t)i[t]>r&&o.push(t)}else{let t=(0,n.max)(a.data)[1];if(t===d-1||(i=(0,n.softmax)(a.data))[t]<r)continue;o.push(t)}for(let r of o){let s=f[t].data;s=p(s),null!==l&&(s=s.map((t,r)=>t*l[(r+1)%2])),h.boxes.push(s),h.classes.push(r),h.scores.push(i[r])}}c.push(h)}return c}function m(t,r=null){let i=t.logits,s=i.dims[0];if(null!==r&&r.length!==s)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let n=[];for(let t=0;t<s;++t){let s=null!==r?r[t]:null,o=i[t];null!==s&&(o=(0,a.interpolate)(o,s,"bilinear",!1));let[l,u]=s??o.dims.slice(-2),d=new a.Tensor("int32",new Int32Array(l*u),[l,u]),c=o[0].data,p=d.data;for(let t=1;t<o.dims[0];++t){let r=o[t].data;for(let i=0;i<r.length;++i)r[i]>c[i]&&(c[i]=r[i],p[i]=t)}let h=Array(o.dims[0]);for(let t=0;t<p.length;++t){let r=p[t];h[r]=r}let m=h.filter(t=>void 0!==t);n.push({segmentation:d,labels:m})}return n}function f(t,r=.5,i=.5,s=.8,o=null,l=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);let u=t.class_queries_logits??t.logits,d=(t.masks_queries_logits??t.pred_masks).sigmoid(),[c,p,h]=u.dims;if(h-=1,null!==l&&l.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let m=[];for(let t=0;t<c;++t){let c=null!==l?l[t]:null,p=u[t],f=d[t],[g,_,y]=function(t,r,i,s){let a=[],o=[],l=[];for(let u=0;u<t.dims[0];++u){let d=t[u],c=r[u],p=(0,n.max)(d.data)[1];if(p===s)continue;let h=(0,n.softmax)(d.data)[p];h>i&&(a.push(c),o.push(h),l.push(p))}return[a,o,l]}(p,f,r,h);if(0===y.length){let[t,r]=c??f.dims.slice(-2),i=new a.Tensor("int32",new Int32Array(t*r).fill(-1),[t,r]);m.push({segmentation:i,segments_info:[]});continue}let[b,w]=function(t,r,i,s,n,o=null,l=null){let[u,d]=l??t[0].dims,c=new a.Tensor("int32",new Int32Array(u*d),[u,d]),p=[];if(null!==l)for(let r=0;r<t.length;++r)t[r]=(0,a.interpolate)(t[r],l,"bilinear",!1);let h=new Int32Array(t[0].data.length),m=new Float32Array(t[0].data.length);for(let i=0;i<t.length;++i){let s=r[i],a=t[i].data;for(let t=0;t<a.length;++t)a[t]*=s,a[t]>m[t]&&(h[t]=i,m[t]=a[t])}let f=0,g=c.data;for(let a=0;a<i.length;++a){let o=i[a],[l,u]=function(t,r,i,s=.5,a=.8){let n=[],o=0,l=0,u=r[i].data;for(let r=0;r<t.length;++r)t[r]===i&&(n.push(r),++o),u[r]>=s&&++l;let d=o>0&&l>0;return d&&(d=o/l>a),[d,n]}(h,t,a,s,n);if(l){for(let t of(++f,u))g[t]=f;p.push({id:f,label_id:o,score:r[a]})}}return[c,p]}(g,_,y,i,s,o,c);m.push({segmentation:b,segments_info:w})}return m}function g(t,r=.5,i=null){throw Error("`post_process_instance_segmentation` is not yet implemented.")}class _ extends s.Callable{constructor(t){super(),this.image_mean=t.image_mean??t.mean,this.image_std=t.image_std??t.std,this.resample=t.resample??2,this.do_rescale=t.do_rescale??!0,this.rescale_factor=t.rescale_factor??1/255,this.do_normalize=t.do_normalize,this.do_thumbnail=t.do_thumbnail,this.size=t.size??t.image_size,this.do_resize=t.do_resize??void 0!==this.size,this.size_divisibility=t.size_divisibility??t.size_divisor,this.do_center_crop=t.do_center_crop,this.crop_size=t.crop_size,this.do_convert_rgb=t.do_convert_rgb??!0,this.do_crop_margin=t.do_crop_margin,this.pad_size=t.pad_size,this.do_pad=t.do_pad,this.min_pixels=t.min_pixels,this.max_pixels=t.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=t.do_flip_channel_order??!1,this.config=t}async thumbnail(t,r,i=2){let s=t.height,a=t.width,n=r.height,o=r.width,l=Math.min(s,n),u=Math.min(a,o);return l===s&&u===a?t:(s>a?u=Math.floor(a*l/s):a>s&&(l=Math.floor(s*u/a)),await t.resize(u,l,{resample:i}))}async crop_margin(t,r=200){let i=t.clone().grayscale(),s=(0,n.min)(i.data)[0],a=(0,n.max)(i.data)[0]-s;if(0===a)return t;let o=r/255,l=i.width,u=i.height,d=0,c=0,p=i.data;for(let t=0;t<i.height;++t){let r=t*i.width;for(let n=0;n<i.width;++n)(p[r+n]-s)/a<o&&(l=Math.min(l,n),u=Math.min(u,t),d=Math.max(d,n),c=Math.max(c,t))}return t=await t.crop([l,u,d,c])}pad_image(t,r,i,{mode:s="constant",center:a=!1,constant_values:n=0}={}){let l,u,[d,c,p]=r;if("number"==typeof i?(l=i,u=i):"square"===i?l=u=Math.max(d,c):(l=i.width,u=i.height),l!==c||u!==d){let i=new Float32Array(l*u*p);if(Array.isArray(n))for(let t=0;t<i.length;++t)i[t]=n[t%p];else 0!==n&&i.fill(n);let[h,m]=a?[Math.floor((l-c)/2),Math.floor((u-d)/2)]:[0,0];for(let r=0;r<d;++r){let s=(r+m)*l,a=r*c;for(let r=0;r<c;++r){let n=(s+r+h)*p,o=(a+r)*p;for(let r=0;r<p;++r)i[n+r]=t[o+r]}}if("symmetric"===s){if(a)throw Error("`center` padding is not supported when `mode` is set to `symmetric`.");let r=d-1,s=c-1;for(let a=0;a<u;++a){let n=a*l,u=(0,o.calculateReflectOffset)(a,r)*c;for(let r=0;r<l;++r){if(a<d&&r<c)continue;let l=(n+r)*p,h=(u+(0,o.calculateReflectOffset)(r,s))*p;for(let r=0;r<p;++r)i[l+r]=t[h+r]}}}t=i,r=[u,l,p]}return[t,r]}rescale(t){for(let r=0;r<t.length;++r)t[r]=this.rescale_factor*t[r]}get_resize_output_image_size(t,r){let i,s,[a,n]=t.size;if(this.do_thumbnail){let{height:t,width:s}=r;i=Math.min(t,s)}else Number.isInteger(r)?(i=r,s=this.config.max_size??i):void 0!==r&&(i=r.shortest_edge,s=r.longest_edge);if(void 0!==i||void 0!==s){let t=void 0===i?1:Math.max(i/a,i/n),r=a*t,o=n*t,l=void 0===s?1:Math.min(s/r,s/o),u=Math.floor(Number((r*l).toFixed(2))),d=Math.floor(Number((o*l).toFixed(2)));return void 0!==this.size_divisibility&&([u,d]=c([u,d],this.size_divisibility)),[u,d]}if(void 0!==r&&void 0!==r.width&&void 0!==r.height){let t=r.width,i=r.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let r=i/n,s=t/a;Math.abs(1-s)<Math.abs(1-r)?r=s:s=r,i=d(r*n,this.config.ensure_multiple_of),t=d(s*a,this.config.ensure_multiple_of)}return[t,i]}if(void 0!==this.size_divisibility)return c([a,n],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels)return function(t,r,i=28,s=3136,a=1003520){if(t<i||r<i)throw Error(`height:${t} or width:${r} must be larger than factor:${i}`);if(Math.max(t,r)/Math.min(t,r)>200)throw Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(t,r)/Math.min(t,r)}`);let n=Math.round(t/i)*i,o=Math.round(r/i)*i;if(n*o>a){let s=Math.sqrt(t*r/a);n=Math.floor(t/s/i)*i,o=Math.floor(r/s/i)*i}else if(n*o<s){let a=Math.sqrt(s/(t*r));n=Math.ceil(t*a/i)*i,o=Math.ceil(r*a/i)*i}return[n,o]}(n,a,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels);throw Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(r)}`)}async resize(t){let[r,i]=this.get_resize_output_image_size(t,this.size);return await t.resize(r,i,{resample:this.resample})}async preprocess(t,{do_normalize:r=null,do_pad:i=null,do_convert_rgb:s=null,do_convert_grayscale:n=null,do_flip_channel_order:o=null}={}){this.do_crop_margin&&(t=await this.crop_margin(t));let[l,u]=t.size;if(s??this.do_convert_rgb?t=t.rgb():n&&(t=t.grayscale()),this.do_resize&&(t=await this.resize(t)),this.do_thumbnail&&(t=await this.thumbnail(t,this.size,this.resample)),this.do_center_crop){let r,i;Number.isInteger(this.crop_size)?(r=this.crop_size,i=this.crop_size):(r=this.crop_size.width,i=this.crop_size.height),t=await t.center_crop(r,i)}let d=[t.height,t.width],p=Float32Array.from(t.data),h=[t.height,t.width,t.channels];if(this.do_rescale&&this.rescale(p),r??this.do_normalize){let r=this.image_mean;Array.isArray(this.image_mean)||(r=Array(t.channels).fill(r));let i=this.image_std;if(Array.isArray(this.image_std)||(i=Array(t.channels).fill(r)),r.length!==t.channels||i.length!==t.channels)throw Error(`When set to arrays, the length of \`image_mean\` (${r.length}) and \`image_std\` (${i.length}) must match the number of channels in the image (${t.channels}).`);for(let s=0;s<p.length;s+=t.channels)for(let a=0;a<t.channels;++a)p[s+a]=(p[s+a]-r[a])/i[a]}if(i??this.do_pad){if(this.pad_size){let r=this.pad_image(p,[t.height,t.width,t.channels],this.pad_size);[p,h]=r}else if(this.size_divisibility){let[t,r]=c([h[1],h[0]],this.size_divisibility);[p,h]=this.pad_image(p,h,{width:t,height:r})}}if(o??this.do_flip_channel_order){if(3!==h[2])throw Error("Flipping channel order is only supported for RGB images.");for(let t=0;t<p.length;t+=3){let r=p[t];p[t]=p[t+2],p[t+2]=r}}return{original_size:[u,l],reshaped_input_size:d,pixel_values:new a.Tensor("float32",p,h).permute(2,0,1)}}async _call(t){Array.isArray(t)||(t=[t]);let r=await Promise.all(t.map(t=>this.preprocess(t)));return{pixel_values:(0,a.stack)(r.map(t=>t.pixel_values),0),original_sizes:r.map(t=>t.original_size),reshaped_input_sizes:r.map(t=>t.reshaped_input_size)}}static async from_pretrained(t,r={}){return new this(await (0,l.getModelJSON)(t,u.IMAGE_PROCESSOR_NAME,!0,r))}}},"./src/base/processing_utils.js":(t,r,i)=>{i.r(r),i.d(r,{Processor:()=>o});var s=i("./src/utils/constants.js"),a=i("./src/utils/generic.js"),n=i("./src/utils/hub.js");class o extends a.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(t,r,i){super(),this.config=t,this.components=r,this.chat_template=i}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(t,r={}){if(!this.tokenizer)throw Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(t,{tokenize:!1,chat_template:this.chat_template??void 0,...r})}batch_decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...t)}decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...t)}async _call(t,...r){for(let i of[this.image_processor,this.feature_extractor,this.tokenizer])if(i)return i(t,...r);throw Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(t,r={}){let[i,a,o]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(t,s.PROCESSOR_NAME,!0,r):{},Promise.all(this.classes.filter(t=>t in this).map(async i=>{let s=await this[i].from_pretrained(t,r);return[i.replace(/_class$/,""),s]})).then(Object.fromEntries),this.uses_chat_template_file?(0,n.getModelText)(t,s.CHAT_TEMPLATE_NAME,!0,r):null]);return new this(i,a,o)}}},"./src/configs.js":(t,r,i)=>{i.r(r),i.d(r,{AutoConfig:()=>u,PretrainedConfig:()=>l,getCacheShapes:()=>o});var s=i("./src/utils/core.js"),a=i("./src/utils/hub.js");async function n(t,r){return await (0,a.getModelJSON)(t,"config.json",!0,r)}function o(t,r){if("lfm2"===t.model_type){let i=r?.prefix??"past_key_values",s="present"===i?"present":"past",a={},{layer_types:n,num_attention_heads:o,num_key_value_heads:l,hidden_size:u,conv_L_cache:d}=t,c=u/o,p=r?.batch_size??1;for(let t=0;t<n.length;++t)if("full_attention"===n[t])for(let r of["key","value"])a[`${i}.${t}.${r}`]=[p,l,0,c];else if("conv"===n[t])a[`${s}_conv.${t}`]=[p,u,d];else throw Error(`Unsupported layer type: ${n[t]}`);return a}return function(t,{prefix:r="past_key_values",batch_size:i=1}={}){let s={},a=t.normalized_config;if(a.is_encoder_decoder&&"num_encoder_heads"in a&&"num_decoder_heads"in a){let t=a.encoder_dim_kv??a.encoder_hidden_size/a.num_encoder_heads,n=a.decoder_dim_kv??a.decoder_hidden_size/a.num_decoder_heads,o=[i,a.num_encoder_heads,0,t],l=[i,a.num_decoder_heads,0,n];for(let t=0;t<a.num_decoder_layers;++t)s[`${r}.${t}.encoder.key`]=o,s[`${r}.${t}.encoder.value`]=o,s[`${r}.${t}.decoder.key`]=l,s[`${r}.${t}.decoder.value`]=l}else{let t=a.num_heads,n=a.num_layers,o=a.dim_kv??a.hidden_size/(a.num_attention_heads??t);if("falcon"===a.model_type){let a=[i*t,0,o];for(let t=0;t<n;++t)s[`${r}.${t}.key`]=a,s[`${r}.${t}.value`]=a}else if(a.multi_query){let a=[i*t,0,2*o];for(let t=0;t<n;++t)s[`${r}.${t}.key_value`]=a}else if("bloom"===a.model_type){let a=[i*t,o,0],l=[i*t,0,o];for(let t=0;t<n;++t)s[`${r}.${t}.key`]=a,s[`${r}.${t}.value`]=l}else if("openelm"===a.model_type)for(let a=0;a<n;++a){let n=[i,t[a],0,o];s[`${r}.${a}.key`]=n,s[`${r}.${a}.value`]=n}else{let a=[i,t,0,o];for(let t=0;t<n;++t)s[`${r}.${t}.key`]=a,s[`${r}.${t}.value`]=a}}return s}(t,r)}class l{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(t){Object.assign(this,t),this.normalized_config=function t(r){let i={},a={};switch(r.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":a=t(r.text_config);break;case"moondream1":a=t(r.phi_config);break;case"musicgen":a=t(r.decoder);break;case"multi_modality":a=t(r.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":i.num_heads="n_head",i.num_layers="n_layer",i.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":i.num_heads="num_attention_heads",i.num_layers="num_hidden_layers",i.hidden_size="hidden_size";break;case"llama":case"llama4_text":case"nanochat":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"granitemoehybrid":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":i.num_heads="num_key_value_heads",i.num_layers="num_hidden_layers",i.hidden_size="hidden_size",i.num_attention_heads="num_attention_heads",i.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"vaultgemma":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":i.num_heads="num_key_value_heads",i.num_layers="num_hidden_layers",i.dim_kv="head_dim";break;case"openelm":i.num_heads="num_kv_heads",i.num_layers="num_transformer_layers",i.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":i.num_heads="num_heads",i.num_layers="num_layers",i.hidden_size="hidden_size";break;case"bloom":i.num_heads="n_head",i.num_layers="n_layer",i.hidden_size="hidden_size";break;case"mpt":i.num_heads="n_heads",i.num_layers="n_layers",i.hidden_size="d_model";break;case"exaone":i.num_heads="num_key_value_heads",i.num_layers="num_layers",i.dim_kv="head_dim",i.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":i.num_decoder_layers="num_decoder_layers",i.num_decoder_heads="num_heads",i.decoder_dim_kv="d_kv",i.num_encoder_layers="num_layers",i.num_encoder_heads="num_heads",i.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":i.num_decoder_layers="decoder_layers",i.num_decoder_heads="decoder_attention_heads",i.decoder_hidden_size="d_model",i.num_encoder_layers="encoder_layers",i.num_encoder_heads="encoder_attention_heads",i.encoder_hidden_size="d_model";break;case"speecht5":i.num_decoder_layers="decoder_layers",i.num_decoder_heads="decoder_attention_heads",i.decoder_hidden_size="hidden_size",i.num_encoder_layers="encoder_layers",i.num_encoder_heads="encoder_attention_heads",i.encoder_hidden_size="hidden_size";break;case"trocr":i.num_encoder_layers=i.num_decoder_layers="decoder_layers",i.num_encoder_heads=i.num_decoder_heads="decoder_attention_heads",i.encoder_hidden_size=i.decoder_hidden_size="d_model";break;case"musicgen_decoder":i.num_encoder_layers=i.num_decoder_layers="num_hidden_layers",i.num_encoder_heads=i.num_decoder_heads="num_attention_heads",i.encoder_hidden_size=i.decoder_hidden_size="hidden_size";break;case"moonshine":i.num_decoder_layers="decoder_num_hidden_layers",i.num_decoder_heads="decoder_num_key_value_heads",i.num_encoder_layers="encoder_num_hidden_layers",i.num_encoder_heads="encoder_num_key_value_heads",i.encoder_hidden_size=i.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":let n=t(r.decoder),o="num_decoder_layers"in n,l=(0,s.pick)(r,["model_type","is_encoder_decoder"]);return o?(l.num_decoder_layers=n.num_decoder_layers,l.num_decoder_heads=n.num_decoder_heads,l.decoder_hidden_size=n.decoder_hidden_size,l.num_encoder_layers=n.num_encoder_layers,l.num_encoder_heads=n.num_encoder_heads,l.encoder_hidden_size=n.encoder_hidden_size):(l.num_layers=n.num_layers,l.num_heads=n.num_heads,l.hidden_size=n.hidden_size),l}let u={...a,...(0,s.pick)(r,["model_type","multi_query","is_encoder_decoder"])};for(let t in i)u[t]=r[i[t]];return u}(this)}static async from_pretrained(t,{progress_callback:r=null,config:i=null,cache_dir:s=null,local_files_only:a=!1,revision:o="main"}={}){return!i||i instanceof l||(i=new l(i)),new this(i??await n(t,{progress_callback:r,config:i,cache_dir:s,local_files_only:a,revision:o}))}}class u{static async from_pretrained(...t){return l.from_pretrained(...t)}}},"./src/env.js":(t,r,i)=>{i.r(r),i.d(r,{apis:()=>_,env:()=>v});var s=i("?db59"),a=i("?383f"),n=i("?fa4b");let o="undefined"!=typeof window&&void 0!==window.document,l="undefined"!=typeof self&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),u="undefined"!=typeof self&&"caches"in self,d="undefined"!=typeof navigator&&"gpu"in navigator,c="undefined"!=typeof navigator&&"ml"in navigator,p=void 0!==S.default,h=p&&S.default?.release?.name==="node",m=!M(s),f=!M(a),g=void 0!==globalThis.Deno,_=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:d,IS_WEBNN_AVAILABLE:c,IS_PROCESS_AVAILABLE:p,IS_NODE_ENV:h,IS_FS_AVAILABLE:m,IS_PATH_AVAILABLE:f}),y=m&&f,b="./";if(y){let t=Object(oQ).url;b=t?a.dirname(a.dirname(n.fileURLToPath(t))):a.dirname("/ROOT/node_modules/@huggingface/transformers/dist")}let w=y?a.join(b,"/.cache/"):null,x="/models/",v={version:"3.7.6",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(o||l),localModelPath:y?a.join(b,x):x,useFS:m,useBrowserCache:u&&!g,useFSCache:m,cacheDir:w,useCustomCache:!1,customCache:null};function M(t){return 0===Object.keys(t).length}},"./src/generation/configuration_utils.js":(t,r,i)=>{i.r(r),i.d(r,{GenerationConfig:()=>a});var s=i("./src/utils/core.js");class a{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(t){Object.assign(this,(0,s.pick)(t,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(t,r,i)=>{i.r(r),i.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>y,ForcedBOSTokenLogitsProcessor:()=>u,ForcedEOSTokenLogitsProcessor:()=>d,LogitsProcessor:()=>n,LogitsProcessorList:()=>l,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>g,NoBadWordsLogitsProcessor:()=>_,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>m,SuppressTokensAtBeginLogitsProcessor:()=>c,TemperatureLogitsWarper:()=>b,TopKLogitsWarper:()=>x,TopPLogitsWarper:()=>w,WhisperTimeStampLogitsProcessor:()=>p});var s=i("./src/utils/generic.js");i("./src/utils/tensor.js");var a=i("./src/utils/maths.js");class n extends s.Callable{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class l extends s.Callable{constructor(){super(),this.processors=[]}push(t){this.processors.push(t)}extend(t){this.processors.push(...t)}_call(t,r){let i=r;for(let r of this.processors)i=r(t,i);return i}[Symbol.iterator](){return this.processors.values()}}class u extends n{constructor(t){super(),this.bos_token_id=t}_call(t,r){for(let i=0;i<t.length;++i)if(1===t[i].length){let t=r[i].data;t.fill(-1/0),t[this.bos_token_id]=0}return r}}class d extends n{constructor(t,r){super(),this.max_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let i=0;i<t.length;++i)if(t[i].length===this.max_length-1){let t=r[i].data;for(let r of(t.fill(-1/0),this.eos_token_id))t[r]=0}return r}}class c extends n{constructor(t,r){super(),this.begin_suppress_tokens=t,this.begin_index=r}_call(t,r){for(let i=0;i<t.length;++i)if(t[i].length===this.begin_index){let t=r[i].data;for(let r of this.begin_suppress_tokens)t[r]=-1/0}return r}}class p extends n{constructor(t,r){super(),this.eos_token_id=Array.isArray(t.eos_token_id)?t.eos_token_id[0]:t.eos_token_id,this.no_timestamps_token_id=t.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=t.max_initial_timestamp_index}_call(t,r){for(let i=0;i<t.length;++i){let s=r[i].data;if(s[this.no_timestamps_token_id]=-1/0,t[i].length===this.begin_index-1){s.fill(-1/0),s[this.timestamp_begin]=0;continue}let n=t[i].slice(this.begin_index),o=n.length>=1&&n[n.length-1]>=this.timestamp_begin,l=n.length<2||n[n.length-2]>=this.timestamp_begin;if(o&&(l?s.subarray(this.timestamp_begin).fill(-1/0):s.subarray(0,this.eos_token_id).fill(-1/0)),t[i].length===this.begin_index&&null!==this.max_initial_timestamp_index){let t=this.timestamp_begin+this.max_initial_timestamp_index;s.subarray(t+1).fill(-1/0)}let u=(0,a.log_softmax)(s);Math.log(u.subarray(this.timestamp_begin).map(Math.exp).reduce((t,r)=>t+r))>(0,a.max)(u.subarray(0,this.timestamp_begin))[0]&&s.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class h extends n{constructor(t){super(),this.no_repeat_ngram_size=t}getNgrams(t){let r=t.length,i=[];for(let s=0;s<r+1-this.no_repeat_ngram_size;++s){let r=[];for(let i=0;i<this.no_repeat_ngram_size;++i)r.push(t[s+i]);i.push(r.map(Number))}let s=new Map;for(let t of i){let r=JSON.stringify(t.slice(0,t.length-1)),i=s.get(r)??[];i.push(t[t.length-1]),s.set(r,i)}return s}getGeneratedNgrams(t,r){let i=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return t.get(JSON.stringify(i.map(Number)))??[]}calcBannedNgramTokens(t){if(t.length+1<this.no_repeat_ngram_size)return[];{let r=this.getNgrams(t);return this.getGeneratedNgrams(r,t)}}_call(t,r){for(let i=0;i<t.length;++i){let s=r[i].data;for(let r of this.calcBannedNgramTokens(t[i]))s[r]=-1/0}return r}}class m extends n{constructor(t){super(),this.penalty=t}_call(t,r){for(let i=0;i<t.length;++i){let s=r[i].data;for(let r of new Set(t[i])){let t=Number(r);s[t]<0?s[t]*=this.penalty:s[t]/=this.penalty}}return r}}class f extends n{constructor(t,r){super(),this.min_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let i=0;i<t.length;++i)if(t[i].length<this.min_length){let t=r[i].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class g extends n{constructor(t,r,i){super(),this.prompt_length_to_skip=t,this.min_new_tokens=r,this.eos_token_id=Array.isArray(i)?i:[i]}_call(t,r){for(let i=0;i<t.length;++i)if(t[i].length-this.prompt_length_to_skip<this.min_new_tokens){let t=r[i].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class _ extends n{constructor(t,r){super(),this.bad_words_ids=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let i=0;i<t.length;++i){let s=r[i].data,a=t[i];for(let t of this.bad_words_ids){if(a.length<t.length-1)continue;let r=!0;for(let i=1;i<=t.length-1;++i)if(t.at(-i-1)!=a.at(-i)){r=!1;break}r&&(s[t.at(-1)]=-1/0)}}return r}}class y extends n{constructor(t){if(super(),t<=1)throw Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${t}.`);this.guidance_scale=t}_call(t,r){if(r.dims[0]!==2*t.length)throw Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${t.length} for the input ids.`);let i=t.length,s=r.slice([0,i],null),a=r.slice([i,r.dims[0]],null);for(let t=0;t<a.data.length;++t)a.data[t]+=(s.data[t]-a.data[t])*this.guidance_scale;return a}}class b extends o{constructor(t){super(),"number"!=typeof t||t<=0,this.temperature=t}_call(t,r){let i=r.data;for(let t=0;t<i.length;++t)i[t]/=this.temperature;return r}}class w extends o{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:i=1}={}){if(super(),t<0||t>1)throw Error(`\`top_p\` must be a float > 0 and < 1, but is ${t}`);if(!Number.isInteger(i)||i<1)throw Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${i}`);this.top_p=t,this.filter_value=r,this.min_tokens_to_keep=i}}class x extends o{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:i=1}={}){if(super(),!Number.isInteger(t)||t<0)throw Error(`\`top_k\` must be a positive integer, but is ${t}`);this.top_k=Math.max(t,i),this.filter_value=r}}},"./src/generation/logits_sampler.js":(t,r,i)=>{i.r(r),i.d(r,{LogitsSampler:()=>o});var s=i("./src/utils/generic.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/maths.js");i("./src/generation/configuration_utils.js");class o extends s.Callable{constructor(t){super(),this.generation_config=t}async _call(t){return this.sample(t)}async sample(t){throw Error("sample should be implemented in subclasses.")}getLogits(t,r){let i=t.dims.at(-1),s=t.data;if(-1===r)s=s.slice(-i);else{let t=r*i;s=s.slice(t,t+i)}return s}randomSelect(t){let r=0;for(let i=0;i<t.length;++i)r+=t[i];let i=Math.random()*r;for(let r=0;r<t.length;++r)if((i-=t[r])<=0)return r;return 0}static getSampler(t){if(t.do_sample)return new u(t);if(t.num_beams>1)return new d(t);if(t.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${t.num_return_sequences}.`);return new l(t)}}class l extends o{async sample(t){return[[BigInt((0,n.max)(t.data)[1]),0]]}}class u extends o{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[i,s]=await (0,a.topk)(t,r),o=(0,n.softmax)(i.data);return Array.from({length:this.generation_config.num_beams},()=>{let t=this.randomSelect(o);return[s.data[t],Math.log(o[t])]})}}class d extends o{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[i,s]=await (0,a.topk)(t,r),o=(0,n.softmax)(i.data);return Array.from({length:this.generation_config.num_beams},(t,r)=>[s.data[r],Math.log(o[r])])}}},"./src/generation/stopping_criteria.js":(t,r,i)=>{i.r(r),i.d(r,{EosTokenCriteria:()=>l,InterruptableStoppingCriteria:()=>u,MaxLengthCriteria:()=>o,StoppingCriteria:()=>a,StoppingCriteriaList:()=>n});var s=i("./src/utils/generic.js");class a extends s.Callable{_call(t,r){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(t){this.criteria.push(t)}extend(t){t instanceof n?t=t.criteria:t instanceof a&&(t=[t]),this.criteria.push(...t)}_call(t,r){let i=Array(t.length).fill(!1);for(let s of this.criteria){let a=s(t,r);for(let t=0;t<i.length;++t)i[t]||=a[t]}return i}[Symbol.iterator](){return this.criteria.values()}}class o extends a{constructor(t,r=null){super(),this.max_length=t,this.max_position_embeddings=r}_call(t){return t.map(t=>t.length>=this.max_length)}}class l extends a{constructor(t){super(),Array.isArray(t)||(t=[t]),this.eos_token_id=t}_call(t,r){return t.map(t=>{let r=t.at(-1);return this.eos_token_id.some(t=>r==t)})}}class u extends a{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(t,r){return Array(t.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(t,r,i)=>{i.r(r),i.d(r,{BaseStreamer:()=>o,TextStreamer:()=>u,WhisperTextStreamer:()=>d});var s=i("./src/utils/core.js"),a=i("./src/tokenizers.js"),n=i("./src/env.js");class o{put(t){throw Error("Not implemented")}end(){throw Error("Not implemented")}}let l=n.apis.IS_PROCESS_AVAILABLE?t=>S.default.stdout.write(t):t=>console.log(t);class u extends o{constructor(t,{skip_prompt:r=!1,callback_function:i=null,token_callback_function:s=null,skip_special_tokens:a=!0,decode_kwargs:n={},...o}={}){super(),this.tokenizer=t,this.skip_prompt=r,this.callback_function=i??l,this.token_callback_function=s,this.decode_kwargs={skip_special_tokens:a,...n,...o},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(t){let r;if(t.length>1)throw Error("TextStreamer only supports batch size of 1");let i=this.next_tokens_are_prompt;if(i&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;let n=t[0];this.token_callback_function?.(n),this.token_cache=(0,s.mergeArrays)(this.token_cache,n);let o=this.tokenizer.decode(this.token_cache,this.decode_kwargs);i||o.endsWith("\n")?(r=o.slice(this.print_len),this.token_cache=[],this.print_len=0):(r=o.length>0&&(0,a.is_chinese_char)(o.charCodeAt(o.length-1))?o.slice(this.print_len):o.slice(this.print_len,o.lastIndexOf(" ")+1),this.print_len+=r.length),this.on_finalized_text(r,!1)}end(){let t;this.token_cache.length>0?(t=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):t="",this.next_tokens_are_prompt=!0,this.on_finalized_text(t,!0)}on_finalized_text(t,r){t.length>0&&this.callback_function?.(t),r&&this.callback_function===l&&n.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class d extends u{constructor(t,{skip_prompt:r=!1,callback_function:i=null,token_callback_function:s=null,on_chunk_start:a=null,on_chunk_end:n=null,on_finalize:o=null,time_precision:l=.02,skip_special_tokens:u=!0,decode_kwargs:d={}}={}){super(t,{skip_prompt:r,skip_special_tokens:u,callback_function:i,token_callback_function:s,decode_kwargs:d}),this.timestamp_begin=t.timestamp_begin,this.on_chunk_start=a,this.on_chunk_end=n,this.on_finalize=o,this.time_precision=l,this.waiting_for_timestamp=!1}put(t){if(t.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");let r=t[0];if(1===r.length){let t=Number(r[0])-this.timestamp_begin;if(t>=0){let i=t*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(i):this.on_chunk_start?.(i),this.waiting_for_timestamp=!this.waiting_for_timestamp,this.token_callback_function?.(r);return}}return super.put(t)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(t,r,i)=>{i.r(r),i.d(r,{ASTForAudioClassification:()=>re,ASTModel:()=>t7,ASTPreTrainedModel:()=>t9,AlbertForMaskedLM:()=>tb,AlbertForQuestionAnswering:()=>ty,AlbertForSequenceClassification:()=>t_,AlbertModel:()=>tg,AlbertPreTrainedModel:()=>tf,ArceeForCausalLM:()=>ip,ArceeModel:()=>ic,ArceePreTrainedModel:()=>id,AutoModel:()=>l5,AutoModelForAudioClassification:()=>ug,AutoModelForAudioFrameClassification:()=>uy,AutoModelForAudioTextToText:()=>uC,AutoModelForCTC:()=>uf,AutoModelForCausalLM:()=>us,AutoModelForDepthEstimation:()=>uv,AutoModelForDocumentQuestionAnswering:()=>ub,AutoModelForImageClassification:()=>ul,AutoModelForImageFeatureExtraction:()=>uk,AutoModelForImageMatting:()=>uw,AutoModelForImageSegmentation:()=>uu,AutoModelForImageTextToText:()=>u$,AutoModelForImageToImage:()=>ux,AutoModelForMaskGeneration:()=>um,AutoModelForMaskedLM:()=>ua,AutoModelForNormalEstimation:()=>uM,AutoModelForObjectDetection:()=>up,AutoModelForPoseEstimation:()=>uT,AutoModelForQuestionAnswering:()=>un,AutoModelForSemanticSegmentation:()=>ud,AutoModelForSeq2SeqLM:()=>ue,AutoModelForSequenceClassification:()=>l9,AutoModelForSpeechSeq2Seq:()=>ut,AutoModelForTextToSpectrogram:()=>ur,AutoModelForTextToWaveform:()=>ui,AutoModelForTokenClassification:()=>l7,AutoModelForUniversalSegmentation:()=>uc,AutoModelForVision2Seq:()=>uo,AutoModelForXVector:()=>u_,AutoModelForZeroShotObjectDetection:()=>uh,BartForConditionalGeneration:()=>tF,BartForSequenceClassification:()=>tA,BartModel:()=>tE,BartPretrainedModel:()=>tP,BaseModelOutput:()=>H,BeitForImageClassification:()=>s4,BeitModel:()=>s3,BeitPreTrainedModel:()=>s2,BertForMaskedLM:()=>X,BertForQuestionAnswering:()=>Z,BertForSequenceClassification:()=>J,BertForTokenClassification:()=>Y,BertModel:()=>Q,BertPreTrainedModel:()=>K,BlenderbotForConditionalGeneration:()=>tj,BlenderbotModel:()=>tN,BlenderbotPreTrainedModel:()=>tD,BlenderbotSmallForConditionalGeneration:()=>tG,BlenderbotSmallModel:()=>tV,BlenderbotSmallPreTrainedModel:()=>tR,BloomForCausalLM:()=>sm,BloomModel:()=>sh,BloomPreTrainedModel:()=>sp,CLIPModel:()=>r$,CLIPPreTrainedModel:()=>rk,CLIPSegForImageSegmentation:()=>rG,CLIPSegModel:()=>rV,CLIPSegPreTrainedModel:()=>rR,CLIPTextModel:()=>rC,CLIPTextModelWithProjection:()=>rS,CLIPVisionModel:()=>rP,CLIPVisionModelWithProjection:()=>rE,CamembertForMaskedLM:()=>eO,CamembertForQuestionAnswering:()=>eN,CamembertForSequenceClassification:()=>eB,CamembertForTokenClassification:()=>eD,CamembertModel:()=>eL,CamembertPreTrainedModel:()=>ez,CausalLMOutput:()=>uz,CausalLMOutputWithPast:()=>uL,ChineseCLIPModel:()=>rO,ChineseCLIPPreTrainedModel:()=>rL,ClapAudioModelWithProjection:()=>ox,ClapModel:()=>ob,ClapPreTrainedModel:()=>oy,ClapTextModelWithProjection:()=>ow,CodeGenForCausalLM:()=>ie,CodeGenModel:()=>r7,CodeGenPreTrainedModel:()=>r9,CohereForCausalLM:()=>iW,CohereModel:()=>iq,CoherePreTrainedModel:()=>iU,ConvBertForMaskedLM:()=>eT,ConvBertForQuestionAnswering:()=>eC,ConvBertForSequenceClassification:()=>ek,ConvBertForTokenClassification:()=>e$,ConvBertModel:()=>eM,ConvBertPreTrainedModel:()=>ev,ConvNextForImageClassification:()=>a5,ConvNextModel:()=>a6,ConvNextPreTrainedModel:()=>a8,ConvNextV2ForImageClassification:()=>ne,ConvNextV2Model:()=>a7,ConvNextV2PreTrainedModel:()=>a9,DFineForObjectDetection:()=>af,DFineModel:()=>am,DFinePreTrainedModel:()=>ah,DINOv3ConvNextModel:()=>nd,DINOv3ConvNextPreTrainedModel:()=>nu,DINOv3ViTModel:()=>nl,DINOv3ViTPreTrainedModel:()=>no,DPTForDepthEstimation:()=>aD,DPTModel:()=>aB,DPTPreTrainedModel:()=>aO,DacDecoderModel:()=>l_,DacDecoderOutput:()=>lm,DacEncoderModel:()=>lg,DacEncoderOutput:()=>lh,DacModel:()=>lf,DacPreTrainedModel:()=>lp,DebertaForMaskedLM:()=>eV,DebertaForQuestionAnswering:()=>eq,DebertaForSequenceClassification:()=>eG,DebertaForTokenClassification:()=>eU,DebertaModel:()=>eR,DebertaPreTrainedModel:()=>ej,DebertaV2ForMaskedLM:()=>eK,DebertaV2ForQuestionAnswering:()=>eJ,DebertaV2ForSequenceClassification:()=>eQ,DebertaV2ForTokenClassification:()=>eX,DebertaV2Model:()=>eH,DebertaV2PreTrainedModel:()=>eW,DecisionTransformerModel:()=>o1,DecisionTransformerPreTrainedModel:()=>o0,DeiTForImageClassification:()=>av,DeiTModel:()=>ax,DeiTPreTrainedModel:()=>aw,DepthAnythingForDepthEstimation:()=>aj,DepthAnythingPreTrainedModel:()=>aN,DepthProForDepthEstimation:()=>aW,DepthProPreTrainedModel:()=>aq,DetrForObjectDetection:()=>s5,DetrForSegmentation:()=>s9,DetrModel:()=>s6,DetrObjectDetectionOutput:()=>s7,DetrPreTrainedModel:()=>s8,DetrSegmentationOutput:()=>ae,Dinov2ForImageClassification:()=>ni,Dinov2Model:()=>nr,Dinov2PreTrainedModel:()=>nt,Dinov2WithRegistersForImageClassification:()=>nn,Dinov2WithRegistersModel:()=>na,Dinov2WithRegistersPreTrainedModel:()=>ns,DistilBertForMaskedLM:()=>e3,DistilBertForQuestionAnswering:()=>e2,DistilBertForSequenceClassification:()=>e0,DistilBertForTokenClassification:()=>e1,DistilBertModel:()=>eZ,DistilBertPreTrainedModel:()=>eY,DonutSwinModel:()=>a4,DonutSwinPreTrainedModel:()=>a3,EfficientNetForImageClassification:()=>oI,EfficientNetModel:()=>oA,EfficientNetPreTrainedModel:()=>oF,ElectraForMaskedLM:()=>eE,ElectraForQuestionAnswering:()=>eI,ElectraForSequenceClassification:()=>eF,ElectraForTokenClassification:()=>eA,ElectraModel:()=>eP,ElectraPreTrainedModel:()=>eS,Ernie4_5_ForCausalLM:()=>oc,Ernie4_5_Model:()=>od,Ernie4_5_PretrainedModel:()=>ou,EsmForMaskedLM:()=>e6,EsmForSequenceClassification:()=>e5,EsmForTokenClassification:()=>e9,EsmModel:()=>e8,EsmPreTrainedModel:()=>e4,ExaoneForCausalLM:()=>iS,ExaoneModel:()=>iC,ExaonePreTrainedModel:()=>i$,FalconForCausalLM:()=>o_,FalconModel:()=>og,FalconPreTrainedModel:()=>of,FastViTForImageClassification:()=>sR,FastViTModel:()=>sj,FastViTPreTrainedModel:()=>sN,Florence2ForConditionalGeneration:()=>rm,Florence2PreTrainedModel:()=>rh,GLPNForDepthEstimation:()=>a2,GLPNModel:()=>a1,GLPNPreTrainedModel:()=>a0,GPT2LMHeadModel:()=>rW,GPT2Model:()=>rq,GPT2PreTrainedModel:()=>rU,GPTBigCodeForCausalLM:()=>r5,GPTBigCodeModel:()=>r6,GPTBigCodePreTrainedModel:()=>r8,GPTJForCausalLM:()=>r4,GPTJModel:()=>r3,GPTJPreTrainedModel:()=>r2,GPTNeoForCausalLM:()=>rY,GPTNeoModel:()=>rJ,GPTNeoPreTrainedModel:()=>rX,GPTNeoXForCausalLM:()=>r1,GPTNeoXModel:()=>r0,GPTNeoXPreTrainedModel:()=>rZ,Gemma2ForCausalLM:()=>iY,Gemma2Model:()=>iJ,Gemma2PreTrainedModel:()=>iX,Gemma3ForCausalLM:()=>i4,Gemma3Model:()=>i3,Gemma3PreTrainedModel:()=>i2,Gemma3nForConditionalGeneration:()=>rb,Gemma3nPreTrainedModel:()=>ry,GemmaForCausalLM:()=>iQ,GemmaModel:()=>iK,GemmaPreTrainedModel:()=>iH,GlmForCausalLM:()=>ik,GlmModel:()=>iT,GlmPreTrainedModel:()=>iM,GraniteForCausalLM:()=>ij,GraniteModel:()=>iN,GraniteMoeHybridForCausalLM:()=>iG,GraniteMoeHybridModel:()=>iV,GraniteMoeHybridPreTrainedModel:()=>iR,GranitePreTrainedModel:()=>iD,GroundingDinoForObjectDetection:()=>np,GroundingDinoPreTrainedModel:()=>nc,GroupViTModel:()=>sD,GroupViTPreTrainedModel:()=>sB,HeliumForCausalLM:()=>iv,HeliumModel:()=>ix,HeliumPreTrainedModel:()=>iw,HieraForImageClassification:()=>ak,HieraModel:()=>aT,HieraPreTrainedModel:()=>aM,HubertForCTC:()=>nZ,HubertForSequenceClassification:()=>n0,HubertModel:()=>nY,HubertPreTrainedModel:()=>nJ,IJepaForImageClassification:()=>s$,IJepaModel:()=>sk,IJepaPreTrainedModel:()=>sT,Idefics3ForConditionalGeneration:()=>rx,Idefics3PreTrainedModel:()=>rw,ImageMattingOutput:()=>uO,JAISLMHeadModel:()=>rQ,JAISModel:()=>rK,JAISPreTrainedModel:()=>rH,JinaCLIPModel:()=>rD,JinaCLIPPreTrainedModel:()=>rB,JinaCLIPTextModel:()=>rN,JinaCLIPVisionModel:()=>rj,Lfm2ForCausalLM:()=>ig,Lfm2Model:()=>im,Lfm2PreTrainedModel:()=>ih,LiteWhisperForConditionalGeneration:()=>rs,Llama4ForCausalLM:()=>ia,Llama4PreTrainedModel:()=>is,LlamaForCausalLM:()=>ii,LlamaModel:()=>ir,LlamaPreTrainedModel:()=>it,LlavaForConditionalGeneration:()=>rd,LlavaOnevisionForConditionalGeneration:()=>rc,LlavaPreTrainedModel:()=>ru,LlavaQwen2ForCausalLM:()=>r_,LongT5ForConditionalGeneration:()=>tk,LongT5Model:()=>tT,LongT5PreTrainedModel:()=>tM,M2M100ForConditionalGeneration:()=>nk,M2M100Model:()=>nT,M2M100PreTrainedModel:()=>nM,MBartForCausalLM:()=>tB,MBartForConditionalGeneration:()=>tL,MBartForSequenceClassification:()=>tO,MBartModel:()=>tz,MBartPreTrainedModel:()=>tI,MPNetForMaskedLM:()=>tn,MPNetForQuestionAnswering:()=>tu,MPNetForSequenceClassification:()=>to,MPNetForTokenClassification:()=>tl,MPNetModel:()=>ta,MPNetPreTrainedModel:()=>ts,MT5ForConditionalGeneration:()=>tS,MT5Model:()=>tC,MT5PreTrainedModel:()=>t$,MarianMTModel:()=>nv,MarianModel:()=>nx,MarianPreTrainedModel:()=>nw,MaskFormerForInstanceSegmentation:()=>aZ,MaskFormerModel:()=>aY,MaskFormerPreTrainedModel:()=>aJ,MaskedLMOutput:()=>uA,Metric3DForDepthEstimation:()=>aK,Metric3DPreTrainedModel:()=>aH,Metric3Dv2ForDepthEstimation:()=>aX,Metric3Dv2PreTrainedModel:()=>aQ,MgpstrForSceneTextRecognition:()=>o6,MgpstrModelOutput:()=>o4,MgpstrPreTrainedModel:()=>o8,MimiDecoderModel:()=>lc,MimiDecoderOutput:()=>ll,MimiEncoderModel:()=>ld,MimiEncoderOutput:()=>lo,MimiModel:()=>lu,MimiPreTrainedModel:()=>ln,MistralForCausalLM:()=>ol,MistralModel:()=>oo,MistralPreTrainedModel:()=>on,MobileBertForMaskedLM:()=>tt,MobileBertForQuestionAnswering:()=>ti,MobileBertForSequenceClassification:()=>tr,MobileBertModel:()=>te,MobileBertPreTrainedModel:()=>e7,MobileLLMForCausalLM:()=>iF,MobileLLMModel:()=>iE,MobileLLMPreTrainedModel:()=>iP,MobileNetV1ForImageClassification:()=>oj,MobileNetV1ForSemanticSegmentation:()=>oR,MobileNetV1Model:()=>oN,MobileNetV1PreTrainedModel:()=>oD,MobileNetV2ForImageClassification:()=>oU,MobileNetV2ForSemanticSegmentation:()=>oq,MobileNetV2Model:()=>oG,MobileNetV2PreTrainedModel:()=>oV,MobileNetV3ForImageClassification:()=>oK,MobileNetV3ForSemanticSegmentation:()=>oQ,MobileNetV3Model:()=>oH,MobileNetV3PreTrainedModel:()=>oW,MobileNetV4ForImageClassification:()=>oY,MobileNetV4ForSemanticSegmentation:()=>oZ,MobileNetV4Model:()=>oJ,MobileNetV4PreTrainedModel:()=>oX,MobileViTForImageClassification:()=>sW,MobileViTModel:()=>sq,MobileViTPreTrainedModel:()=>sU,MobileViTV2ForImageClassification:()=>sQ,MobileViTV2Model:()=>sK,MobileViTV2PreTrainedModel:()=>sH,ModelOutput:()=>W,ModernBertDecoderForCausalLM:()=>eh,ModernBertDecoderModel:()=>ep,ModernBertDecoderPreTrainedModel:()=>ec,ModernBertForMaskedLM:()=>el,ModernBertForSequenceClassification:()=>eu,ModernBertForTokenClassification:()=>ed,ModernBertModel:()=>eo,ModernBertPreTrainedModel:()=>en,Moondream1ForConditionalGeneration:()=>rp,MoonshineForConditionalGeneration:()=>ro,MoonshineModel:()=>rn,MoonshinePreTrainedModel:()=>ra,MptForCausalLM:()=>s_,MptModel:()=>sg,MptPreTrainedModel:()=>sf,MultiModalityCausalLM:()=>o3,MultiModalityPreTrainedModel:()=>o2,MusicgenForCausalLM:()=>oO,MusicgenForConditionalGeneration:()=>oB,MusicgenModel:()=>oL,MusicgenPreTrainedModel:()=>oz,NanoChatForCausalLM:()=>iu,NanoChatModel:()=>il,NanoChatPreTrainedModel:()=>io,NeoBertForMaskedLM:()=>er,NeoBertForQuestionAnswering:()=>ea,NeoBertForSequenceClassification:()=>ei,NeoBertForTokenClassification:()=>es,NeoBertModel:()=>et,NeoBertPreTrainedModel:()=>ee,NomicBertModel:()=>ef,NomicBertPreTrainedModel:()=>em,OPTForCausalLM:()=>sw,OPTModel:()=>sb,OPTPreTrainedModel:()=>sy,Olmo2ForCausalLM:()=>iB,Olmo2Model:()=>iO,Olmo2PreTrainedModel:()=>iL,OlmoForCausalLM:()=>iz,OlmoModel:()=>iI,OlmoPreTrainedModel:()=>iA,OpenELMForCausalLM:()=>i5,OpenELMModel:()=>i6,OpenELMPreTrainedModel:()=>i8,OwlViTForObjectDetection:()=>sY,OwlViTModel:()=>sJ,OwlViTPreTrainedModel:()=>sX,Owlv2ForObjectDetection:()=>s1,Owlv2Model:()=>s0,Owlv2PreTrainedModel:()=>sZ,PaliGemmaForConditionalGeneration:()=>rg,PaliGemmaPreTrainedModel:()=>rf,ParakeetForCTC:()=>nA,ParakeetPreTrainedModel:()=>nF,PatchTSMixerForPrediction:()=>lr,PatchTSMixerModel:()=>lt,PatchTSMixerPreTrainedModel:()=>le,PatchTSTForPrediction:()=>o7,PatchTSTModel:()=>o9,PatchTSTPreTrainedModel:()=>o5,Phi3ForCausalLM:()=>sc,Phi3Model:()=>sd,Phi3PreTrainedModel:()=>su,Phi3VForCausalLM:()=>rT,Phi3VPreTrainedModel:()=>rM,PhiForCausalLM:()=>sl,PhiModel:()=>so,PhiPreTrainedModel:()=>sn,PreTrainedModel:()=>q,PretrainedMixin:()=>lv,PvtForImageClassification:()=>sF,PvtModel:()=>sE,PvtPreTrainedModel:()=>sP,PyAnnoteForAudioFrameClassification:()=>nL,PyAnnoteModel:()=>nz,PyAnnotePreTrainedModel:()=>nI,QuestionAnsweringModelOutput:()=>uI,Qwen2ForCausalLM:()=>se,Qwen2Model:()=>i7,Qwen2PreTrainedModel:()=>i9,Qwen2VLForConditionalGeneration:()=>sa,Qwen2VLPreTrainedModel:()=>ss,Qwen3ForCausalLM:()=>si,Qwen3Model:()=>sr,Qwen3PreTrainedModel:()=>st,RFDetrForObjectDetection:()=>ac,RFDetrModel:()=>ad,RFDetrObjectDetectionOutput:()=>ap,RFDetrPreTrainedModel:()=>au,RTDetrForObjectDetection:()=>ai,RTDetrModel:()=>ar,RTDetrObjectDetectionOutput:()=>as,RTDetrPreTrainedModel:()=>at,RTDetrV2ForObjectDetection:()=>ao,RTDetrV2Model:()=>an,RTDetrV2ObjectDetectionOutput:()=>al,RTDetrV2PreTrainedModel:()=>aa,ResNetForImageClassification:()=>aS,ResNetModel:()=>aC,ResNetPreTrainedModel:()=>a$,RoFormerForMaskedLM:()=>ey,RoFormerForQuestionAnswering:()=>ex,RoFormerForSequenceClassification:()=>eb,RoFormerForTokenClassification:()=>ew,RoFormerModel:()=>e_,RoFormerPreTrainedModel:()=>eg,RobertaForMaskedLM:()=>tW,RobertaForQuestionAnswering:()=>tQ,RobertaForSequenceClassification:()=>tH,RobertaForTokenClassification:()=>tK,RobertaModel:()=>tq,RobertaPreTrainedModel:()=>tU,SamImageSegmentationOutput:()=>nb,SamModel:()=>ny,SamPreTrainedModel:()=>n_,SapiensForDepthEstimation:()=>aG,SapiensForNormalEstimation:()=>aU,SapiensForSemanticSegmentation:()=>aV,SapiensPreTrainedModel:()=>aR,SegformerForImageClassification:()=>o$,SegformerForSemanticSegmentation:()=>oC,SegformerModel:()=>ok,SegformerPreTrainedModel:()=>oT,Seq2SeqLMOutput:()=>uS,SequenceClassifierOutput:()=>uP,SiglipModel:()=>rA,SiglipPreTrainedModel:()=>rF,SiglipTextModel:()=>rI,SiglipVisionModel:()=>rz,SmolLM3ForCausalLM:()=>ib,SmolLM3Model:()=>iy,SmolLM3PreTrainedModel:()=>i_,SmolVLMForConditionalGeneration:()=>rv,SnacDecoderModel:()=>lx,SnacEncoderModel:()=>lw,SnacModel:()=>lb,SnacPreTrainedModel:()=>ly,SpeechT5ForSpeechToText:()=>ot,SpeechT5ForTextToSpeech:()=>or,SpeechT5HifiGan:()=>oi,SpeechT5Model:()=>oe,SpeechT5PreTrainedModel:()=>n7,SqueezeBertForMaskedLM:()=>tp,SqueezeBertForQuestionAnswering:()=>tm,SqueezeBertForSequenceClassification:()=>th,SqueezeBertModel:()=>tc,SqueezeBertPreTrainedModel:()=>td,StableLmForCausalLM:()=>oE,StableLmModel:()=>oP,StableLmPreTrainedModel:()=>oS,Starcoder2ForCausalLM:()=>om,Starcoder2Model:()=>oh,Starcoder2PreTrainedModel:()=>op,StyleTextToSpeech2Model:()=>n9,StyleTextToSpeech2PreTrainedModel:()=>n5,Swin2SRForImageSuperResolution:()=>aL,Swin2SRModel:()=>az,Swin2SRPreTrainedModel:()=>aI,SwinForImageClassification:()=>aF,SwinForSemanticSegmentation:()=>aA,SwinModel:()=>aE,SwinPreTrainedModel:()=>aP,T5ForConditionalGeneration:()=>tv,T5Model:()=>tx,T5PreTrainedModel:()=>tw,TableTransformerForObjectDetection:()=>ay,TableTransformerModel:()=>a_,TableTransformerObjectDetectionOutput:()=>ab,TableTransformerPreTrainedModel:()=>ag,TokenClassifierOutput:()=>uF,TrOCRForCausalLM:()=>oa,TrOCRPreTrainedModel:()=>os,UltravoxModel:()=>ls,UltravoxPreTrainedModel:()=>li,UniSpeechForCTC:()=>nj,UniSpeechForSequenceClassification:()=>nR,UniSpeechModel:()=>nN,UniSpeechPreTrainedModel:()=>nD,UniSpeechSatForAudioFrameClassification:()=>nW,UniSpeechSatForCTC:()=>nU,UniSpeechSatForSequenceClassification:()=>nq,UniSpeechSatModel:()=>nG,UniSpeechSatPreTrainedModel:()=>nV,VaultGemmaForCausalLM:()=>i1,VaultGemmaModel:()=>i0,VaultGemmaPreTrainedModel:()=>iZ,ViTForImageClassification:()=>sM,ViTMAEModel:()=>sI,ViTMAEPreTrainedModel:()=>sA,ViTMSNForImageClassification:()=>sO,ViTMSNModel:()=>sL,ViTMSNPreTrainedModel:()=>sz,ViTModel:()=>sv,ViTPreTrainedModel:()=>sx,VisionEncoderDecoderModel:()=>rl,VitMatteForImageMatting:()=>sG,VitMattePreTrainedModel:()=>sV,VitPoseForPoseEstimation:()=>sS,VitPosePreTrainedModel:()=>sC,VitsModel:()=>oM,VitsModelOutput:()=>uB,VitsPreTrainedModel:()=>ov,VoxtralForConditionalGeneration:()=>la,Wav2Vec2BertForCTC:()=>nQ,Wav2Vec2BertForSequenceClassification:()=>nX,Wav2Vec2BertModel:()=>nK,Wav2Vec2BertPreTrainedModel:()=>nH,Wav2Vec2ForAudioFrameClassification:()=>nE,Wav2Vec2ForCTC:()=>nS,Wav2Vec2ForSequenceClassification:()=>nP,Wav2Vec2Model:()=>nC,Wav2Vec2PreTrainedModel:()=>n$,WavLMForAudioFrameClassification:()=>n6,WavLMForCTC:()=>n3,WavLMForSequenceClassification:()=>n4,WavLMForXVector:()=>n8,WavLMModel:()=>n2,WavLMPreTrainedModel:()=>n1,WeSpeakerResNetModel:()=>nB,WeSpeakerResNetPreTrainedModel:()=>nO,WhisperForConditionalGeneration:()=>ri,WhisperModel:()=>rr,WhisperPreTrainedModel:()=>rt,XLMForQuestionAnswering:()=>t1,XLMForSequenceClassification:()=>tZ,XLMForTokenClassification:()=>t0,XLMModel:()=>tJ,XLMPreTrainedModel:()=>tX,XLMRobertaForMaskedLM:()=>t4,XLMRobertaForQuestionAnswering:()=>t5,XLMRobertaForSequenceClassification:()=>t8,XLMRobertaForTokenClassification:()=>t6,XLMRobertaModel:()=>t3,XLMRobertaPreTrainedModel:()=>t2,XLMWithLMHeadModel:()=>tY,XVectorOutput:()=>uE,YolosForObjectDetection:()=>nf,YolosModel:()=>nm,YolosObjectDetectionOutput:()=>ng,YolosPreTrainedModel:()=>nh});var s=i("./src/configs.js"),a=i("./src/backends/onnx.js"),n=i("./src/utils/dtypes.js"),o=i("./src/utils/generic.js"),l=i("./src/utils/core.js"),u=i("./src/utils/hub.js"),d=i("./src/utils/constants.js"),c=i("./src/generation/logits_process.js"),p=i("./src/generation/configuration_utils.js"),h=i("./src/utils/tensor.js"),m=i("./src/utils/image.js"),f=i("./src/utils/maths.js"),g=i("./src/generation/stopping_criteria.js"),_=i("./src/generation/logits_sampler.js"),y=i("./src/env.js"),b=i("./src/models/whisper/generation_whisper.js"),w=i("./src/models/whisper/common_whisper.js");let x=new Map,v=new Map,M=new Map;async function T(t,r,i){let o=i.config?.["transformers.js_config"]??{},l=i.device??o.device;l&&"string"!=typeof l&&(l.hasOwnProperty(r)?l=l[r]:(console.warn(`device not specified for "${r}". Using the default device.`),l=null));let d=l??(y.apis.IS_NODE_ENV?"cpu":"wasm"),c=(0,a.deviceToExecutionProviders)(d),p=o.device_config??{};p.hasOwnProperty(d)&&(o={...o,...p[d]});let h=i.dtype??o.dtype;if("string"!=typeof h&&(h&&h.hasOwnProperty(r)?h=h[r]:(h=n.DEFAULT_DEVICE_DTYPE_MAPPING[d]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${r}". Using the default dtype (${h}) for this device (${d}).`))),h===n.DATA_TYPES.auto){let t=o.dtype;"string"!=typeof t&&(t=t?.[r]),h=t&&t!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(t)?t:n.DEFAULT_DEVICE_DTYPE_MAPPING[d]??n.DATA_TYPES.fp32}let m=h;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(m)){if(m===n.DATA_TYPES.fp16&&"webgpu"===d&&!await (0,n.isWebGpuFp16Supported)())throw Error(`The device (${d}) does not support fp16.`)}else throw Error(`Invalid dtype: ${m}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);let f=o.kv_cache_dtype,g=f?"string"==typeof f?f:f[m]??"float32":void 0;if(g&&!["float32","float16"].includes(g))throw Error(`Invalid kv_cache_dtype: ${g}. Should be one of: float32, float16`);let _=n.DEFAULT_DTYPE_SUFFIX_MAPPING[m],b=`${r}${_}.onnx`,w=`${i.subfolder??""}/${b}`,x={...i.session_options};x.executionProviders??=c;let v=o.free_dimension_overrides;v?x.freeDimensionOverrides??=v:d.startsWith("webnn")&&!x.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${d}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);let M=y.apis.IS_NODE_ENV&&y.env.useFSCache,T=(0,u.getModelFile)(t,w,!0,i,M),k=i.use_external_data_format??o.use_external_data_format,$=[];if(k){let s=+("object"==typeof k?k.hasOwnProperty(b)?k[b]:!!k.hasOwnProperty(r)&&k[r]:k);if(s>u.MAX_EXTERNAL_DATA_CHUNKS)throw Error(`The number of external data chunks (${s}) exceeds the maximum allowed value (${u.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let r=0;r<s;++r){let s=`${b}_data${0===r?"":"_"+r}`,a=`${i.subfolder??""}/${s}`;$.push(new Promise(async(r,n)=>{let o=await (0,u.getModelFile)(t,a,!0,i,M);r(o instanceof Uint8Array?{path:s,data:o}:s)}))}}else void 0!==x.externalData&&($=x.externalData.map(async r=>{if("string"==typeof r.data){let s=await (0,u.getModelFile)(t,r.data,!0,i);return{...r,data:s}}return r}));if($.length>0){let t=await Promise.all($);y.apis.IS_NODE_ENV||(x.externalData=t)}if("webgpu"===d){let t=(0,s.getCacheShapes)(i.config,{prefix:"present"});if(Object.keys(t).length>0&&!(0,a.isONNXProxy)()){let r={};for(let i in t)r[i]="gpu-buffer";x.preferredOutputLocation=r}}return{buffer_or_path:await T,session_options:x,session_config:{dtype:m,kv_cache_dtype:g,device:d}}}async function k(t,r,i){return Object.fromEntries(await Promise.all(Object.keys(r).map(async s=>{let{buffer_or_path:n,session_options:o,session_config:l}=await T(t,r[s],i);return[s,await (0,a.createInferenceSession)(n,o,l)]})))}async function $(t,r,i){return Object.fromEntries(await Promise.all(Object.keys(r).map(async s=>{let a=await (0,u.getModelJSON)(t,r[s],!1,i);return[s,a]})))}async function C(t,r){let i=function(t,r){let i=Object.create(null),s=[];for(let n of t.inputNames){let t=r[n];if(!(t instanceof h.Tensor)){s.push(n);continue}i[n]=(0,a.isONNXProxy)()?t.clone():t}if(s.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${s.join(", ")}.`);let n=Object.keys(r).length,o=t.inputNames.length;if(n>o){let i=Object.keys(r).filter(r=>!t.inputNames.includes(r));console.warn(`WARNING: Too many inputs were provided (${n} > ${o}). The following inputs will be ignored: "${i.join(", ")}".`)}return i}(t,r);try{let r=Object.fromEntries(Object.entries(i).map(([t,r])=>[t,r.ort_tensor])),s=await (0,a.runInferenceSession)(t,r);return function t(r){for(let i in r)(0,a.isONNXTensor)(r[i])?r[i]=new h.Tensor(r[i]):"object"==typeof r[i]&&t(r[i]);return r}(s)}catch(r){let t=Object.fromEntries(Object.entries(i).map(([t,r])=>{let i={type:r.type,dims:r.dims,location:r.location};return"gpu-buffer"!==i.location&&(i.data=r.data),[t,i]}));throw console.error(`An error occurred during model execution: "${r}".`),console.error("Inputs given to model:",t),r}}function S(t){if(t instanceof h.Tensor)return t;if(0===t.length)throw Error("items must be non-empty");if(!Array.isArray(t[0]))return new h.Tensor("int64",BigInt64Array.from(t.map(t=>BigInt(t))),[1,t.length]);if(t.some(r=>r.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new h.Tensor("int64",BigInt64Array.from(t.flat().map(t=>BigInt(t))),[t.length,t[0].length])}function P(t){return new h.Tensor("bool",[t],[1])}async function E(t,r){let{encoder_outputs:i,input_ids:s,decoder_input_ids:a,...n}=r;if(!i){let s=(0,l.pick)(r,t.sessions.model.inputNames);i=(await F(t,s)).last_hidden_state}return n.input_ids=a,n.encoder_hidden_states=i,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(n.encoder_attention_mask=r.attention_mask),await I(t,n,!0)}async function F(t,r){let i=t.sessions.model,s=(0,l.pick)(r,i.inputNames);if(i.inputNames.includes("inputs_embeds")&&!s.inputs_embeds){if(!r.input_ids)throw Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");s.inputs_embeds=await t.encode_text({input_ids:r.input_ids})}if(i.inputNames.includes("token_type_ids")&&!s.token_type_ids){if(!s.input_ids)throw Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");s.token_type_ids=(0,h.zeros_like)(s.input_ids)}if(i.inputNames.includes("pixel_mask")&&!s.pixel_mask){if(!s.pixel_values)throw Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");let t=s.pixel_values.dims;s.pixel_mask=(0,h.ones)([t[0],t[2],t[3]])}return await C(i,s)}async function A(t,r){let i=await t.encode(r);return await t.decode(i)}async function I(t,r,i=!1){let s=t.sessions[i?"decoder_model_merged":"model"],{past_key_values:a,...n}=r;s.inputNames.includes("use_cache_branch")&&(n.use_cache_branch=P(!!a)),s.inputNames.includes("position_ids")&&n.attention_mask&&!n.position_ids&&(n.position_ids=function(t,r=null,i=0){let{input_ids:s,inputs_embeds:a,attention_mask:n}=t,{data:o,dims:l}=j(n,i),u=new h.Tensor("int64",o,l);if(r){let t=-(s??a).dims.at(1);u=u.slice(null,[t,null])}return u}(n,a,+!!["paligemma","gemma3_text","gemma3"].includes(t.config.model_type))),t.addPastKeyValues(n,a);let o=(0,l.pick)(n,s.inputNames);return await C(s,o)}function z({modality_token_id:t,inputs_embeds:r,modality_features:i,input_ids:s,attention_mask:a}){let n=s.tolist().map(r=>r.reduce((r,i,s)=>(i==t&&r.push(s),r),[])),o=n.reduce((t,r)=>t+r.length,0),l=i.dims[0];if(o!==l)throw Error(`Number of tokens and features do not match: tokens: ${o}, features ${l}`);let u=0;for(let t=0;t<n.length;++t){let s=n[t],a=r[t];for(let t=0;t<s.length;++t)a[s[t]].data.set(i[u++].data)}return{inputs_embeds:r,attention_mask:a}}function L({image_token_id:t,inputs_embeds:r,image_features:i,input_ids:s,attention_mask:a}){return z({modality_token_id:t,inputs_embeds:r,modality_features:i,input_ids:s,attention_mask:a})}function O({audio_token_id:t,inputs_embeds:r,audio_features:i,input_ids:s,attention_mask:a}){return z({modality_token_id:t,inputs_embeds:r,modality_features:i,input_ids:s,attention_mask:a})}async function B(t,{encode_function:r,merge_function:i,modality_input_name:s,modality_output_name:a,input_ids:n=null,attention_mask:o=null,position_ids:l=null,inputs_embeds:u=null,past_key_values:d=null,generation_config:c=null,logits_processor:p=null,...m}){let f=m[s];if(!u){if(u=await t.encode_text({input_ids:n,...m}),f&&1!==n.dims[1]){let t=await r({[s]:f,...m});({inputs_embeds:u,attention_mask:o}=i({[a]:t,inputs_embeds:u,input_ids:n,attention_mask:o}))}else if(d&&f&&1===n.dims[1]){let t=n.dims[1],r=Object.values(d)[0].dims.at(-2);o=(0,h.cat)([(0,h.ones)([n.dims[0],r]),o.slice(null,[o.dims[1]-t,o.dims[1]])],1)}}if(!l&&"qwen2_vl"===t.config.model_type){let{image_grid_thw:r,video_grid_thw:i}=m;[l]=t.get_rope_index(n,r,i,o)}return await I(t,{inputs_embeds:u,past_key_values:d,attention_mask:o,position_ids:l,generation_config:c,logits_processor:p},!0)}async function D(t,r){return await B(t,{...r,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:t.encode_audio.bind(t),merge_function:t._merge_input_ids_with_audio_features.bind(t)})}async function N(t,r){return await B(t,{...r,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:t.encode_image.bind(t),merge_function:t._merge_input_ids_with_image_features.bind(t)})}function j(t,r=0){let[i,s]=t.dims,a=t.data,n=new BigInt64Array(a.length);for(let t=0;t<i;++t){let i=t*s,o=BigInt(r);for(let t=0;t<s;++t){let r=i+t;0n===a[r]?n[r]=BigInt(1):(n[r]=o,o+=a[r])}}return{data:n,dims:t.dims}}function R(t,r,i,s){let a=i.past_key_values?Object.values(i.past_key_values)[0].dims.at(-2):0;if(!i.attention_mask){let t;for(let r of["input_ids","inputs_embeds","position_ids"])if(i[r]){t=i[r].dims;break}if(!t)throw Error("attention_mask is not provided, and unable to infer its shape from model inputs.");i.attention_mask=(0,h.ones)([t[0],a+t[1]])}if(i.past_key_values){let{input_ids:t,attention_mask:r}=i;r&&r.dims[1]>t.dims[1]||a<t.dims[1]&&(i.input_ids=t.slice(null,[a,null]))}return i}function V(t,r,i,s){return i.past_key_values&&(r=r.map(t=>[t.at(-1)])),{...i,decoder_input_ids:S(r)}}function G(t,...r){return t.config.is_encoder_decoder?V(t,...r):R(t,...r)}function U(t,r,i,s){let a=!!i.past_key_values;return null!==s.guidance_scale&&s.guidance_scale>1&&(a?i.input_ids=(0,h.cat)([i.input_ids,i.input_ids],0):(i.input_ids=(0,h.cat)([i.input_ids,(0,h.full_like)(i.input_ids,BigInt(s.pad_token_id))],0),i.attention_mask=(0,h.cat)([i.attention_mask,(0,h.full_like)(i.attention_mask,0n)],0))),(a||!i.pixel_values)&&(i.pixel_values=(0,h.full)([0,0,3,384,384],1)),a&&(i.images_seq_mask=new h.Tensor("bool",[,].fill(!0).fill(!1,0,1),[1,1]),i.images_emb_mask=new h.Tensor("bool",[].fill(!1),[1,1,0])),i}class q extends o.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(t,r,i){super(),this.config=t,this.sessions=r,this.configs=i;const s=M.get(this.constructor),a=x.get(s);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,a){case 4:this.can_generate=!0,this._forward=I,this._prepare_inputs_for_generation=R;break;case 2:case 3:case 7:this.can_generate=!0,this._forward=E,this._prepare_inputs_for_generation=V;break;case 1:this._forward=E;break;case 6:this.can_generate=!0,this._forward=N,this._prepare_inputs_for_generation=G;break;case 10:this.can_generate=!0,this._forward=D,this._prepare_inputs_for_generation=G;break;case 9:case 12:this.can_generate=!0,this._prepare_inputs_for_generation=G;break;case 8:this.can_generate=!0,this._prepare_inputs_for_generation=U;break;case 11:this._forward=A;break;default:this._forward=F}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){let t=[];for(let r of Object.values(this.sessions))r?.handler?.dispose&&t.push(r.handler.dispose());return await Promise.all(t)}static async from_pretrained(t,{progress_callback:r=null,config:i=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",model_file_name:l=null,subfolder:u="onnx",device:c=null,dtype:p=null,use_external_data_format:h=null,session_options:m={}}={}){let f,g={progress_callback:r,config:i,cache_dir:a,local_files_only:n,revision:o,model_file_name:l,subfolder:u,device:c,dtype:p,use_external_data_format:h,session_options:m},_=M.get(this),y=x.get(_);if(i=g.config=await s.AutoConfig.from_pretrained(t,g),4===y)f=await Promise.all([k(t,{model:g.model_file_name??"model"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(2===y||3===y)f=await Promise.all([k(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(5===y)f=await Promise.all([k(t,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},g)]);else if(1===y)f=await Promise.all([k(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},g)]);else if(6===y){let r={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};i.is_encoder_decoder&&(r.model="encoder_model"),f=await Promise.all([k(t,r,g),$(t,{generation_config:"generation_config.json"},g)])}else if(10===y)f=await Promise.all([k(t,{embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(12===y)f=await Promise.all([k(t,{embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(7===y)f=await Promise.all([k(t,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(8===y)f=await Promise.all([k(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(9===y)f=await Promise.all([k(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},g),$(t,{generation_config:"generation_config.json"},g)]);else if(11===y)f=await Promise.all([k(t,{encoder_model:"encoder_model",decoder_model:"decoder_model"},g)]);else{if(0!==y){let t=_??i?.model_type;"custom"!==t&&console.warn(`Model type for '${t}' not found, assuming encoder-only architecture. Please report this at ${d.GITHUB_ISSUE_URL}.`)}f=await Promise.all([k(t,{model:g.model_file_name??"model"},g)])}return new this(i,...f)}async _call(t){return await this.forward(t)}async forward(t){return await this._forward(this,t)}get generation_config(){return this.configs?.generation_config??null}_get_logits_processor(t,r,i=null){let s=new c.LogitsProcessorList;if(null!==t.repetition_penalty&&1!==t.repetition_penalty&&s.push(new c.RepetitionPenaltyLogitsProcessor(t.repetition_penalty)),null!==t.no_repeat_ngram_size&&t.no_repeat_ngram_size>0&&s.push(new c.NoRepeatNGramLogitsProcessor(t.no_repeat_ngram_size)),null!==t.bad_words_ids&&s.push(new c.NoBadWordsLogitsProcessor(t.bad_words_ids,t.eos_token_id)),null!==t.min_length&&null!==t.eos_token_id&&t.min_length>0&&s.push(new c.MinLengthLogitsProcessor(t.min_length,t.eos_token_id)),null!==t.min_new_tokens&&null!==t.eos_token_id&&t.min_new_tokens>0&&s.push(new c.MinNewTokensLengthLogitsProcessor(r,t.min_new_tokens,t.eos_token_id)),null!==t.forced_bos_token_id&&s.push(new c.ForcedBOSTokenLogitsProcessor(t.forced_bos_token_id)),null!==t.forced_eos_token_id&&s.push(new c.ForcedEOSTokenLogitsProcessor(t.max_length,t.forced_eos_token_id)),null!==t.begin_suppress_tokens){let i=r>1||null===t.forced_bos_token_id?r:r+1;s.push(new c.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,i))}return null!==t.guidance_scale&&t.guidance_scale>1&&s.push(new c.ClassifierFreeGuidanceLogitsProcessor(t.guidance_scale)),0===t.temperature&&t.do_sample&&(console.warn("`do_sample` changed to false because `temperature: 0` implies greedy sampling (always selecting the most likely token), which is incompatible with `do_sample: true`."),t.do_sample=!1),t.do_sample&&null!==t.temperature&&1!==t.temperature&&s.push(new c.TemperatureLogitsWarper(t.temperature)),null!==i&&s.extend(i),s}_prepare_generation_config(t,r,i=p.GenerationConfig){let s={...this.config};for(let t of["decoder","generator","text_config"])t in s&&Object.assign(s,s[t]);let a=new i(s);return Object.assign(a,this.generation_config??{}),t&&Object.assign(a,t),r&&Object.assign(a,(0,l.pick)(r,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(t,r=null){let i=new g.StoppingCriteriaList;return null!==t.max_length&&i.push(new g.MaxLengthCriteria(t.max_length,this.config.max_position_embeddings??null)),null!==t.eos_token_id&&i.push(new g.EosTokenCriteria(t.eos_token_id)),r&&i.extend(r),i}_validate_model_class(){if(!this.can_generate){let t=M.get(this.constructor),r=new Set,i=this.config.model_type;for(let t of[lI,lB,lA,lC]){let s=t.get(i);s&&r.add(s[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw r.size>0&&(s+=` Please use the following class instead: ${[...r].join(", ")}`),Error(s)}}prepare_inputs_for_generation(...t){return this._prepare_inputs_for_generation(this,...t)}_update_model_kwargs_for_generation({generated_input_ids:t,outputs:r,model_inputs:i,is_encoder_decoder:s}){return i.past_key_values=this.getPastKeyValues(r,i.past_key_values),i.input_ids=new h.Tensor("int64",t.flat(),[t.length,1]),s?"decoder_attention_mask"in i:i.attention_mask=(0,h.cat)([i.attention_mask,(0,h.ones)([i.attention_mask.dims[0],1])],1),i.position_ids=null,i}_prepare_model_inputs({inputs:t,bos_token_id:r,model_kwargs:i}){let s=(0,l.pick)(i,this.forward_params),a=this.main_input_name;if(a in s){if(t)throw Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else s[a]=t;return{inputs_tensor:s[a],model_inputs:s,model_input_name:a}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:t,model_inputs:r,model_input_name:i,generation_config:s}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!r.inputs_embeds&&"_prepare_inputs_embeds"in this){let{input_ids:t,pixel_values:i,attention_mask:s,...a}=r,n=await this._prepare_inputs_embeds(r);r={...a,...(0,l.pick)(n,["inputs_embeds","attention_mask"])}}let{last_hidden_state:a}=await F(this,r);if(null!==s.guidance_scale&&s.guidance_scale>1)a=(0,h.cat)([a,(0,h.full_like)(a,0)],0),"attention_mask"in r&&(r.attention_mask=(0,h.cat)([r.attention_mask,(0,h.zeros_like)(r.attention_mask)],0));else if(r.decoder_input_ids){let t=S(r.decoder_input_ids).dims[0];if(t!==a.dims[0]){if(1!==a.dims[0])throw Error(`The encoder outputs have a different batch size (${a.dims[0]}) than the decoder inputs (${t}).`);a=(0,h.cat)(Array.from({length:t},()=>a),0)}}return r.encoder_outputs=a,r}_prepare_decoder_input_ids_for_generation({batch_size:t,model_input_name:r,model_kwargs:i,decoder_start_token_id:s,bos_token_id:a,generation_config:n}){let{decoder_input_ids:o,...l}=i;if(!(o instanceof h.Tensor)){if(o)Array.isArray(o[0])||(o=Array.from({length:t},()=>o));else if(s??=a,"musicgen"===this.config.model_type)o=Array.from({length:t*this.config.decoder.num_codebooks},()=>[s]);else if(Array.isArray(s)){if(s.length!==t)throw Error(`\`decoder_start_token_id\` expcted to have length ${t} but got ${s.length}`);o=s}else o=Array.from({length:t},()=>[s]);o=S(o)}return i.decoder_attention_mask=(0,h.ones_like)(o),{input_ids:o,model_inputs:l}}async generate({inputs:t=null,generation_config:r=null,logits_processor:i=null,stopping_criteria:s=null,streamer:a=null,...n}){let o,l;this._validate_model_class(),r=this._prepare_generation_config(r,n);let{inputs_tensor:u,model_inputs:d,model_input_name:c}=this._prepare_model_inputs({inputs:t,model_kwargs:n}),p=this.config.is_encoder_decoder;p&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:u,model_inputs:d,model_input_name:c,generation_config:r}))),p?{input_ids:o,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[c].dims.at(0),model_input_name:c,model_kwargs:d,decoder_start_token_id:r.decoder_start_token_id,bos_token_id:r.bos_token_id,generation_config:r}):o=d[c];let m=o.dims.at(-1);null!==r.max_new_tokens&&(r.max_length=m+r.max_new_tokens);let f=this._get_logits_processor(r,m,i),g=this._get_stopping_criteria(r,s),y=d[c].dims.at(0),b=_.LogitsSampler.getSampler(r),w=Array(y).fill(0),x=o.tolist();a&&a.put(x);let v={};for(;;){if(d=this.prepare_inputs_for_generation(x,d,r),l=await this.forward(d),r.output_attentions&&r.return_dict_in_generate){let t=this.getAttentions(l);for(let r in t)r in v||(v[r]=[]),v[r].push(t[r])}let t=f(x,l.logits.slice(null,-1,null)),i=[];for(let r=0;r<t.dims.at(0);++r){let s=t[r];for(let[t,a]of(await b(s))){let s=BigInt(t);w[r]+=a,x[r].push(s),i.push([s]);break}}if(a&&a.put(i),g(x).every(t=>t))break;d=this._update_model_kwargs_for_generation({generated_input_ids:i,outputs:l,model_inputs:d,is_encoder_decoder:p})}a&&a.end();let M=this.getPastKeyValues(l,d.past_key_values,!0),T=new h.Tensor("int64",x.flat(),[x.length,x[0].length]);if(r.return_dict_in_generate)return{sequences:T,past_key_values:M,...v};for(let t of Object.values(l))"gpu-buffer"===t.location&&t.dispose();return T}getPastKeyValues(t,r,i=!1){let s=Object.create(null);for(let a in t)if(a.startsWith("present")){let n=a.replace("present_conv","past_conv").replace("present","past_key_values"),o=a.includes("encoder");if(o&&r?s[n]=r[n]:s[n]=t[a],r&&(!o||i)){let t=r[n];"gpu-buffer"===t.location&&t.dispose()}}return s}getAttentions(t){let r={};for(let i of["cross_attentions","encoder_attentions","decoder_attentions"])for(let s in t)s.startsWith(i)&&(i in r||(r[i]=[]),r[i].push(t[s]));return r}addPastKeyValues(t,r){if(r)Object.assign(t,r);else{let r=this.sessions.decoder_model_merged??this.sessions.model,i=(t[this.main_input_name]??t.attention_mask)?.dims?.[0]??1,a=r?.config?.kv_cache_dtype??"float32",n="float16"===a?h.DataTypeMap.float16:h.DataTypeMap.float32,o=(0,s.getCacheShapes)(this.config,{batch_size:i});for(let r in o){let i=o[r].reduce((t,r)=>t*r,1);t[r]=new h.Tensor(a,new n(i),o[r])}}}async encode_image({pixel_values:t}){return(await C(this.sessions.vision_encoder,{pixel_values:t})).image_features}async encode_text({input_ids:t}){return(await C(this.sessions.embed_tokens,{input_ids:t})).inputs_embeds}async encode_audio({audio_values:t}){return(await C(this.sessions.audio_encoder,{audio_values:t})).audio_features}}class W{}class H extends W{constructor({last_hidden_state:t,hidden_states:r=null,attentions:i=null}){super(),this.last_hidden_state=t,this.hidden_states=r,this.attentions=i}}class K extends q{}class Q extends K{}class X extends K{async _call(t){return new uA(await super._call(t))}}class J extends K{async _call(t){return new uP(await super._call(t))}}class Y extends K{async _call(t){return new uF(await super._call(t))}}class Z extends K{async _call(t){return new uI(await super._call(t))}}class ee extends q{}class et extends ee{}class er extends ee{async _call(t){return new uA(await super._call(t))}}class ei extends ee{async _call(t){return new uP(await super._call(t))}}class es extends ee{async _call(t){return new uF(await super._call(t))}}class ea extends ee{async _call(t){return new uI(await super._call(t))}}class en extends q{}class eo extends en{}class el extends en{async _call(t){return new uA(await super._call(t))}}class eu extends en{async _call(t){return new uP(await super._call(t))}}class ed extends en{async _call(t){return new uF(await super._call(t))}}class ec extends q{}class ep extends ec{}class eh extends ec{}class em extends q{}class ef extends em{}class eg extends q{}class e_ extends eg{}class ey extends eg{async _call(t){return new uA(await super._call(t))}}class eb extends eg{async _call(t){return new uP(await super._call(t))}}class ew extends eg{async _call(t){return new uF(await super._call(t))}}class ex extends eg{async _call(t){return new uI(await super._call(t))}}class ev extends q{}class eM extends ev{}class eT extends ev{async _call(t){return new uA(await super._call(t))}}class ek extends ev{async _call(t){return new uP(await super._call(t))}}class e$ extends ev{async _call(t){return new uF(await super._call(t))}}class eC extends ev{async _call(t){return new uI(await super._call(t))}}class eS extends q{}class eP extends eS{}class eE extends eS{async _call(t){return new uA(await super._call(t))}}class eF extends eS{async _call(t){return new uP(await super._call(t))}}class eA extends eS{async _call(t){return new uF(await super._call(t))}}class eI extends eS{async _call(t){return new uI(await super._call(t))}}class ez extends q{}class eL extends ez{}class eO extends ez{async _call(t){return new uA(await super._call(t))}}class eB extends ez{async _call(t){return new uP(await super._call(t))}}class eD extends ez{async _call(t){return new uF(await super._call(t))}}class eN extends ez{async _call(t){return new uI(await super._call(t))}}class ej extends q{}class eR extends ej{}class eV extends ej{async _call(t){return new uA(await super._call(t))}}class eG extends ej{async _call(t){return new uP(await super._call(t))}}class eU extends ej{async _call(t){return new uF(await super._call(t))}}class eq extends ej{async _call(t){return new uI(await super._call(t))}}class eW extends q{}class eH extends eW{}class eK extends eW{async _call(t){return new uA(await super._call(t))}}class eQ extends eW{async _call(t){return new uP(await super._call(t))}}class eX extends eW{async _call(t){return new uF(await super._call(t))}}class eJ extends eW{async _call(t){return new uI(await super._call(t))}}class eY extends q{}class eZ extends eY{}class e0 extends eY{async _call(t){return new uP(await super._call(t))}}class e1 extends eY{async _call(t){return new uF(await super._call(t))}}class e2 extends eY{async _call(t){return new uI(await super._call(t))}}class e3 extends eY{async _call(t){return new uA(await super._call(t))}}class e4 extends q{}class e8 extends e4{}class e6 extends e4{async _call(t){return new uA(await super._call(t))}}class e5 extends e4{async _call(t){return new uP(await super._call(t))}}class e9 extends e4{async _call(t){return new uF(await super._call(t))}}class e7 extends q{}class te extends e7{}class tt extends e7{async _call(t){return new uA(await super._call(t))}}class tr extends e7{async _call(t){return new uP(await super._call(t))}}class ti extends e7{async _call(t){return new uI(await super._call(t))}}class ts extends q{}class ta extends ts{}class tn extends ts{async _call(t){return new uA(await super._call(t))}}class to extends ts{async _call(t){return new uP(await super._call(t))}}class tl extends ts{async _call(t){return new uF(await super._call(t))}}class tu extends ts{async _call(t){return new uI(await super._call(t))}}class td extends q{}class tc extends td{}class tp extends td{async _call(t){return new uA(await super._call(t))}}class th extends td{async _call(t){return new uP(await super._call(t))}}class tm extends td{async _call(t){return new uI(await super._call(t))}}class tf extends q{}class tg extends tf{}class t_ extends tf{async _call(t){return new uP(await super._call(t))}}class ty extends tf{async _call(t){return new uI(await super._call(t))}}class tb extends tf{async _call(t){return new uA(await super._call(t))}}class tw extends q{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class tx extends tw{}class tv extends tw{}class tM extends q{}class tT extends tM{}class tk extends tM{}class t$ extends q{}class tC extends t${}class tS extends t${}class tP extends q{}class tE extends tP{}class tF extends tP{}class tA extends tP{async _call(t){return new uP(await super._call(t))}}class tI extends q{}class tz extends tI{}class tL extends tI{}class tO extends tI{async _call(t){return new uP(await super._call(t))}}class tB extends tI{}class tD extends q{}class tN extends tD{}class tj extends tD{}class tR extends q{}class tV extends tR{}class tG extends tR{}class tU extends q{}class tq extends tU{}class tW extends tU{async _call(t){return new uA(await super._call(t))}}class tH extends tU{async _call(t){return new uP(await super._call(t))}}class tK extends tU{async _call(t){return new uF(await super._call(t))}}class tQ extends tU{async _call(t){return new uI(await super._call(t))}}class tX extends q{}class tJ extends tX{}class tY extends tX{async _call(t){return new uA(await super._call(t))}}class tZ extends tX{async _call(t){return new uP(await super._call(t))}}class t0 extends tX{async _call(t){return new uF(await super._call(t))}}class t1 extends tX{async _call(t){return new uI(await super._call(t))}}class t2 extends q{}class t3 extends t2{}class t4 extends t2{async _call(t){return new uA(await super._call(t))}}class t8 extends t2{async _call(t){return new uP(await super._call(t))}}class t6 extends t2{async _call(t){return new uF(await super._call(t))}}class t5 extends t2{async _call(t){return new uI(await super._call(t))}}class t9 extends q{}class t7 extends t9{}class re extends t9{}class rt extends q{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class rr extends rt{}class ri extends rt{_prepare_generation_config(t,r){return super._prepare_generation_config(t,r,b.WhisperGenerationConfig)}_retrieve_init_tokens(t){let r=[t.decoder_start_token_id],i=t.language,s=t.task;if(t.is_multilingual){i||(console.warn("No language specified - defaulting to English (en)."),i="en");let a=(0,w.whisper_language_to_code)(i),n=`<|${a}|>`;r.push(t.lang_to_id[n]),r.push(t.task_to_id[s??"transcribe"])}else if(i||s)throw Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!t.return_timestamps&&t.no_timestamps_token_id&&r.at(-1)!==t.no_timestamps_token_id?r.push(t.no_timestamps_token_id):t.return_timestamps&&r.at(-1)===t.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(t=>null!=t)}async generate({inputs:t=null,generation_config:r=null,logits_processor:i=null,stopping_criteria:s=null,...a}){r=this._prepare_generation_config(r,a);let n=a.decoder_input_ids??this._retrieve_init_tokens(r);if(r.return_timestamps&&(i??=new c.LogitsProcessorList).push(new c.WhisperTimeStampLogitsProcessor(r,n)),r.begin_suppress_tokens&&(i??=new c.LogitsProcessorList).push(new c.SuppressTokensAtBeginLogitsProcessor(r.begin_suppress_tokens,n.length)),r.return_token_timestamps){if(!r.alignment_heads)throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===r.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),r.output_attentions=!0,r.return_dict_in_generate=!0}let o=await super.generate({inputs:t,generation_config:r,logits_processor:i,decoder_input_ids:n,...a});return r.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,r.alignment_heads,r.num_frames)),o}_extract_token_timestamps(t,r,i=null,s=.02){if(!t.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==i&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);let n=t.cross_attentions,o=Array.from({length:this.config.decoder_layers},(t,r)=>(0,h.cat)(n.map(t=>t[r]),2)),u=(0,h.stack)(r.map(([t,r])=>{if(t>=o.length)throw Error(`Layer index ${t} is out of bounds for cross attentions (length ${o.length}).`);return i?o[t].slice(null,r,null,[0,i]):o[t].slice(null,r)})).transpose(1,0,2,3),[d,c]=(0,h.std_mean)(u,-2,0,!0),p=u.clone();for(let t=0;t<p.dims[0];++t){let r=p[t];for(let i=0;i<r.dims[0];++i){let s=r[i],n=d[t][i][0].data,o=c[t][i][0].data;for(let t=0;t<s.dims[0];++t){let r=s[t].data;for(let t=0;t<r.length;++t)r[t]=(r[t]-o[t])/n[t];r.set((0,f.medianFilter)(r,a))}}}let m=[(0,h.mean)(p,1)],g=t.sequences.dims,_=new h.Tensor("float32",new Float32Array(g[0]*g[1]),g);for(let t=0;t<g[0];++t){let r=m[t].neg().squeeze_(0),[i,a]=(0,f.dynamic_time_warping)(r.tolist()),n=Array.from({length:i.length-1},(t,r)=>i[r+1]-i[r]),o=(0,l.mergeArrays)([1],n).map(t=>!!t),u=[];for(let t=0;t<o.length;++t)o[t]&&u.push(a[t]*s);_[t].data.set(u,1)}return _}}class rs extends ri{}class ra extends q{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class rn extends ra{}class ro extends ra{}class rl extends q{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class ru extends q{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class rd extends ru{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),i=t.image_features.view(-1,r);return L({image_token_id:this.config.image_token_index,...t,image_features:i})}}class rc extends rd{}class rp extends rd{}class rh extends q{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class rm extends rh{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:i,attention_mask:s}){return{inputs_embeds:(0,h.cat)([r,t],1),attention_mask:(0,h.cat)([(0,h.ones)(r.dims.slice(0,2)),s],1)}}async _prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:i,attention_mask:s}){let a,n;if(!t&&!r)throw Error("Either `input_ids` or `pixel_values` should be provided.");return t&&(a=await this.encode_text({input_ids:t})),r&&(n=await this.encode_image({pixel_values:r})),a&&n?{inputs_embeds:i,attention_mask:s}=this._merge_input_ids_with_image_features({inputs_embeds:a,image_features:n,input_ids:t,attention_mask:s}):i=a||n,{inputs_embeds:i,attention_mask:s}}async forward({input_ids:t,pixel_values:r,attention_mask:i,decoder_input_ids:s,decoder_attention_mask:a,encoder_outputs:n,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}){if(l||({inputs_embeds:l,attention_mask:i}=await this._prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:l,attention_mask:i})),!n){let{last_hidden_state:t}=await F(this,{inputs_embeds:l,attention_mask:i});n=t}if(!u){if(!s)throw Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:s})}let d={inputs_embeds:u,attention_mask:a,encoder_attention_mask:i,encoder_hidden_states:n,past_key_values:o};return await I(this,d,!0)}}class rf extends q{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class rg extends rf{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),i=t.image_features.view(-1,r);return L({image_token_id:this.config.image_token_index,...t,image_features:i})}}class r_ extends ru{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),i=t.image_features.view(-1,r);return L({image_token_id:this.config.image_token_index,...t,image_features:i})}}class ry extends q{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class rb extends ry{async forward({input_ids:t=null,attention_mask:r=null,pixel_values:i=null,input_features:s=null,input_features_mask:a=null,position_ids:n=null,inputs_embeds:o=null,per_layer_inputs:l=null,past_key_values:u=null,generation_config:d=null,logits_processor:c=null,...p}){if((!o||!l)&&({inputs_embeds:o,per_layer_inputs:l}=await C(this.sessions.embed_tokens,{input_ids:t}),1!==t.dims[1])){if(i){let{image_features:s}=await C(this.sessions.vision_encoder,{pixel_values:i});({inputs_embeds:o,attention_mask:r}=this._merge_input_ids_with_image_features({image_features:s,inputs_embeds:o,input_ids:t,attention_mask:r}))}if(s){let{audio_features:i}=await C(this.sessions.audio_encoder,{input_features:s,input_features_mask:a});({inputs_embeds:o,attention_mask:r}=this._merge_input_ids_with_audio_features({audio_features:i,inputs_embeds:o,input_ids:t,attention_mask:r}))}}return await I(this,{inputs_embeds:o,per_layer_inputs:l,past_key_values:u,attention_mask:r,position_ids:n,generation_config:d,logits_processor:c},!0)}_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),i=t.image_features.view(-1,r);return L({image_token_id:this.config.image_token_id,...t,image_features:i})}_merge_input_ids_with_audio_features(t){let r=t.audio_features.dims.at(-1),i=t.audio_features.view(-1,r);return O({audio_token_id:this.config.audio_token_id,...t,audio_features:i})}}class rw extends q{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class rx extends rw{async encode_image({pixel_values:t,pixel_attention_mask:r}){return(await C(this.sessions.vision_encoder,{pixel_values:t,pixel_attention_mask:r})).image_features}_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),i=t.image_features.view(-1,r);return L({image_token_id:this.config.image_token_id,...t,image_features:i})}}class rv extends rx{}class rM extends q{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class rT extends rM{async forward({input_ids:t=null,attention_mask:r=null,pixel_values:i=null,image_sizes:s=null,position_ids:a=null,inputs_embeds:n=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!n){let r;if(i&&1!==t.dims[1]){if(!s)throw Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:r}=await C(this.sessions.vision_encoder,{pixel_values:i,image_sizes:s}))}else{let t=this.config.normalized_config.hidden_size;r=new h.Tensor("float32",[],[0,t])}({inputs_embeds:n}=await C(this.sessions.prepare_inputs_embeds,{input_ids:t,image_features:r}))}return await I(this,{inputs_embeds:n,past_key_values:o,attention_mask:r,position_ids:a,generation_config:l,logits_processor:u},!1)}}class rk extends q{}class r$ extends rk{}class rC extends rk{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rS extends rk{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rP extends rk{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rE extends rk{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rF extends q{}class rA extends rF{}class rI extends rF{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rz extends rk{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rL extends q{}class rO extends rL{}class rB extends q{}class rD extends rB{async forward(t){let r=!t.input_ids,i=!t.pixel_values;if(r&&i)throw Error("Either `input_ids` or `pixel_values` should be provided.");if(r&&(t.input_ids=(0,h.ones)([t.pixel_values.dims[0],1])),i){let{image_size:r}=this.config.vision_config;t.pixel_values=(0,h.full)([0,3,r,r],0)}let{text_embeddings:s,image_embeddings:a,l2norm_text_embeddings:n,l2norm_image_embeddings:o}=await super.forward(t),l={};return r||(l.text_embeddings=s,l.l2norm_text_embeddings=n),i||(l.image_embeddings=a,l.l2norm_image_embeddings=o),l}}class rN extends rB{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rj extends rB{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rR extends q{}class rV extends rR{}class rG extends rR{}class rU extends q{}class rq extends rU{}class rW extends rU{}class rH extends q{}class rK extends rH{}class rQ extends rH{}class rX extends q{}class rJ extends rX{}class rY extends rX{}class rZ extends q{}class r0 extends rZ{}class r1 extends rZ{}class r2 extends q{}class r3 extends r2{}class r4 extends r2{}class r8 extends q{}class r6 extends r8{}class r5 extends r8{}class r9 extends q{}class r7 extends r9{}class ie extends r9{}class it extends q{}class ir extends it{}class ii extends it{}class is extends q{}class ia extends is{}class io extends q{}class il extends io{}class iu extends io{}class id extends q{}class ic extends id{}class ip extends id{}class ih extends q{}class im extends ih{}class ig extends ih{}class i_ extends q{}class iy extends i_{}class ib extends i_{}class iw extends q{}class ix extends iw{}class iv extends iw{}class iM extends q{}class iT extends iM{}class ik extends iM{}class i$ extends q{}class iC extends i${}class iS extends i${}class iP extends q{}class iE extends iP{}class iF extends iP{}class iA extends q{}class iI extends iA{}class iz extends iA{}class iL extends q{}class iO extends iL{}class iB extends iL{}class iD extends q{}class iN extends iD{}class ij extends iD{}class iR extends q{}class iV extends iR{}class iG extends iR{}class iU extends q{}class iq extends iU{}class iW extends iU{}class iH extends q{}class iK extends iH{}class iQ extends iH{}class iX extends q{}class iJ extends iX{}class iY extends iX{}class iZ extends q{}class i0 extends iZ{}class i1 extends iZ{}class i2 extends q{}class i3 extends i2{}class i4 extends i2{}class i8 extends q{}class i6 extends i8{}class i5 extends i8{}class i9 extends q{}class i7 extends i9{}class se extends i9{}class st extends q{}class sr extends st{}class si extends st{}class ss extends q{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class sa extends ss{get_rope_index(t,r,i,s){let{vision_config:a,image_token_id:n,video_token_id:o,vision_start_token_id:l}=this.config,u=a.spatial_merge_size??2,d=[];if(r||i){let a=t.tolist();s||(s=(0,h.ones_like)(t));let c=s.tolist(),p=Array.from({length:3},r=>Array.from({length:t.dims[0]},r=>Array.from({length:t.dims[1]},t=>1))),m=r?r.tolist():[],g=i?i.tolist():[],_=0,y=0;for(let t=0;t<a.length;++t){let r=a[t].filter((r,i)=>1==c[t][i]),i=r.reduce((t,r,i)=>(r==l&&t.push(i),t),[]).map(t=>r[t+1]),s=i.filter(t=>t==n).length,h=i.filter(t=>t==o).length,b=[],w=0,x=s,v=h;for(let t=0;t<i.length;++t){let t,i,s,a,l=r.findIndex((t,r)=>r>w&&t==n),d=r.findIndex((t,r)=>r>w&&t==o),c=x>0&&-1!==l?l:r.length+1,p=v>0&&-1!==d?d:r.length+1;c<p?([i,s,a]=m[_],++_,--x,t=c):([i,s,a]=g[y],++y,--v,t=p);let[h,M,T]=[Number(i),Math.floor(Number(s)/u),Math.floor(Number(a)/u)],k=t-w,$=b.length>0?(0,f.max)(b.at(-1))[0]+1:0;b.push(Array.from({length:3*k},(t,r)=>$+r%k));let C=k+$,S=h*M*T,P=Array.from({length:S},(t,r)=>C+Math.floor(r/(M*T))),E=Array.from({length:S},(t,r)=>C+Math.floor(r/T)%M),F=Array.from({length:S},(t,r)=>C+r%T);b.push([P,E,F].flat()),w=t+S}if(w<r.length){let t=b.length>0?(0,f.max)(b.at(-1))[0]+1:0,i=r.length-w;b.push(Array.from({length:3*i},(r,s)=>t+s%i))}let M=b.reduce((t,r)=>t+r.length,0),T=Array(M),k=0;for(let t=0;t<3;++t)for(let r=0;r<b.length;++r){let i=b[r],s=i.length/3;for(let r=t*s;r<(t+1)*s;++r)T[k++]=i[r]}let $=0,C=c[t];for(let r=0;r<C.length;++r)if(1==C[r]){for(let i=0;i<3;++i)p[i][t][r]=T[i*M/3+$];++$}let S=(0,f.max)(T)[0];d.push(S+1-a[t].length)}return[new h.Tensor("int64",p.flat(1/0),[3,t.dims[0],t.dims[1]]),new h.Tensor("int64",d,[d.length,1])]}if(s){let{data:t,dims:r}=j(s),i=BigInt64Array.from({length:3*t.length},(r,i)=>t[i%t.length]),a=Array.from({length:r[0]},(i,s)=>(0,f.max)(t.subarray(r[1]*s,r[1]*(s+1)))[0]+1n+BigInt(r[1]));return[new h.Tensor("int64",i,[3,...r]),new h.Tensor("int64",a,[a.length,1])]}{let[r,i]=t.dims,s=BigInt64Array.from({length:3*r*i},(t,s)=>BigInt(Math.floor(s%i/r)));return[new h.Tensor("int64",s,[3,...t.dims]),(0,h.zeros)([r,1])]}}async encode_image({pixel_values:t,image_grid_thw:r}){return(await C(this.sessions.vision_encoder,{pixel_values:t,grid_thw:r})).image_features}_merge_input_ids_with_image_features(t){return L({image_token_id:this.config.image_token_id,...t})}prepare_inputs_for_generation(t,r,i){if(r.attention_mask&&!r.position_ids)if(r.past_key_values){r.pixel_values=null;let t=BigInt(Object.values(r.past_key_values)[0].dims.at(-2)),i=r.rope_deltas.map(r=>t+r);r.position_ids=(0,h.stack)([i,i,i],0)}else[r.position_ids,r.rope_deltas]=this.get_rope_index(r.input_ids,r.image_grid_thw,r.video_grid_thw,r.attention_mask);return r}}class sn extends q{}class so extends sn{}class sl extends sn{}class su extends q{}class sd extends su{}class sc extends su{}class sp extends q{}class sh extends sp{}class sm extends sp{}class sf extends q{}class sg extends sf{}class s_ extends sf{}class sy extends q{}class sb extends sy{}class sw extends sy{}class sx extends q{}class sv extends sx{}class sM extends sx{async _call(t){return new uP(await super._call(t))}}class sT extends q{}class sk extends sT{}class s$ extends sT{async _call(t){return new uP(await super._call(t))}}class sC extends q{}class sS extends sC{}class sP extends q{}class sE extends sP{}class sF extends sP{async _call(t){return new uP(await super._call(t))}}class sA extends q{}class sI extends sA{}class sz extends q{}class sL extends sz{}class sO extends sz{async _call(t){return new uP(await super._call(t))}}class sB extends q{}class sD extends sB{}class sN extends q{}class sj extends sN{}class sR extends sN{async _call(t){return new uP(await super._call(t))}}class sV extends q{}class sG extends sV{async _call(t){return new uO(await super._call(t))}}class sU extends q{}class sq extends sU{}class sW extends sU{async _call(t){return new uP(await super._call(t))}}class sH extends q{}class sK extends sH{}class sQ extends sH{async _call(t){return new uP(await super._call(t))}}class sX extends q{}class sJ extends sX{}class sY extends sX{}class sZ extends q{}class s0 extends sZ{}class s1 extends sZ{}class s2 extends q{}class s3 extends s2{}class s4 extends s2{async _call(t){return new uP(await super._call(t))}}class s8 extends q{}class s6 extends s8{}class s5 extends s8{async _call(t){return new s7(await super._call(t))}}class s9 extends s8{async _call(t){return new ae(await super._call(t))}}class s7 extends W{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class ae extends W{constructor({logits:t,pred_boxes:r,pred_masks:i}){super(),this.logits=t,this.pred_boxes=r,this.pred_masks=i}}class at extends q{}class ar extends at{}class ai extends at{async _call(t){return new as(await super._call(t))}}class as extends W{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class aa extends q{}class an extends aa{}class ao extends aa{async _call(t){return new al(await super._call(t))}}class al extends as{}class au extends q{}class ad extends au{}class ac extends au{async _call(t){return new ap(await super._call(t))}}class ap extends as{}class ah extends q{}class am extends ah{}class af extends ah{async _call(t){return new as(await super._call(t))}}class ag extends q{}class a_ extends ag{}class ay extends ag{async _call(t){return new ab(await super._call(t))}}class ab extends s7{}class aw extends q{}class ax extends aw{}class av extends aw{async _call(t){return new uP(await super._call(t))}}class aM extends q{}class aT extends aM{}class ak extends aM{async _call(t){return new uP(await super._call(t))}}class a$ extends q{}class aC extends a${}class aS extends a${async _call(t){return new uP(await super._call(t))}}class aP extends q{}class aE extends aP{}class aF extends aP{async _call(t){return new uP(await super._call(t))}}class aA extends aP{}class aI extends q{}class az extends aI{}class aL extends aI{}class aO extends q{}class aB extends aO{}class aD extends aO{}class aN extends q{}class aj extends aN{}class aR extends q{}class aV extends aR{}class aG extends aR{}class aU extends aR{}class aq extends q{}class aW extends aq{}class aH extends q{}class aK extends aH{}class aQ extends q{}class aX extends aQ{}class aJ extends q{}class aY extends aJ{}class aZ extends aJ{}class a0 extends q{}class a1 extends a0{}class a2 extends a0{}class a3 extends q{}class a4 extends a3{}class a8 extends q{}class a6 extends a8{}class a5 extends a8{async _call(t){return new uP(await super._call(t))}}class a9 extends q{}class a7 extends a9{}class ne extends a9{async _call(t){return new uP(await super._call(t))}}class nt extends q{}class nr extends nt{}class ni extends nt{async _call(t){return new uP(await super._call(t))}}class ns extends q{}class na extends ns{}class nn extends ns{async _call(t){return new uP(await super._call(t))}}class no extends q{}class nl extends no{}class nu extends q{}class nd extends nu{}class nc extends q{}class np extends nc{}class nh extends q{}class nm extends nh{}class nf extends nh{async _call(t){return new ng(await super._call(t))}}class ng extends W{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class n_ extends q{}class ny extends n_{async get_image_embeddings({pixel_values:t}){return await F(this,{pixel_values:t})}async forward(t){if(t.image_embeddings&&t.image_positional_embeddings||(t={...t,...await this.get_image_embeddings(t)}),!t.input_labels&&t.input_points){let r=t.input_points.dims.slice(0,-1),i=r.reduce((t,r)=>t*r,1);t.input_labels=new h.Tensor("int64",new BigInt64Array(i).fill(1n),r)}let r={image_embeddings:t.image_embeddings,image_positional_embeddings:t.image_positional_embeddings};return t.input_points&&(r.input_points=t.input_points),t.input_labels&&(r.input_labels=t.input_labels),t.input_boxes&&(r.input_boxes=t.input_boxes),await C(this.sessions.prompt_encoder_mask_decoder,r)}async _call(t){return new nb(await super._call(t))}}class nb extends W{constructor({iou_scores:t,pred_masks:r}){super(),this.iou_scores=t,this.pred_masks=r}}class nw extends q{}class nx extends nw{}class nv extends nw{}class nM extends q{}class nT extends nM{}class nk extends nM{}class n$ extends q{}class nC extends n${}class nS extends n${async _call(t){return new uz(await super._call(t))}}class nP extends n${async _call(t){return new uP(await super._call(t))}}class nE extends n${async _call(t){return new uF(await super._call(t))}}class nF extends q{}class nA extends nF{async _call(t){return new uz(await super._call(t))}}class nI extends q{}class nz extends nI{}class nL extends nI{async _call(t){return new uF(await super._call(t))}}class nO extends q{}class nB extends nO{}class nD extends q{}class nN extends nD{}class nj extends nD{async _call(t){return new uz(await super._call(t))}}class nR extends nD{async _call(t){return new uP(await super._call(t))}}class nV extends q{}class nG extends nV{}class nU extends nV{async _call(t){return new uz(await super._call(t))}}class nq extends nV{async _call(t){return new uP(await super._call(t))}}class nW extends nV{async _call(t){return new uF(await super._call(t))}}class nH extends q{}class nK extends nH{}class nQ extends nH{async _call(t){return new uz(await super._call(t))}}class nX extends nH{async _call(t){return new uP(await super._call(t))}}class nJ extends q{}class nY extends n${}class nZ extends n${async _call(t){return new uz(await super._call(t))}}class n0 extends n${async _call(t){return new uP(await super._call(t))}}class n1 extends q{}class n2 extends n1{}class n3 extends n1{async _call(t){return new uz(await super._call(t))}}class n4 extends n1{async _call(t){return new uP(await super._call(t))}}class n8 extends n1{async _call(t){return new uE(await super._call(t))}}class n6 extends n1{async _call(t){return new uF(await super._call(t))}}class n5 extends q{}class n9 extends n5{}class n7 extends q{}class oe extends n7{}class ot extends n7{}class or extends n7{async generate_speech(t,r,{threshold:i=.5,minlenratio:s=0,maxlenratio:a=20,vocoder:n=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await F(this,{input_ids:t}),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*a),c=Math.floor(u*s),p=this.config.num_mel_bins,m=[],f=null,g=null,_=0;for(;;){++_;let t={use_cache_branch:P(!!g),output_sequence:g?g.output_sequence_out:new h.Tensor("float32",new Float32Array(p),[1,1,p]),encoder_attention_mask:l,speaker_embeddings:r,encoder_hidden_states:o};this.addPastKeyValues(t,f),g=await C(this.sessions.decoder_model_merged,t),f=this.getPastKeyValues(g,f);let{prob:s,spectrum:a}=g;if(m.push(a),_>=c&&(Array.from(s.data).filter(t=>t>=i).length>0||_>=d))break}let y=(0,h.cat)(m),{waveform:b}=await C(n.sessions.model,{spectrogram:y});return{spectrogram:y,waveform:b}}}class oi extends q{main_input_name="spectrogram"}class os extends q{}class oa extends os{}class on extends q{}class oo extends on{}class ol extends on{}class ou extends q{}class od extends ou{}class oc extends ou{}class op extends q{}class oh extends op{}class om extends op{}class of extends q{}class og extends of{}class o_ extends of{}class oy extends q{}class ob extends oy{}class ow extends oy{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class ox extends oy{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"audio_model"})}}class ov extends q{}class oM extends ov{async _call(t){return new uB(await super._call(t))}}class oT extends q{}class ok extends oT{}class o$ extends oT{}class oC extends oT{}class oS extends q{}class oP extends oS{}class oE extends oS{}class oF extends q{}class oA extends oF{}class oI extends oF{async _call(t){return new uP(await super._call(t))}}class oz extends q{}class oL extends oz{}class oO extends oz{}class oB extends q{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(t){let[r,i]=t.dims,s=this.config.decoder.num_codebooks,a=i-s,n=0;for(let r=0;r<t.size;++r){if(t.data[r]===this.config.decoder.pad_token_id)continue;let o=r%i-Math.floor(r/i)%s;o>0&&o<=a&&(t.data[n++]=t.data[r])}let o=Math.floor(r/s),l=n/(o*s);return new h.Tensor(t.type,t.data.slice(0,n),[o,s,l])}prepare_inputs_for_generation(t,r,i){let s=structuredClone(t);for(let t=0;t<s.length;++t)for(let r=0;r<s[t].length;++r)t%this.config.decoder.num_codebooks>=r&&(s[t][r]=BigInt(this.config.decoder.pad_token_id));return null!==i.guidance_scale&&i.guidance_scale>1&&(s=s.concat(s)),super.prepare_inputs_for_generation(s,r,i)}async generate(t){let r=await super.generate(t),i=this._apply_and_filter_by_delay_pattern_mask(r).unsqueeze_(0),{audio_values:s}=await C(this.sessions.encodec_decode,{audio_codes:i});return s}}class oD extends q{}class oN extends oD{}class oj extends oD{async _call(t){return new uP(await super._call(t))}}class oR extends oD{}class oV extends q{}class oG extends oV{}class oU extends oV{async _call(t){return new uP(await super._call(t))}}class oq extends oV{}class oW extends q{}class oH extends oW{}class oK extends oW{async _call(t){return new uP(await super._call(t))}}class oQ extends oW{}class oX extends q{}class oJ extends oX{}class oY extends oX{async _call(t){return new uP(await super._call(t))}}class oZ extends oX{}class o0 extends q{}class o1 extends o0{}class o2 extends q{}class o3 extends o2{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...t){super(...t),this._generation_mode="text"}async forward(t){let r,i=this._generation_mode??"text";if("text"!==i&&t.past_key_values){let i=this.sessions.gen_img_embeds,s=(0,l.pick)({image_ids:t.input_ids},i.inputNames);r=await C(i,s)}else{let i=this.sessions.prepare_inputs_embeds,s=(0,l.pick)(t,i.inputNames);r=await C(i,s)}let s={...t,...r},a=await I(this,s),n=this.sessions["text"===i?"lm_head":"gen_head"];if(!n)throw Error(`Unable to find "${n}" generation head`);let o=await C(n,(0,l.pick)(a,n.inputNames));return{...r,...a,...o}}async generate(t){return this._generation_mode="text",super.generate(t)}async generate_images(t){this._generation_mode="image";let r=(t.inputs??t[this.main_input_name]).dims[1],i=(await super.generate(t)).slice(null,[r,null]),s=this.sessions.image_decode,{decoded_image:a}=await C(s,{generated_tokens:i}),n=a.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),o=[];for(let t of n){let r=m.RawImage.fromTensor(t);o.push(r)}return o}}class o4 extends W{constructor({char_logits:t,bpe_logits:r,wp_logits:i}){super(),this.char_logits=t,this.bpe_logits=r,this.wp_logits=i}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class o8 extends q{}class o6 extends o8{async _call(t){return new o4(await super._call(t))}}class o5 extends q{}class o9 extends o5{}class o7 extends o5{}class le extends q{}class lt extends le{}class lr extends le{}class li extends q{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class ls extends li{_merge_input_ids_with_audio_features(t){let r=t.audio_features.dims.at(-1),i=t.audio_features.view(-1,r);return O({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...t,audio_features:i})}}class la extends ls{}class ln extends q{main_input_name="input_values";forward_params=["input_values"]}class lo extends W{constructor({audio_codes:t}){super(),this.audio_codes=t}}class ll extends W{constructor({audio_values:t}){super(),this.audio_values=t}}class lu extends ln{async encode(t){return new lo(await C(this.sessions.encoder_model,t))}async decode(t){return new ll(await C(this.sessions.decoder_model,t))}}class ld extends ln{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}}class lc extends ln{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}}class lp extends q{main_input_name="input_values";forward_params=["input_values"]}class lh extends W{constructor({audio_codes:t}){super(),this.audio_codes=t}}class lm extends W{constructor({audio_values:t}){super(),this.audio_values=t}}class lf extends lp{async encode(t){return new lh(await C(this.sessions.encoder_model,t))}async decode(t){return new lm(await C(this.sessions.decoder_model,t))}}class lg extends lp{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}}class l_ extends lp{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}}class ly extends q{main_input_name="input_values";forward_params=["input_values"]}class lb extends ly{async encode(t){return await C(this.sessions.encoder_model,t)}async decode(t){return await C(this.sessions.decoder_model,t)}}class lw extends ly{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}}class lx extends ly{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}}class lv{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(t,{progress_callback:r=null,config:i=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",model_file_name:l=null,subfolder:u="onnx",device:d=null,dtype:c=null,use_external_data_format:p=null,session_options:h={}}={}){let m={progress_callback:r,config:i,cache_dir:a,local_files_only:n,revision:o,model_file_name:l,subfolder:u,device:d,dtype:c,use_external_data_format:p,session_options:h};if(m.config=await s.AutoConfig.from_pretrained(t,m),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);let f=m.config.model_type;for(let r of this.MODEL_CLASS_MAPPINGS){let i=r.get(f);if(!i){for(let t of r.values())if(t[0]===f){i=t;break}if(!i)continue}return await i[1].from_pretrained(t,m)}if(this.BASE_IF_FAIL)return l6.has(f)||console.warn(`Unknown model class "${f}", attempting to construct from base class.`),await q.from_pretrained(t,m);throw Error(`Unsupported model type: ${f}`)}}let lM=new Map([["bert",["BertModel",Q]],["neobert",["NeoBertModel",et]],["modernbert",["ModernBertModel",eo]],["nomic_bert",["NomicBertModel",ef]],["roformer",["RoFormerModel",e_]],["electra",["ElectraModel",eP]],["esm",["EsmModel",e8]],["convbert",["ConvBertModel",eM]],["camembert",["CamembertModel",eL]],["deberta",["DebertaModel",eR]],["deberta-v2",["DebertaV2Model",eH]],["mpnet",["MPNetModel",ta]],["albert",["AlbertModel",tg]],["distilbert",["DistilBertModel",eZ]],["roberta",["RobertaModel",tq]],["xlm",["XLMModel",tJ]],["xlm-roberta",["XLMRobertaModel",t3]],["clap",["ClapModel",ob]],["clip",["CLIPModel",r$]],["clipseg",["CLIPSegModel",rV]],["chinese_clip",["ChineseCLIPModel",rO]],["siglip",["SiglipModel",rA]],["jina_clip",["JinaCLIPModel",rD]],["mobilebert",["MobileBertModel",te]],["squeezebert",["SqueezeBertModel",tc]],["wav2vec2",["Wav2Vec2Model",nC]],["wav2vec2-bert",["Wav2Vec2BertModel",nK]],["unispeech",["UniSpeechModel",nN]],["unispeech-sat",["UniSpeechSatModel",nG]],["hubert",["HubertModel",nY]],["wavlm",["WavLMModel",n2]],["audio-spectrogram-transformer",["ASTModel",t7]],["vits",["VitsModel",oM]],["pyannote",["PyAnnoteModel",nz]],["wespeaker-resnet",["WeSpeakerResNetModel",nB]],["detr",["DetrModel",s6]],["rt_detr",["RTDetrModel",ar]],["rt_detr_v2",["RTDetrV2Model",an]],["rf_detr",["RFDetrModel",ad]],["d_fine",["DFineModel",am]],["table-transformer",["TableTransformerModel",a_]],["vit",["ViTModel",sv]],["ijepa",["IJepaModel",sk]],["pvt",["PvtModel",sE]],["vit_msn",["ViTMSNModel",sL]],["vit_mae",["ViTMAEModel",sI]],["groupvit",["GroupViTModel",sD]],["fastvit",["FastViTModel",sj]],["mobilevit",["MobileViTModel",sq]],["mobilevitv2",["MobileViTV2Model",sK]],["owlvit",["OwlViTModel",sJ]],["owlv2",["Owlv2Model",s0]],["beit",["BeitModel",s3]],["deit",["DeiTModel",ax]],["hiera",["HieraModel",aT]],["convnext",["ConvNextModel",a6]],["convnextv2",["ConvNextV2Model",a7]],["dinov2",["Dinov2Model",nr]],["dinov2_with_registers",["Dinov2WithRegistersModel",na]],["dinov3_vit",["DINOv3ViTModel",nl]],["dinov3_convnext",["DINOv3ConvNextModel",nd]],["resnet",["ResNetModel",aC]],["swin",["SwinModel",aE]],["swin2sr",["Swin2SRModel",az]],["donut-swin",["DonutSwinModel",a4]],["yolos",["YolosModel",nm]],["dpt",["DPTModel",aB]],["glpn",["GLPNModel",a1]],["hifigan",["SpeechT5HifiGan",oi]],["efficientnet",["EfficientNetModel",oA]],["decision_transformer",["DecisionTransformerModel",o1]],["patchtst",["PatchTSTForPrediction",o9]],["patchtsmixer",["PatchTSMixerForPrediction",lt]],["mobilenet_v1",["MobileNetV1Model",oN]],["mobilenet_v2",["MobileNetV2Model",oG]],["mobilenet_v3",["MobileNetV3Model",oH]],["mobilenet_v4",["MobileNetV4Model",oJ]],["maskformer",["MaskFormerModel",aY]],["mgp-str",["MgpstrForSceneTextRecognition",o6]],["style_text_to_speech_2",["StyleTextToSpeech2Model",n9]]]),lT=new Map([["t5",["T5Model",tx]],["longt5",["LongT5Model",tT]],["mt5",["MT5Model",tC]],["bart",["BartModel",tE]],["mbart",["MBartModel",tz]],["marian",["MarianModel",nx]],["whisper",["WhisperModel",rr]],["m2m_100",["M2M100Model",nT]],["blenderbot",["BlenderbotModel",tN]],["blenderbot-small",["BlenderbotSmallModel",tV]]]),lk=new Map([["mimi",["MimiModel",lu]],["dac",["DacModel",lf]],["snac",["SnacModel",lb]]]),l$=new Map([["bloom",["BloomModel",sh]],["jais",["JAISModel",rK]],["gpt2",["GPT2Model",rq]],["gptj",["GPTJModel",r3]],["gpt_bigcode",["GPTBigCodeModel",r6]],["gpt_neo",["GPTNeoModel",rJ]],["gpt_neox",["GPTNeoXModel",r0]],["codegen",["CodeGenModel",r7]],["llama",["LlamaModel",ir]],["nanochat",["NanoChatModel",il]],["arcee",["ArceeModel",ic]],["lfm2",["Lfm2Model",im]],["smollm3",["SmolLM3Model",iy]],["exaone",["ExaoneModel",iC]],["olmo",["OlmoModel",iI]],["olmo2",["Olmo2Model",iO]],["mobilellm",["MobileLLMModel",iE]],["granite",["GraniteModel",iN]],["granitemoehybrid",["GraniteMoeHybridModel",iV]],["cohere",["CohereModel",iq]],["gemma",["GemmaModel",iK]],["gemma2",["Gemma2Model",iJ]],["vaultgemma",["VaultGemmaModel",i0]],["gemma3_text",["Gemma3Model",i3]],["helium",["HeliumModel",ix]],["glm",["GlmModel",iT]],["openelm",["OpenELMModel",i6]],["qwen2",["Qwen2Model",i7]],["qwen3",["Qwen3Model",sr]],["phi",["PhiModel",so]],["phi3",["Phi3Model",sd]],["mpt",["MptModel",sg]],["opt",["OPTModel",sb]],["mistral",["MistralModel",oo]],["ernie4_5",["Ernie4_5_Model",od]],["starcoder2",["Starcoder2Model",oh]],["falcon",["FalconModel",og]],["stablelm",["StableLmModel",oP]],["modernbert-decoder",["ModernBertDecoderModel",ep]]]),lC=new Map([["speecht5",["SpeechT5ForSpeechToText",ot]],["whisper",["WhisperForConditionalGeneration",ri]],["lite-whisper",["LiteWhisperForConditionalGeneration",rs]],["moonshine",["MoonshineForConditionalGeneration",ro]]]),lS=new Map([["speecht5",["SpeechT5ForTextToSpeech",or]]]),lP=new Map([["vits",["VitsModel",oM]],["musicgen",["MusicgenForConditionalGeneration",oB]]]),lE=new Map([["bert",["BertForSequenceClassification",J]],["neobert",["NeoBertForSequenceClassification",ei]],["modernbert",["ModernBertForSequenceClassification",eu]],["roformer",["RoFormerForSequenceClassification",eb]],["electra",["ElectraForSequenceClassification",eF]],["esm",["EsmForSequenceClassification",e5]],["convbert",["ConvBertForSequenceClassification",ek]],["camembert",["CamembertForSequenceClassification",eB]],["deberta",["DebertaForSequenceClassification",eG]],["deberta-v2",["DebertaV2ForSequenceClassification",eQ]],["mpnet",["MPNetForSequenceClassification",to]],["albert",["AlbertForSequenceClassification",t_]],["distilbert",["DistilBertForSequenceClassification",e0]],["roberta",["RobertaForSequenceClassification",tH]],["xlm",["XLMForSequenceClassification",tZ]],["xlm-roberta",["XLMRobertaForSequenceClassification",t8]],["bart",["BartForSequenceClassification",tA]],["mbart",["MBartForSequenceClassification",tO]],["mobilebert",["MobileBertForSequenceClassification",tr]],["squeezebert",["SqueezeBertForSequenceClassification",th]]]),lF=new Map([["bert",["BertForTokenClassification",Y]],["neobert",["NeoBertForTokenClassification",es]],["modernbert",["ModernBertForTokenClassification",ed]],["roformer",["RoFormerForTokenClassification",ew]],["electra",["ElectraForTokenClassification",eA]],["esm",["EsmForTokenClassification",e9]],["convbert",["ConvBertForTokenClassification",e$]],["camembert",["CamembertForTokenClassification",eD]],["deberta",["DebertaForTokenClassification",eU]],["deberta-v2",["DebertaV2ForTokenClassification",eX]],["mpnet",["MPNetForTokenClassification",tl]],["distilbert",["DistilBertForTokenClassification",e1]],["roberta",["RobertaForTokenClassification",tK]],["xlm",["XLMForTokenClassification",t0]],["xlm-roberta",["XLMRobertaForTokenClassification",t6]]]),lA=new Map([["t5",["T5ForConditionalGeneration",tv]],["longt5",["LongT5ForConditionalGeneration",tk]],["mt5",["MT5ForConditionalGeneration",tS]],["bart",["BartForConditionalGeneration",tF]],["mbart",["MBartForConditionalGeneration",tL]],["marian",["MarianMTModel",nv]],["m2m_100",["M2M100ForConditionalGeneration",nk]],["blenderbot",["BlenderbotForConditionalGeneration",tj]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",tG]]]),lI=new Map([["bloom",["BloomForCausalLM",sm]],["gpt2",["GPT2LMHeadModel",rW]],["jais",["JAISLMHeadModel",rQ]],["gptj",["GPTJForCausalLM",r4]],["gpt_bigcode",["GPTBigCodeForCausalLM",r5]],["gpt_neo",["GPTNeoForCausalLM",rY]],["gpt_neox",["GPTNeoXForCausalLM",r1]],["codegen",["CodeGenForCausalLM",ie]],["llama",["LlamaForCausalLM",ii]],["nanochat",["NanoChatForCausalLM",iu]],["llama4_text",["Llama4ForCausalLM",ia]],["arcee",["ArceeForCausalLM",ip]],["lfm2",["Lfm2ForCausalLM",ig]],["smollm3",["SmolLM3ForCausalLM",ib]],["exaone",["ExaoneForCausalLM",iS]],["olmo",["OlmoForCausalLM",iz]],["olmo2",["Olmo2ForCausalLM",iB]],["mobilellm",["MobileLLMForCausalLM",iF]],["granite",["GraniteForCausalLM",ij]],["granitemoehybrid",["GraniteMoeHybridForCausalLM",iG]],["cohere",["CohereForCausalLM",iW]],["gemma",["GemmaForCausalLM",iQ]],["gemma2",["Gemma2ForCausalLM",iY]],["vaultgemma",["VaultGemmaForCausalLM",i1]],["gemma3_text",["Gemma3ForCausalLM",i4]],["helium",["HeliumForCausalLM",iv]],["glm",["GlmForCausalLM",ik]],["openelm",["OpenELMForCausalLM",i5]],["qwen2",["Qwen2ForCausalLM",se]],["qwen3",["Qwen3ForCausalLM",si]],["phi",["PhiForCausalLM",sl]],["phi3",["Phi3ForCausalLM",sc]],["mpt",["MptForCausalLM",s_]],["opt",["OPTForCausalLM",sw]],["mbart",["MBartForCausalLM",tB]],["mistral",["MistralForCausalLM",ol]],["ernie4_5",["Ernie4_5_ForCausalLM",oc]],["starcoder2",["Starcoder2ForCausalLM",om]],["falcon",["FalconForCausalLM",o_]],["trocr",["TrOCRForCausalLM",oa]],["stablelm",["StableLmForCausalLM",oE]],["modernbert-decoder",["ModernBertDecoderForCausalLM",eh]],["phi3_v",["Phi3VForCausalLM",rT]]]),lz=new Map([["multi_modality",["MultiModalityCausalLM",o3]]]),lL=new Map([["bert",["BertForMaskedLM",X]],["neobert",["NeoBertForMaskedLM",er]],["modernbert",["ModernBertForMaskedLM",el]],["roformer",["RoFormerForMaskedLM",ey]],["electra",["ElectraForMaskedLM",eE]],["esm",["EsmForMaskedLM",e6]],["convbert",["ConvBertForMaskedLM",eT]],["camembert",["CamembertForMaskedLM",eO]],["deberta",["DebertaForMaskedLM",eV]],["deberta-v2",["DebertaV2ForMaskedLM",eK]],["mpnet",["MPNetForMaskedLM",tn]],["albert",["AlbertForMaskedLM",tb]],["distilbert",["DistilBertForMaskedLM",e3]],["roberta",["RobertaForMaskedLM",tW]],["xlm",["XLMWithLMHeadModel",tY]],["xlm-roberta",["XLMRobertaForMaskedLM",t4]],["mobilebert",["MobileBertForMaskedLM",tt]],["squeezebert",["SqueezeBertForMaskedLM",tp]]]),lO=new Map([["bert",["BertForQuestionAnswering",Z]],["neobert",["NeoBertForQuestionAnswering",ea]],["roformer",["RoFormerForQuestionAnswering",ex]],["electra",["ElectraForQuestionAnswering",eI]],["convbert",["ConvBertForQuestionAnswering",eC]],["camembert",["CamembertForQuestionAnswering",eN]],["deberta",["DebertaForQuestionAnswering",eq]],["deberta-v2",["DebertaV2ForQuestionAnswering",eJ]],["mpnet",["MPNetForQuestionAnswering",tu]],["albert",["AlbertForQuestionAnswering",ty]],["distilbert",["DistilBertForQuestionAnswering",e2]],["roberta",["RobertaForQuestionAnswering",tQ]],["xlm",["XLMForQuestionAnswering",t1]],["xlm-roberta",["XLMRobertaForQuestionAnswering",t5]],["mobilebert",["MobileBertForQuestionAnswering",ti]],["squeezebert",["SqueezeBertForQuestionAnswering",tm]]]),lB=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",rl]],["idefics3",["Idefics3ForConditionalGeneration",rx]],["smolvlm",["SmolVLMForConditionalGeneration",rv]]]),lD=new Map([["llava",["LlavaForConditionalGeneration",rd]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",rc]],["moondream1",["Moondream1ForConditionalGeneration",rp]],["florence2",["Florence2ForConditionalGeneration",rm]],["qwen2-vl",["Qwen2VLForConditionalGeneration",sa]],["idefics3",["Idefics3ForConditionalGeneration",rx]],["smolvlm",["SmolVLMForConditionalGeneration",rv]],["paligemma",["PaliGemmaForConditionalGeneration",rg]],["llava_qwen2",["LlavaQwen2ForCausalLM",r_]],["gemma3n",["Gemma3nForConditionalGeneration",rb]]]),lN=new Map([["ultravox",["UltravoxModel",ls]],["voxtral",["VoxtralForConditionalGeneration",la]]]),lj=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",rl]]]),lR=new Map([["vit",["ViTForImageClassification",sM]],["ijepa",["IJepaForImageClassification",s$]],["pvt",["PvtForImageClassification",sF]],["vit_msn",["ViTMSNForImageClassification",sO]],["fastvit",["FastViTForImageClassification",sR]],["mobilevit",["MobileViTForImageClassification",sW]],["mobilevitv2",["MobileViTV2ForImageClassification",sQ]],["beit",["BeitForImageClassification",s4]],["deit",["DeiTForImageClassification",av]],["hiera",["HieraForImageClassification",ak]],["convnext",["ConvNextForImageClassification",a5]],["convnextv2",["ConvNextV2ForImageClassification",ne]],["dinov2",["Dinov2ForImageClassification",ni]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",nn]],["resnet",["ResNetForImageClassification",aS]],["swin",["SwinForImageClassification",aF]],["segformer",["SegformerForImageClassification",o$]],["efficientnet",["EfficientNetForImageClassification",oI]],["mobilenet_v1",["MobileNetV1ForImageClassification",oj]],["mobilenet_v2",["MobileNetV2ForImageClassification",oU]],["mobilenet_v3",["MobileNetV3ForImageClassification",oK]],["mobilenet_v4",["MobileNetV4ForImageClassification",oY]]]),lV=new Map([["detr",["DetrForObjectDetection",s5]],["rt_detr",["RTDetrForObjectDetection",ai]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ao]],["rf_detr",["RFDetrForObjectDetection",ac]],["d_fine",["DFineForObjectDetection",af]],["table-transformer",["TableTransformerForObjectDetection",ay]],["yolos",["YolosForObjectDetection",nf]]]),lG=new Map([["owlvit",["OwlViTForObjectDetection",sY]],["owlv2",["Owlv2ForObjectDetection",s1]],["grounding-dino",["GroundingDinoForObjectDetection",np]]]),lU=new Map([["detr",["DetrForSegmentation",s9]],["clipseg",["CLIPSegForImageSegmentation",rG]]]),lq=new Map([["segformer",["SegformerForSemanticSegmentation",oC]],["sapiens",["SapiensForSemanticSegmentation",aV]],["swin",["SwinForSemanticSegmentation",aA]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",oR]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",oq]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",oQ]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",oZ]]]),lW=new Map([["detr",["DetrForSegmentation",s9]],["maskformer",["MaskFormerForInstanceSegmentation",aZ]]]),lH=new Map([["sam",["SamModel",ny]]]),lK=new Map([["wav2vec2",["Wav2Vec2ForCTC",nS]],["wav2vec2-bert",["Wav2Vec2BertForCTC",nQ]],["unispeech",["UniSpeechForCTC",nj]],["unispeech-sat",["UniSpeechSatForCTC",nU]],["wavlm",["WavLMForCTC",n3]],["hubert",["HubertForCTC",nZ]],["parakeet_ctc",["ParakeetForCTC",nA]]]),lQ=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",nP]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",nX]],["unispeech",["UniSpeechForSequenceClassification",nR]],["unispeech-sat",["UniSpeechSatForSequenceClassification",nq]],["wavlm",["WavLMForSequenceClassification",n4]],["hubert",["HubertForSequenceClassification",n0]],["audio-spectrogram-transformer",["ASTForAudioClassification",re]]]),lX=new Map([["wavlm",["WavLMForXVector",n8]]]),lJ=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",nW]],["wavlm",["WavLMForAudioFrameClassification",n6]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",nE]],["pyannote",["PyAnnoteForAudioFrameClassification",nL]]]),lY=new Map([["vitmatte",["VitMatteForImageMatting",sG]]]),lZ=new Map([["patchtst",["PatchTSTForPrediction",o7]],["patchtsmixer",["PatchTSMixerForPrediction",lr]]]),l0=new Map([["swin2sr",["Swin2SRForImageSuperResolution",aL]]]),l1=new Map([["dpt",["DPTForDepthEstimation",aD]],["depth_anything",["DepthAnythingForDepthEstimation",aj]],["glpn",["GLPNForDepthEstimation",a2]],["sapiens",["SapiensForDepthEstimation",aG]],["depth_pro",["DepthProForDepthEstimation",aW]],["metric3d",["Metric3DForDepthEstimation",aK]],["metric3dv2",["Metric3Dv2ForDepthEstimation",aX]]]),l2=new Map([["sapiens",["SapiensForNormalEstimation",aU]]]),l3=new Map([["vitpose",["VitPoseForPoseEstimation",sS]]]),l4=new Map([["clip",["CLIPVisionModelWithProjection",rE]],["siglip",["SiglipVisionModel",rz]],["jina_clip",["JinaCLIPVisionModel",rj]]]),l8=[[lM,0],[lT,1],[l$,4],[lk,11],[lE,0],[lF,0],[lA,2],[lC,2],[lI,4],[lz,8],[lL,0],[lO,0],[lB,3],[lD,6],[lN,10],[lR,0],[lU,0],[lW,0],[lq,0],[lY,0],[lZ,0],[l0,0],[l1,0],[l2,0],[l3,0],[lV,0],[lG,0],[lH,5],[lK,0],[lQ,0],[lS,2],[lP,0],[lX,0],[lJ,0],[l4,0]];for(let[t,r]of l8)for(let[i,s]of t.values())x.set(i,r),M.set(s,i),v.set(i,s);for(let[t,r,i]of[["MusicgenForConditionalGeneration",oB,7],["Phi3VForCausalLM",rT,9],["CLIPTextModelWithProjection",rS,0],["SiglipTextModel",rI,0],["JinaCLIPTextModel",rN,0],["ClapTextModelWithProjection",ow,0],["ClapAudioModelWithProjection",ox,0],["DacEncoderModel",lg,0],["DacDecoderModel",l_,0],["MimiEncoderModel",ld,0],["MimiDecoderModel",lc,0],["SnacEncoderModel",lw,0],["SnacDecoderModel",lx,0],["Gemma3nForConditionalGeneration",rb,12]])x.set(t,i),M.set(r,t),v.set(t,r);let l6=new Map([["modnet",lU],["birefnet",lU],["isnet",lU],["ben",lU]]);for(let[t,r]of l6.entries())r.set(t,["PreTrainedModel",q]),x.set(t,0),M.set(q,t),v.set(t,q);class l5 extends lv{static MODEL_CLASS_MAPPINGS=l8.map(t=>t[0]);static BASE_IF_FAIL=!0}class l9 extends lv{static MODEL_CLASS_MAPPINGS=[lE]}class l7 extends lv{static MODEL_CLASS_MAPPINGS=[lF]}class ue extends lv{static MODEL_CLASS_MAPPINGS=[lA]}class ut extends lv{static MODEL_CLASS_MAPPINGS=[lC]}class ur extends lv{static MODEL_CLASS_MAPPINGS=[lS]}class ui extends lv{static MODEL_CLASS_MAPPINGS=[lP]}class us extends lv{static MODEL_CLASS_MAPPINGS=[lI]}class ua extends lv{static MODEL_CLASS_MAPPINGS=[lL]}class un extends lv{static MODEL_CLASS_MAPPINGS=[lO]}class uo extends lv{static MODEL_CLASS_MAPPINGS=[lB]}class ul extends lv{static MODEL_CLASS_MAPPINGS=[lR]}class uu extends lv{static MODEL_CLASS_MAPPINGS=[lU]}class ud extends lv{static MODEL_CLASS_MAPPINGS=[lq]}class uc extends lv{static MODEL_CLASS_MAPPINGS=[lW]}class up extends lv{static MODEL_CLASS_MAPPINGS=[lV]}class uh extends lv{static MODEL_CLASS_MAPPINGS=[lG]}class um extends lv{static MODEL_CLASS_MAPPINGS=[lH]}class uf extends lv{static MODEL_CLASS_MAPPINGS=[lK]}class ug extends lv{static MODEL_CLASS_MAPPINGS=[lQ]}class u_ extends lv{static MODEL_CLASS_MAPPINGS=[lX]}class uy extends lv{static MODEL_CLASS_MAPPINGS=[lJ]}class ub extends lv{static MODEL_CLASS_MAPPINGS=[lj]}class uw extends lv{static MODEL_CLASS_MAPPINGS=[lY]}class ux extends lv{static MODEL_CLASS_MAPPINGS=[l0]}class uv extends lv{static MODEL_CLASS_MAPPINGS=[l1]}class uM extends lv{static MODEL_CLASS_MAPPINGS=[l2]}class uT extends lv{static MODEL_CLASS_MAPPINGS=[l3]}class uk extends lv{static MODEL_CLASS_MAPPINGS=[l4]}class u$ extends lv{static MODEL_CLASS_MAPPINGS=[lD]}class uC extends lv{static MODEL_CLASS_MAPPINGS=[lN]}class uS extends W{constructor({logits:t,past_key_values:r,encoder_outputs:i,decoder_attentions:s=null,cross_attentions:a=null}){super(),this.logits=t,this.past_key_values=r,this.encoder_outputs=i,this.decoder_attentions=s,this.cross_attentions=a}}class uP extends W{constructor({logits:t,...r}){super(),this.logits=t;const i=Object.values(r);i.length>0&&(this.attentions=i)}}class uE extends W{constructor({logits:t,embeddings:r}){super(),this.logits=t,this.embeddings=r}}class uF extends W{constructor({logits:t}){super(),this.logits=t}}class uA extends W{constructor({logits:t}){super(),this.logits=t}}class uI extends W{constructor({start_logits:t,end_logits:r}){super(),this.start_logits=t,this.end_logits=r}}class uz extends W{constructor({logits:t}){super(),this.logits=t}}class uL extends W{constructor({logits:t,past_key_values:r}){super(),this.logits=t,this.past_key_values=r}}class uO extends W{constructor({alphas:t}){super(),this.alphas=t}}class uB extends W{constructor({waveform:t,spectrogram:r}){super(),this.waveform=t,this.spectrogram=r}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(t,r,i)=>{i.r(r),i.d(r,{ASTFeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var a=i("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(t){super(t);const r=this.config.sampling_rate,i=(0,a.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=i,this.window=(0,a.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(t,r){return(0,a.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t){(0,s.validate_audio_inputs)(t,"ASTFeatureExtractor");let r=await this._extract_fbank_features(t,this.config.max_length);if(this.config.do_normalize){let t=2*this.std,i=r.data;for(let r=0;r<i.length;++r)i[r]=(i[r]-this.mean)/t}return{input_values:r.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(t,r,i)=>{i.r(r),i.d(r,{AutoFeatureExtractor:()=>o});var s=i("./src/utils/constants.js"),a=i("./src/utils/hub.js");i("./src/base/feature_extraction_utils.js");var n=i("./src/models/feature_extractors.js");class o{static async from_pretrained(t,r={}){let i=await (0,a.getModelJSON)(t,s.FEATURE_EXTRACTOR_NAME,!0,r),o=i.feature_extractor_type,l=n[o];if(!l)throw Error(`Unknown feature_extractor_type: '${o}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new l(i)}}},"./src/models/auto/image_processing_auto.js":(t,r,i)=>{i.r(r),i.d(r,{AutoImageProcessor:()=>l});var s=i("./src/utils/constants.js"),a=i("./src/utils/hub.js"),n=i("./src/base/image_processors_utils.js"),o=i("./src/models/image_processors.js");class l{static async from_pretrained(t,r={}){let i=await (0,a.getModelJSON)(t,s.IMAGE_PROCESSOR_NAME,!0,r),l=i.image_processor_type??i.feature_extractor_type,u=o[l?.replace(/Fast$/,"")];return u||(void 0!==l&&console.warn(`Image processor type '${l}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),u=n.ImageProcessor),new u(i)}}},"./src/models/auto/processing_auto.js":(t,r,i)=>{i.r(r),i.d(r,{AutoProcessor:()=>d});var s=i("./src/utils/constants.js"),a=i("./src/utils/hub.js"),n=i("./src/base/processing_utils.js"),o=i("./src/models/processors.js"),l=i("./src/models/image_processors.js"),u=i("./src/models/feature_extractors.js");class d{static async from_pretrained(t,r={}){let i=await (0,a.getModelJSON)(t,s.IMAGE_PROCESSOR_NAME,!0,r),{image_processor_type:d,feature_extractor_type:c,processor_class:p}=i;if(p&&o[p])return o[p].from_pretrained(t,r);if(!d&&!c)throw Error("No `image_processor_type` or `feature_extractor_type` found in the config.");let h={};if(d){let t=l[d.replace(/Fast$/,"")];if(!t)throw Error(`Unknown image_processor_type: '${d}'.`);h.image_processor=new t(i)}if(c){let t=l[c];if(t)h.image_processor=new t(i);else{let t=u[c];if(!t)throw Error(`Unknown feature_extractor_type: '${c}'.`);h.feature_extractor=new t(i)}}return new n.Processor({},h,null)}}},"./src/models/beit/image_processing_beit.js":(t,r,i)=>{i.r(r),i.d(r,{BeitFeatureExtractor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(t,r,i)=>{i.r(r),i.d(r,{BitImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(t,r,i)=>{i.r(r),i.d(r,{ChineseCLIPFeatureExtractor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(t,r,i)=>{i.r(r),i.d(r,{ClapFeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var a=i("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(t){super(t),this.mel_filters=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,a.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(t,r,i,s){let a,n=t.length-r;if(n>0)if("rand_trunc"===i){let i=Math.floor(Math.random()*(n+1));t=t.subarray(i,i+r),a=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}else throw Error(`Truncation strategy "${i}" not implemented`);else{if(n<0){let i=new Float64Array(r);if(i.set(t),"repeat"===s)for(let s=t.length;s<r;s+=t.length)i.set(t.subarray(0,Math.min(t.length,r-s)),s);else if("repeatpad"===s)for(let r=t.length;r<-n;r+=t.length)i.set(t,r);t=i}if("fusion"===i)throw Error(`Truncation strategy "${i}" not implemented`);a=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}return a.unsqueeze_(0)}async _extract_fbank_features(t,r,i=null){return(0,a.spectrogram)(t,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:r,log_mel:"dB",max_num_frames:i,do_pad:!1,transpose:!0})}async _call(t,{max_length:r=null}={}){return(0,s.validate_audio_inputs)(t,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(t,r??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(t,r,i)=>{i.r(r),i.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/convnext/image_processing_convnext.js":(t,r,i)=>{i.r(r),i.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(t){super(t),this.crop_pct=this.config.crop_pct??.875}async resize(t){let r=this.size?.shortest_edge;if(void 0===r)throw Error("Size dictionary must contain 'shortest_edge' key.");if(r<384){let i=Math.floor(r/this.crop_pct),[s,a]=this.get_resize_output_image_size(t,{shortest_edge:i});t=await t.resize(s,a,{resample:this.resample}),t=await t.center_crop(r,r)}else t=await t.resize(r,r,{resample:this.resample});return t}}class n extends a{}},"./src/models/dac/feature_extraction_dac.js":(t,r,i)=>{i.r(r),i.d(r,{DacFeatureExtractor:()=>a});var s=i("./src/models/encodec/feature_extraction_encodec.js");class a extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(t,r,i)=>{i.r(r),i.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/detr/image_processing_detr.js":(t,r,i)=>{i.r(r),i.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>n});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(t){let r=await super._call(t),i=[r.pixel_values.dims[0],64,64],s=(0,a.full)(i,1n);return{...r,pixel_mask:s}}post_process_object_detection(...t){return(0,s.post_process_object_detection)(...t)}post_process_panoptic_segmentation(...t){return(0,s.post_process_panoptic_segmentation)(...t)}post_process_instance_segmentation(...t){return(0,s.post_process_instance_segmentation)(...t)}}class o extends n{}},"./src/models/dinov3_vit/image_processing_dinov3_vit.js":(t,r,i)=>{i.r(r),i.d(r,{DINOv3ViTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/donut/image_processing_donut.js":(t,r,i)=>{i.r(r),i.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{pad_image(t,r,i,s={}){let[a,n,o]=r,l=this.image_mean;Array.isArray(this.image_mean)||(l=Array(o).fill(l));let u=this.image_std;Array.isArray(u)||(u=Array(o).fill(l));let d=l.map((t,r)=>-t/u[r]);return super.pad_image(t,r,i,{center:!0,constant_values:d,...s})}}class n extends a{}},"./src/models/dpt/image_processing_dpt.js":(t,r,i)=>{i.r(r),i.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/efficientnet/image_processing_efficientnet.js":(t,r,i)=>{i.r(r),i.d(r,{EfficientNetImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(t){super(t),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(t=>t*t))}}},"./src/models/encodec/feature_extraction_encodec.js":(t,r,i)=>{i.r(r),i.d(r,{EncodecFeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(t){(0,s.validate_audio_inputs)(t,"EncodecFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=this.config.feature_size;if(t.length%r!=0)throw Error(`The length of the audio data must be a multiple of the number of channels (${r}).`);let i=[1,r,t.length/r];return{input_values:new a.Tensor("float32",t,i)}}}},"./src/models/feature_extractors.js":(t,r,i)=>{i.r(r),i.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>o.DacFeatureExtractor,EncodecFeatureExtractor:()=>a.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>l.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>y.ImageProcessor,MoonshineFeatureExtractor:()=>u.MoonshineFeatureExtractor,ParakeetFeatureExtractor:()=>d.ParakeetFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>p.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>h.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>m.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>f.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>g.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor});var s=i("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),a=i("./src/models/encodec/feature_extraction_encodec.js"),n=i("./src/models/clap/feature_extraction_clap.js"),o=i("./src/models/dac/feature_extraction_dac.js"),l=i("./src/models/gemma3n/feature_extraction_gemma3n.js"),u=i("./src/models/moonshine/feature_extraction_moonshine.js"),d=i("./src/models/parakeet/feature_extraction_parakeet.js"),c=i("./src/models/pyannote/feature_extraction_pyannote.js"),p=i("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),h=i("./src/models/snac/feature_extraction_snac.js"),m=i("./src/models/speecht5/feature_extraction_speecht5.js"),f=i("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),g=i("./src/models/wespeaker/feature_extraction_wespeaker.js"),_=i("./src/models/whisper/feature_extraction_whisper.js"),y=i("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(t,r,i)=>{i.r(r),i.d(r,{Florence2Processor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;constructor(t,r,i){super(t,r,i);const{tasks_answer_post_processing_type:s,task_prompts_without_inputs:a,task_prompts_with_input:n}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(a??{})),this.task_prompts_with_input=new Map(Object.entries(n??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(t){"string"==typeof t&&(t=[t]);let r=[];for(let i of t)if(this.task_prompts_without_inputs.has(i))r.push(this.task_prompts_without_inputs.get(i));else{for(let[t,s]of this.task_prompts_with_input)if(i.includes(t)){r.push(s.replaceAll("{input}",i).replaceAll(t,""));break}r.length!==t.length&&r.push(i)}return r}post_process_generation(t,r,i){let s,a=this.tasks_answer_post_processing_type.get(r)??"pure_text";switch(t=t.replaceAll("<s>","").replaceAll("</s>",""),a){case"pure_text":s=t;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":let n="ocr"===a?"quad_boxes":"bboxes",o=t.matchAll(this.regexes[n]),l=[],u=[];for(let[t,r,...s]of o)l.push(r?r.trim():l.at(-1)??""),u.push(s.map((t,r)=>(Number(t)+.5)/this.size_per_bin*i[r%2]));s={labels:l,[n]:u};break;default:throw Error(`Task "${r}" (of type "${a}") not yet implemented.`)}return{[r]:s}}async _call(t,r=null,i={}){if(!t&&!r)throw Error("Either text or images must be provided");let s=await this.image_processor(t,i),a=r?this.tokenizer(this.construct_prompts(r),i):{};return{...s,...a}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(t,r,i)=>{i.r(r),i.d(r,{Gemma3nAudioFeatureExtractor:()=>o});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(t){super(t);const{fft_length:r,feature_size:i,min_frequency:s,max_frequency:a,sampling_rate:o,frame_length:l}=this.config,u=(0,n.mel_filter_bank)(Math.floor(1+r/2),i,s,a,o,null,"htk",!1);this.mel_filters=u,this.window=(0,n.window_function)(l,"hann")}async _extract_fbank_features(t,r){return(0,n.spectrogram)(t,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(t,{max_length:r=48e4,truncation:i=!0,padding:n=!0,pad_to_multiple_of:o=128}={}){if((0,s.validate_audio_inputs)(t,"Gemma3nAudioFeatureExtractor"),i&&t.length>r&&(t=t.slice(0,r)),n&&t.length%o!=0){let r=o-t.length%o,i=new Float64Array(t.length+r);i.set(t),0!==this.config.padding_value&&i.fill(this.config.padding_value,t.length),t=i}let l=await this._extract_fbank_features(t,this.config.max_length),u=(0,a.full)([1,l.dims[0]],!0);return{input_features:l.unsqueeze_(0),input_features_mask:u}}}},"./src/models/gemma3n/processing_gemma3n.js":(t,r,i)=>{i.r(r),i.d(r,{Gemma3nProcessor:()=>l});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/models/auto/feature_extraction_auto.js"),o=i("./src/tokenizers.js");i("./src/utils/image.js"),i("./src/utils/audio.js");class l extends s.Processor{static image_processor_class=a.AutoImageProcessor;static feature_extractor_class=n.AutoFeatureExtractor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(t,r,i){super(t,r,i),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:s,boa_token:a,audio_token:n,eoa_token:o,image_token_id:l,boi_token:u,image_token:d,eoi_token:c}=this.tokenizer.config;this.audio_token_id=s,this.boa_token=a,this.audio_token=n;const p=n.repeat(this.audio_seq_length);this.full_audio_sequence=`

${a}${p}${o}

`,this.image_token_id=l,this.boi_token=u,this.image_token=d;const h=d.repeat(this.image_seq_length);this.full_image_sequence=`

${u}${h}${c}

`}async _call(t,r=null,i=null,s={}){let a,n;return"string"==typeof t&&(t=[t]),i&&(a=await this.feature_extractor(i,s),t=t.map(t=>t.replaceAll(this.audio_token,this.full_audio_sequence))),r&&(n=await this.image_processor(r,s),t=t.map(t=>t.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(t,s),...n,...a}}}},"./src/models/glpn/image_processing_glpn.js":(t,r,i)=>{i.r(r),i.d(r,{GLPNFeatureExtractor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(t,r,i)=>{i.r(r),i.d(r,{GroundingDinoImageProcessor:()=>n});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(t){let r=await super._call(t),i=r.pixel_values.dims,s=(0,a.ones)([i[0],i[2],i[3]]);return{...r,pixel_mask:s}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(t,r,i)=>{i.r(r),i.d(r,{GroundingDinoProcessor:()=>l});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js"),o=i("./src/base/image_processors_utils.js");class l extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;async _call(t,r,i={}){let s=t?await this.image_processor(t,i):{};return{...r?this.tokenizer(r,i):{},...s}}post_process_grounded_object_detection(t,r,{box_threshold:i=.25,text_threshold:s=.25,target_sizes:a=null}={}){let{logits:n,pred_boxes:l}=t,u=n.dims[0];if(null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=n.dims.at(1),c=n.sigmoid(),p=c.max(-1).tolist(),h=l.tolist().map(t=>t.map(t=>(0,o.center_to_corners_format)(t))),m=[];for(let t=0;t<u;++t){let n=null!==a?a[t]:null;null!==n&&(h[t]=h[t].map(t=>t.map((t,r)=>t*n[(r+1)%2])));let o=p[t],l=[],u=[],f=[];for(let a=0;a<d;++a){let n=o[a];if(n<=i)continue;let d=h[t][a],p=c[t][a];l.push(n),f.push(d);let m=function(t,r){let i=t.dims.at(-1)-1,s=t.tolist();s.fill(!1,0,1),s.fill(!1,i);let a=r.tolist();return s.map((t,r)=>t?r:null).filter(t=>null!==t).map(t=>a[t])}(p.gt(s),r[t]);u.push(m)}m.push({scores:l,boxes:f,labels:this.batch_decode(u)})}return m}}},"./src/models/idefics3/image_processing_idefics3.js":(t,r,i)=>{i.r(r),i.d(r,{Idefics3ImageProcessor:()=>n});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(t){super(t),this.do_image_splitting=t.do_image_splitting??!0,this.max_image_size=t.max_image_size}get_resize_for_vision_encoder(t,r){let[i,s]=t.dims.slice(-2),a=s/i;return s>=i?i=Math.ceil((i=Math.floor((s=Math.ceil(s/r)*r)/a))/r)*r:s=Math.ceil((s=Math.floor((i=Math.ceil(i/r)*r)*a))/r)*r,{height:i,width:s}}async _call(t,{do_image_splitting:r=null,return_row_col_info:i=!1}={}){let s,n,o;if(Array.isArray(t)){if(0===t.length||!t[0])throw Error("No images provided.");s=Array.isArray(t[0])?t:[t]}else s=[[t]];let l=[],u=[],d=[],c=[],p=[];for(let t of s){let i,s=await Promise.all(t.map(t=>this.preprocess(t)));c.push(...s.map(t=>t.original_size)),p.push(...s.map(t=>t.reshaped_input_size)),s.forEach(t=>t.pixel_values.unsqueeze_(0));let{longest_edge:n}=this.max_image_size;if(r??this.do_image_splitting){let t=Array(s.length),r=Array(s.length);i=await Promise.all(s.map(async(i,s)=>{let o=this.get_resize_for_vision_encoder(i.pixel_values,n),l=await (0,a.interpolate_4d)(i.pixel_values,{size:[o.height,o.width]}),{frames:u,num_splits_h:d,num_splits_w:c}=await this.split_image(l,this.max_image_size);return t[s]=d,r[s]=c,(0,a.cat)(u,0)})),u.push(t),d.push(r)}else{let t=[n,n];i=await Promise.all(s.map(r=>(0,a.interpolate_4d)(r.pixel_values,{size:t}))),u.push(Array(s.length).fill(0)),d.push(Array(s.length).fill(0))}l.push((0,a.cat)(i,0))}let h=l.length,[m,f,g,_]=l[0].dims;if(1===h)n=l[0].unsqueeze_(0),o=(0,a.full)([h,m,g,_],!0);else{let t=Math.max(...l.map(t=>t.dims.at(0))),r=(o=(0,a.full)([h,t,g,_],!0)).data,i=t*g*_;for(let s=0;s<h;++s){let n=l[s].dims[0];if(n<t){l[s]=(0,a.cat)([l[s],(0,a.full)([t-n,f,g,_],0)],0);let o=s*i+n*g*_,u=(s+1)*i;r.fill(!1,o,u)}}n=(0,a.stack)(l,0)}return{pixel_values:n,pixel_attention_mask:o,original_sizes:c,reshaped_input_sizes:p,...i?{rows:u,cols:d}:{}}}async split_image(t,{longest_edge:r}){let i=[],[s,n]=t.dims.slice(-2),o=0,l=0;if(s>r||n>r){o=Math.ceil(s/r),l=Math.ceil(n/r);let u=Math.ceil(s/o),d=Math.ceil(n/l);for(let r=0;r<o;++r)for(let c=0;c<l;++c){let p,h,m,f;r===o-1?(h=s-u,f=s):(h=r*u,f=(r+1)*u),c===l-1?(p=n-d,m=n):(p=c*d,m=(c+1)*d);let g=[h,p],_=[f,m],y=await (0,a.slice)(t,g,_,[2,3]);i.push(y)}(s!==r||n!==r)&&(t=await (0,a.interpolate_4d)(t,{size:[r,r]}))}return i.push(t),{frames:i,num_splits_h:o,num_splits_w:l}}}},"./src/models/idefics3/processing_idefics3.js":(t,r,i)=>{i.r(r),i.d(r,{Idefics3Processor:()=>l});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");i("./src/utils/image.js");var o=i("./src/utils/core.js");class l extends s.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(t,r=null,i={}){let s;i.return_row_col_info??=!0,r&&(s=await this.image_processor(r,i)),Array.isArray(t)||(t=[t]);let a=s.rows??[Array(t.length).fill(0)],n=s.cols??[Array(t.length).fill(0)],l=this.config.image_seq_len,u=[],d=[];for(let r=0;r<t.length;++r){let i=t[r],s=a[r],c=n[r];u.push((0,o.count)(i,this.image_token));let p=s.map((t,r)=>(function(t,r,i,s,a,n){if(0===t&&0===r)return`${s}${n}`+a.repeat(i)+`${s}`;let o="";for(let n=0;n<t;++n){for(let t=0;t<r;++t)o+=s+`<row_${n+1}_col_${t+1}>`+a.repeat(i);o+="\n"}return o+(`
${s}${n}`+a.repeat(i)+`${s}`)})(t,c[r],l,this.fake_image_token,this.image_token,this.global_img_token)),h=i.split(this.image_token);if(0===h.length)throw Error("The image token should be present in the text.");let m=h[0];for(let t=0;t<p.length;++t)m+=p[t]+h[t+1];d.push(m)}return{...this.tokenizer(d),...s}}}},"./src/models/image_processors.js":(t,r,i)=>{i.r(r),i.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>a.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>l.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>l.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>c.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>h.DPTFeatureExtractor,DPTImageProcessor:()=>h.DPTImageProcessor,DeiTFeatureExtractor:()=>u.DeiTFeatureExtractor,DeiTImageProcessor:()=>u.DeiTImageProcessor,DetrFeatureExtractor:()=>d.DetrFeatureExtractor,DetrImageProcessor:()=>d.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>m.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>g.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>b.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>w.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>x.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>M.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>M.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>k.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>k.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>$.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>$.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>C.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>C.MobileViTImageProcessor,NougatImageProcessor:()=>S.NougatImageProcessor,OwlViTFeatureExtractor:()=>E.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>E.OwlViTImageProcessor,Owlv2ImageProcessor:()=>P.Owlv2ImageProcessor,Phi3VImageProcessor:()=>F.Phi3VImageProcessor,PvtImageProcessor:()=>A.PvtImageProcessor,Qwen2VLImageProcessor:()=>I.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>z.RTDetrImageProcessor,SamImageProcessor:()=>L.SamImageProcessor,SegformerFeatureExtractor:()=>O.SegformerFeatureExtractor,SegformerImageProcessor:()=>O.SegformerImageProcessor,SiglipImageProcessor:()=>B.SiglipImageProcessor,SmolVLMImageProcessor:()=>D.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,VLMImageProcessor:()=>y.VLMImageProcessor,ViTFeatureExtractor:()=>j.ViTFeatureExtractor,ViTImageProcessor:()=>j.ViTImageProcessor,VitMatteImageProcessor:()=>R.VitMatteImageProcessor,VitPoseImageProcessor:()=>V.VitPoseImageProcessor,YolosFeatureExtractor:()=>G.YolosFeatureExtractor,YolosImageProcessor:()=>G.YolosImageProcessor});var s=i("./src/models/beit/image_processing_beit.js"),a=i("./src/models/bit/image_processing_bit.js"),n=i("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=i("./src/models/clip/image_processing_clip.js"),l=i("./src/models/convnext/image_processing_convnext.js"),u=i("./src/models/deit/image_processing_deit.js"),d=i("./src/models/detr/image_processing_detr.js"),c=i("./src/models/dinov3_vit/image_processing_dinov3_vit.js"),p=i("./src/models/donut/image_processing_donut.js"),h=i("./src/models/dpt/image_processing_dpt.js"),m=i("./src/models/efficientnet/image_processing_efficientnet.js"),f=i("./src/models/glpn/image_processing_glpn.js"),g=i("./src/models/grounding_dino/image_processing_grounding_dino.js"),_=i("./src/models/idefics3/image_processing_idefics3.js"),y=i("./src/models/janus/image_processing_janus.js"),b=i("./src/models/jina_clip/image_processing_jina_clip.js"),w=i("./src/models/llava_onevision/image_processing_llava_onevision.js"),x=i("./src/models/mask2former/image_processing_mask2former.js"),v=i("./src/models/maskformer/image_processing_maskformer.js"),M=i("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=i("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),k=i("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),$=i("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),C=i("./src/models/mobilevit/image_processing_mobilevit.js"),S=i("./src/models/nougat/image_processing_nougat.js"),P=i("./src/models/owlv2/image_processing_owlv2.js"),E=i("./src/models/owlvit/image_processing_owlvit.js"),F=i("./src/models/phi3_v/image_processing_phi3_v.js"),A=i("./src/models/pvt/image_processing_pvt.js"),I=i("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),z=i("./src/models/rt_detr/image_processing_rt_detr.js"),L=i("./src/models/sam/image_processing_sam.js"),O=i("./src/models/segformer/image_processing_segformer.js"),B=i("./src/models/siglip/image_processing_siglip.js"),D=i("./src/models/smolvlm/image_processing_smolvlm.js"),N=i("./src/models/swin2sr/image_processing_swin2sr.js"),j=i("./src/models/vit/image_processing_vit.js"),R=i("./src/models/vitmatte/image_processing_vitmatte.js"),V=i("./src/models/vitpose/image_processing_vitpose.js"),G=i("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(t,r,i)=>{i.r(r),i.d(r,{VLMImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(t){super({do_pad:!0,pad_size:{width:t.image_size,height:t.image_size},...t}),this.constant_values=this.config.background_color.map(t=>t*this.rescale_factor)}pad_image(t,r,i,s){return super.pad_image(t,r,i,{constant_values:this.constant_values,center:!0,...s})}}},"./src/models/janus/processing_janus.js":(t,r,i)=>{i.r(r),i.d(r,{VLChatProcessor:()=>d});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js"),o=i("./src/utils/core.js"),l=i("./src/utils/tensor.js"),u=i("./src/utils/image.js");class d extends s.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;constructor(t,r,i){super(t,r,i),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(t,{images:r=null,chat_template:i="default"}={}){r?Array.isArray(r)||(r=[r]):r=await Promise.all(t.filter(t=>t.images).flatMap(t=>t.images).map(t=>u.RawImage.read(t)));let s=this.tokenizer,a=s.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0,chat_template:i}),n=t=>s.encode(t,{add_special_tokens:!1}),d=a.split(this.image_tag),c=d.length-1;if(r.length!==c)throw Error(`Number of images provided (${r.length}) does not match number of "${this.image_tag}" image tags (${c})`);let[p,h,m]=s.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]),f=n(d[0]),g=Array(f.length).fill(!1);for(let t=1;t<d.length;++t){let r=Array(this.num_image_tokens).fill(p),i=n(d[t]);f=(0,o.mergeArrays)(f,[h],r,[m],i);let s=Array(this.num_image_tokens).fill(!0);g=(0,o.mergeArrays)(g,[!1],s,[!1],Array(i.length).fill(!1))}let _=[1,f.length],y={input_ids:new l.Tensor("int64",f,_),attention_mask:new l.Tensor("int64",Array(f.length).fill(1),_),images_seq_mask:new l.Tensor("bool",g,_),images_emb_mask:new l.Tensor("bool",Array(c*this.num_image_tokens).fill(!0),[1,c,this.num_image_tokens])};if(r&&r.length>0){let t=await this.image_processor(r);return t.pixel_values.unsqueeze_(0),{...y,...t}}return y}}},"./src/models/jina_clip/image_processing_jina_clip.js":(t,r,i)=>{i.r(r),i.d(r,{JinaCLIPImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(t){const{resize_mode:r,fill_color:i,interpolation:s,size:a,...n}=t;super({...n,size:"squash"===r?{width:a,height:a}:"shortest"===r?{shortest_edge:a}:{longest_edge:a},resample:"bicubic"===s?3:2,do_center_crop:!0,crop_size:a,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(t,r,i)=>{i.r(r),i.d(r,{JinaCLIPProcessor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;async _call(t=null,r=null,i={}){if(!t&&!r)throw Error("Either text or images must be provided");let s=t?this.tokenizer(t,i):{},a=r?await this.image_processor(r,i):{};return{...s,...a}}}},"./src/models/llava/processing_llava.js":(t,r,i)=>{i.r(r),i.d(r,{LlavaProcessor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;static uses_processor_config=!0;async _call(t,r=null,i={}){let s=await this.image_processor(t,i);if(r){let[t,i]=s.pixel_values.dims.slice(-2),{image_token:a,patch_size:n,num_additional_image_tokens:o}=this.config,l=Math.floor(t/n)*Math.floor(i/n)+o;Array.isArray(r=structuredClone(r))||(r=[r]);for(let t=0;t<r.length;++t)r[t]=r[t].replace(a,a.repeat(l))}let a=r?this.tokenizer(r,i):{};return{...s,...a}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(t,r,i)=>{i.r(r),i.d(r,{LlavaOnevisionImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(t,r,i)=>{i.r(r),i.d(r,{Mask2FormerImageProcessor:()=>a});var s=i("./src/models/maskformer/image_processing_maskformer.js");class a extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(t,r,i)=>{i.r(r),i.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_panoptic_segmentation(...t){return(0,s.post_process_panoptic_segmentation)(...t)}post_process_instance_segmentation(...t){return(0,s.post_process_instance_segmentation)(...t)}}class n extends a{}},"./src/models/mgp_str/processing_mgp_str.js":(t,r,i)=>{i.r(r),i.d(r,{MgpstrProcessor:()=>u});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js"),o=i("./src/utils/maths.js");let l={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class u extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(t,r){if(!l.hasOwnProperty(r))throw Error(`Format ${r} is not supported.`);let[i,s]=l[r],a=this[i].bind(this),[n,u]=t.dims,d=[],c=[],p=t.tolist();for(let t=0;t<n;++t){let r=p[t],i=[],a=[];for(let t=1;t<u;++t){let[n,l]=(0,o.max)((0,o.softmax)(r[t]));if(a.push(n),l==s)break;i.push(l)}let n=a.length>0?a.reduce((t,r)=>t*r,1):0;c.push(i),d.push(n)}return[a(c),d]}char_decode(t){return this.char_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}bpe_decode(t){return this.bpe_tokenizer.batch_decode(t)}wp_decode(t){return this.wp_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}batch_decode([t,r,i]){let[s,a]=this._decode_helper(t,"char"),[n,l]=this._decode_helper(r,"bpe"),[u,d]=this._decode_helper(i,"wp"),c=[],p=[];for(let t=0;t<s.length;++t){let[r,i]=(0,o.max)([a[t],l[t],d[t]]);c.push([s[t],n[t],u[t]][i]),p.push(r)}return{generated_text:c,scores:p,char_preds:s,bpe_preds:n,wp_preds:u}}static async from_pretrained(...t){let r=await super.from_pretrained(...t),i=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),s=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return r.components={image_processor:r.image_processor,char_tokenizer:r.tokenizer,bpe_tokenizer:i,wp_tokenizer:s},r}async _call(t,r=null){let i=await this.image_processor(t);return r&&(i.labels=this.tokenizer(r).input_ids),i}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(t,r,i)=>{i.r(r),i.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(t,r,i)=>{i.r(r),i.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(t,r,i)=>{i.r(r),i.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(t,r,i)=>{i.r(r),i.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilevit/image_processing_mobilevit.js":(t,r,i)=>{i.r(r),i.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/moonshine/feature_extraction_moonshine.js":(t,r,i)=>{i.r(r),i.d(r,{MoonshineFeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(t){(0,s.validate_audio_inputs)(t,"MoonshineFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,t.length];return{input_values:new a.Tensor("float32",t,r)}}}},"./src/models/moonshine/processing_moonshine.js":(t,r,i)=>{i.r(r),i.d(r,{MoonshineProcessor:()=>o});var s=i("./src/models/auto/feature_extraction_auto.js"),a=i("./src/tokenizers.js"),n=i("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/nougat/image_processing_nougat.js":(t,r,i)=>{i.r(r),i.d(r,{NougatImageProcessor:()=>a});var s=i("./src/models/donut/image_processing_donut.js");class a extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(t,r,i)=>{i.r(r),i.d(r,{Owlv2ImageProcessor:()=>a});var s=i("./src/models/owlvit/image_processing_owlvit.js");class a extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(t,r,i)=>{i.r(r),i.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...t){return(0,s.post_process_object_detection)(...t)}}class n extends a{}},"./src/models/owlvit/processing_owlvit.js":(t,r,i)=>{i.r(r),i.d(r,{OwlViTProcessor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(t,r,i)=>{i.r(r),i.d(r,{PaliGemmaProcessor:()=>l});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");let o="<image>";class l extends s.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;static uses_processor_config=!1;async _call(t,r=null,i={}){let s;r||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),r=""),Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let a=this.tokenizer.bos_token,n=this.image_processor.config.image_seq_length;r.some(t=>t.includes(o))?s=r.map(t=>{let r=t.replaceAll(o,o.repeat(n)),i=r.lastIndexOf(o),s=-1===i?0:i+o.length;return r.slice(0,s)+a+r.slice(s)+"\n"}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),s=r.map(r=>{var i;return i=t.length,`${o.repeat(n*i)}${a}${r}
`}));let l=this.tokenizer(s,i);return{...await this.image_processor(t,i),...l}}}},"./src/models/parakeet/feature_extraction_parakeet.js":(t,r,i)=>{i.r(r),i.d(r,{ParakeetFeatureExtractor:()=>o});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(t){super(t),this.config.mel_filters??=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,this.config.sampling_rate/2,this.config.sampling_rate,"slaney","slaney");const r=(0,n.window_function)(this.config.win_length,"hann",{periodic:!1});this.window=new Float64Array(this.config.n_fft);const i=Math.floor((this.config.n_fft-this.config.win_length)/2);this.window.set(r,i)}async _extract_fbank_features(t){let r=this.config.preemphasis;t=new Float64Array(t);for(let i=t.length-1;i>=1;--i)t[i]-=r*t[i-1];return await (0,n.spectrogram)(t,this.window,this.window.length,this.config.hop_length,{fft_length:this.config.n_fft,power:2,mel_filters:this.config.mel_filters,log_mel:"log",mel_floor:-1/0,pad_mode:"constant",center:!0,transpose:!0,mel_offset:5960464477539063e-23})}async _call(t){(0,s.validate_audio_inputs)(t,"ParakeetFeatureExtractor");let r=await this._extract_fbank_features(t),i=Math.floor((t.length+2*Math.floor(this.config.n_fft/2)-this.config.n_fft)/this.config.hop_length),n=r.data;n.fill(0,i*r.dims[1]);let[o,l]=r.dims,u=new Float64Array(l),d=new Float64Array(l);for(let t=0;t<i;++t){let r=t*l;for(let t=0;t<l;++t){let i=n[r+t];u[t]+=i,d[t]+=i*i}}let c=i>1?i-1:1;for(let t=0;t<l;++t){let r=u[t]/i,s=1/(Math.sqrt((d[t]-i*r*r)/c)+1e-5);for(let a=0;a<i;++a){let i=a*l+t;n[i]=(n[i]-r)*s}}let p=new BigInt64Array(o);return p.fill(1n,0,i),{input_features:r.unsqueeze_(0),attention_mask:new a.Tensor("int64",p,[1,o])}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(t,r,i)=>{i.r(r),i.d(r,{Phi3VImageProcessor:()=>d});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");let n=[2,3],{ceil:o,floor:l,sqrt:u}=Math;class d extends s.ImageProcessor{constructor(t){super({...t,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=t.num_crops}calc_num_image_tokens_from_image_size(t,r){let{num_img_tokens:i}=this.config;return l((l(r/336)*l(t/336)+1)*i+1+(l(r/336)+1)*u(i))}get_resize_output_image_size(t,r){let i=this._num_crops,[s,a]=t.size,n=s/a,o=1;for(;o*Math.ceil(o/n)<=i;)o+=1;let l=Math.floor(336*(o-=1)),u=Math.floor(l/n);return[l,u]}pad_image(t,r,i,s={}){let[a,n]=r,l=336*o(a/336),u=336*o(n/336),d=[1,1,1].map((t,r)=>(t-this.image_mean[r])/this.image_std[r]);return super.pad_image(t,r,{width:u,height:l},{center:!0,constant_values:d,...s})}async _call(t,{num_crops:r=null}={}){if(this._num_crops=r??=this.config.num_crops,r<4||u(r)%1!=0)throw Error("num_crops must be a square number >= 4");Array.isArray(t)||(t=[t]);let i=t.length,s=await Promise.all(t.map(t=>this.preprocess(t))),d=s.map(t=>t.original_size),c=s.map(t=>t.reshaped_input_size),p=[];for(let{pixel_values:t}of s){t.unsqueeze_(0);let[i,s]=t.dims.slice(-2),o=await (0,a.interpolate_4d)(t,{size:[336,336],mode:"bicubic"});if(r>0){let d=[],c=u(r),h=l(s/c),m=l(i/c);for(let r=0;r<c;++r)for(let o=0;o<c;++o){let l,u,p,f;r===c-1?(u=i-m,f=i):(u=r*m,f=(r+1)*m),o===c-1?(l=s-h,p=s):(l=o*h,p=(o+1)*h);let g=[u,l],_=[f,p],y=await (0,a.slice)(t,g,_,n);d.push(y)}let f=await (0,a.interpolate_4d)((0,a.cat)(d,0),{size:[336,336],mode:"bicubic"});p.push((0,a.cat)([o,f],0))}else p.push(o)}let h=(0,a.stack)(p,0),m=c.map(t=>t.map(t=>336*o(t/336)));return{pixel_values:h,original_sizes:d,reshaped_input_sizes:c,image_sizes:new a.Tensor("int64",m.flat(),[i,2]),num_img_tokens:m.map(([t,r])=>this.calc_num_image_tokens_from_image_size(r,t))}}}},"./src/models/phi3_v/processing_phi3_v.js":(t,r,i)=>{i.r(r),i.d(r,{Phi3VProcessor:()=>u});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");i("./src/utils/image.js");let o="<|image|>",l=/<\|image_\d+\|>/g;class u extends s.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(t,r=null,{padding:i=!0,truncation:s=!0,num_crops:a=null}={}){let n,u;if(Array.isArray(t)||(t=[t]),r){let{num_img_tokens:d}=u=await this.image_processor(r,{num_crops:a}),c=t.map((t,r)=>t.split(l).join(o.repeat(d[r])));n=this.tokenizer(c,{padding:i,truncation:s});let p=this.tokenizer.model.convert_tokens_to_ids([o])[0];n.input_ids.map_(t=>t==p?-t:t)}else n=this.tokenizer(t);return{...n,...u}}}},"./src/models/processors.js":(t,r,i)=>{i.r(r),i.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>a.Gemma3nProcessor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>u.JinaCLIPProcessor,LlavaProcessor:()=>d.LlavaProcessor,MgpstrProcessor:()=>c.MgpstrProcessor,MoonshineProcessor:()=>p.MoonshineProcessor,OwlViTProcessor:()=>h.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>m.Phi3VProcessor,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>y.SamProcessor,SmolVLMProcessor:()=>b.SmolVLMProcessor,SpeechT5Processor:()=>w.SpeechT5Processor,UltravoxProcessor:()=>x.UltravoxProcessor,VLChatProcessor:()=>l.VLChatProcessor,VoxtralProcessor:()=>v.VoxtralProcessor,Wav2Vec2Processor:()=>M.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>T.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>k.WhisperProcessor});var s=i("./src/models/florence2/processing_florence2.js"),a=i("./src/models/gemma3n/processing_gemma3n.js"),n=i("./src/models/grounding_dino/processing_grounding_dino.js"),o=i("./src/models/idefics3/processing_idefics3.js"),l=i("./src/models/janus/processing_janus.js"),u=i("./src/models/jina_clip/processing_jina_clip.js"),d=i("./src/models/llava/processing_llava.js"),c=i("./src/models/mgp_str/processing_mgp_str.js"),p=i("./src/models/moonshine/processing_moonshine.js"),h=i("./src/models/owlvit/processing_owlvit.js"),m=i("./src/models/phi3_v/processing_phi3_v.js"),f=i("./src/models/paligemma/processing_paligemma.js"),g=i("./src/models/pyannote/processing_pyannote.js"),_=i("./src/models/qwen2_vl/processing_qwen2_vl.js"),y=i("./src/models/sam/processing_sam.js"),b=i("./src/models/smolvlm/processing_smolvlm.js"),w=i("./src/models/speecht5/processing_speecht5.js"),x=i("./src/models/ultravox/processing_ultravox.js"),v=i("./src/models/voxtral/processing_voxtral.js"),M=i("./src/models/wav2vec2/processing_wav2vec2.js"),T=i("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),k=i("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(t,r,i)=>{i.r(r),i.d(r,{PvtImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(t,r,i)=>{i.r(r),i.d(r,{PyAnnoteFeatureExtractor:()=>o});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/maths.js");class o extends s.FeatureExtractor{async _call(t){(0,s.validate_audio_inputs)(t,"PyAnnoteFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,1,t.length];return{input_values:new a.Tensor("float32",t,r)}}samples_to_frames(t){return(t-this.config.offset)/this.config.step}post_process_speaker_diarization(t,r){let i=r/this.samples_to_frames(r)/this.config.sampling_rate,s=[];for(let r of t.tolist()){let t=[],a=-1;for(let i=0;i<r.length;++i){let s=(0,n.softmax)(r[i]),[o,l]=(0,n.max)(s),[u,d]=[i,i+1];l!==a?(a=l,t.push({id:l,start:u,end:d,score:o})):(t.at(-1).end=d,t.at(-1).score+=o)}s.push(t.map(({id:t,start:r,end:s,score:a})=>({id:t,start:r*i,end:s*i,confidence:a/(s-r)})))}return s}}},"./src/models/pyannote/processing_pyannote.js":(t,r,i)=>{i.r(r),i.d(r,{PyAnnoteProcessor:()=>n});var s=i("./src/base/processing_utils.js"),a=i("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{static feature_extractor_class=a.PyAnnoteFeatureExtractor;async _call(t){return await this.feature_extractor(t)}post_process_speaker_diarization(...t){return this.feature_extractor.post_process_speaker_diarization(...t)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(t,r,i)=>{i.r(r),i.d(r,{Qwen2VLImageProcessor:()=>n});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(t,...r){let{pixel_values:i,original_sizes:s,reshaped_input_sizes:n}=await super._call(t,...r),o=i,{temporal_patch_size:l,merge_size:u,patch_size:d}=this.config;1===o.dims[0]&&(o=(0,a.cat)(Array.from({length:l},()=>o),0));let c=o.dims[0]/l,p=o.dims[1],h=Math.floor(o.dims[2]/d),m=Math.floor(o.dims[3]/d);return{pixel_values:o.view(c,l,p,Math.floor(h/u),u,d,Math.floor(m/u),u,d).permute(0,3,6,4,7,2,1,5,8).view(c*h*m,p*l*d*d),image_grid_thw:new a.Tensor("int64",[c,h,m],[1,3]),original_sizes:s,reshaped_input_sizes:n}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(t,r,i)=>{i.r(r),i.d(r,{Qwen2VLProcessor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js"),n=i("./src/tokenizers.js");i("./src/utils/image.js");class o extends s.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(t,r=null){let i,s;if(Array.isArray(t)||(t=[t]),r&&(s=(i=await this.image_processor(r)).image_grid_thw),s){let r=this.image_processor.config.merge_size**2,i=0,a=s.tolist();t=t.map(t=>{for(;t.includes("<|image_pad|>");){let s=Number(a[i++].reduce((t,r)=>t*r,1n));t=t.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(s/r)))}return t.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(t),...i}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(t,r,i)=>{i.r(r),i.d(r,{RTDetrImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...t){return(0,s.post_process_object_detection)(...t)}}},"./src/models/sam/image_processing_sam.js":(t,r,i)=>{i.r(r),i.d(r,{SamImageProcessor:()=>o});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/core.js"),n=i("./src/utils/tensor.js");class o extends s.ImageProcessor{reshape_input_points(t,r,i,s=!1){t=structuredClone(t);let o=(0,a.calculateDimensions)(t);if(3===o.length)s||(o=[1,...o]),t=[t];else if(4!==o.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let s=0;s<t.length;++s){let a=r[s],n=i[s],o=[n[0]/a[0],n[1]/a[1]];for(let r=0;r<t[s].length;++r)for(let i=0;i<t[s][r].length;++i)for(let a=0;a<t[s][r][i].length;++a)t[s][r][i][a]*=o[a%2]}return new n.Tensor("float32",Float32Array.from(t.flat(1/0)),o)}add_input_labels(t,r){let i=(0,a.calculateDimensions)(t);if(2===i.length)i=[1,...i],t=[t];else if(3!==i.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(i.some((t,i)=>t!==r.dims[i]))throw Error(`The first ${i.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",t.flat(1/0).map(BigInt),i)}async _call(t,{input_points:r=null,input_labels:i=null,input_boxes:s=null}={}){let a=await super._call(t);if(r&&(a.input_points=this.reshape_input_points(r,a.original_sizes,a.reshaped_input_sizes)),i){if(!a.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");a.input_labels=this.add_input_labels(i,a.input_points)}return s&&(a.input_boxes=this.reshape_input_points(s,a.original_sizes,a.reshaped_input_sizes,!0)),a}async post_process_masks(t,r,i,{mask_threshold:s=0,binarize:a=!0,pad_size:o=null}={}){let l=[],u=[(o=o??this.pad_size).height,o.width];for(let o=0;o<r.length;++o){let d=r[o],c=i[o],p=await (0,n.interpolate_4d)(t[o],{mode:"bilinear",size:u});if(p=p.slice(null,null,[0,c[0]],[0,c[1]]),p=await (0,n.interpolate_4d)(p,{mode:"bilinear",size:d}),a){let t=p.data,r=new Uint8Array(t.length);for(let i=0;i<t.length;++i)t[i]>s&&(r[i]=1);p=new n.Tensor("bool",r,p.dims)}l.push(p)}return l}generate_crop_boxes(t,r,{crop_n_layers:i=0,overlap_ratio:s=512/1500,points_per_crop:a=32,crop_n_points_downscale_factor:n=1}={}){}}},"./src/models/sam/processing_sam.js":(t,r,i)=>{i.r(r),i.d(r,{SamProcessor:()=>n});var s=i("./src/base/processing_utils.js"),a=i("./src/models/auto/image_processing_auto.js");class n extends s.Processor{static image_processor_class=a.AutoImageProcessor;async _call(...t){return await this.image_processor(...t)}post_process_masks(...t){return this.image_processor.post_process_masks(...t)}reshape_input_points(...t){return this.image_processor.reshape_input_points(...t)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(t,r,i)=>{i.r(r),i.d(r,{SeamlessM4TFeatureExtractor:()=>o});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js"),n=i("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(t){super(t);const r=this.config.sampling_rate,i=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=i,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(t,r){return t=t.map(t=>32768*t),(0,n.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t,{padding:r=!0,pad_to_multiple_of:i=2,do_normalize_per_mel_bins:n=!0,return_attention_mask:o=!0}={}){let l;(0,s.validate_audio_inputs)(t,"SeamlessM4TFeatureExtractor");let u=await this._extract_fbank_features(t,this.config.max_length);if(n){let[t,r]=u.dims,i=u.data;for(let s=0;s<r;++s){let a=0;for(let n=0;n<t;++n)a+=i[n*r+s];let n=a/t,o=0;for(let a=0;a<t;++a)o+=(i[a*r+s]-n)**2;let l=Math.sqrt((o/=t-1)+1e-7);for(let a=0;a<t;++a){let t=a*r+s;i[t]=(i[t]-n)/l}}}if(r){let[t,r]=u.dims,s=u.data,n=t%i;if(n>0){let i=new Float32Array(r*(t+n));i.set(s),i.fill(this.config.padding_value,s.length);let d=t+n;u=new a.Tensor(u.type,i,[d,r]),o&&(l=new a.Tensor("int64",new BigInt64Array(d),[1,d])).data.fill(1n,0,t)}}let[d,c]=u.dims,p=this.config.stride;if(0!=d%p)throw Error(`The number of frames (${d}) must be a multiple of the stride (${p}).`);let h=u.view(1,Math.floor(d/p),c*p),m={input_features:h};if(o){let t=h.dims[1],r=new BigInt64Array(t);if(l){let t=l.data;for(let i=1,s=0;i<d;i+=p,++s)r[s]=t[i]}else r.fill(1n);m.attention_mask=new a.Tensor("int64",r,[1,t])}return m}}},"./src/models/segformer/image_processing_segformer.js":(t,r,i)=>{i.r(r),i.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_semantic_segmentation(...t){return(0,s.post_process_semantic_segmentation)(...t)}}class n extends a{}},"./src/models/siglip/image_processing_siglip.js":(t,r,i)=>{i.r(r),i.d(r,{SiglipImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(t,r,i)=>{i.r(r),i.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=i("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(t,r,i)=>{i.r(r),i.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=i("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(t,r,i)=>{i.r(r),i.d(r,{SnacFeatureExtractor:()=>a});var s=i("./src/models/dac/feature_extraction_dac.js");class a extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(t,r,i)=>{i.r(r),i.d(r,{SpeechT5FeatureExtractor:()=>a});var s=i("./src/base/feature_extraction_utils.js");class a extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(t,r,i)=>{i.r(r),i.d(r,{SpeechT5Processor:()=>o});var s=i("./src/base/processing_utils.js"),a=i("./src/tokenizers.js"),n=i("./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(t,r,i)=>{i.r(r),i.d(r,{Swin2SRImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{pad_image(t,r,i,s={}){let[a,n,o]=r;return super.pad_image(t,r,{width:n+(i-n%i)%i,height:a+(i-a%i)%i},{mode:"symmetric",center:!1,constant_values:-1,...s})}}},"./src/models/ultravox/processing_ultravox.js":(t,r,i)=>{i.r(r),i.d(r,{UltravoxProcessor:()=>o});var s=i("./src/models/auto/feature_extraction_auto.js"),a=i("./src/tokenizers.js"),n=i("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!0;async _call(t,r=null,i={}){if(Array.isArray(t))throw Error("Batched inputs are not supported yet.");let s={};if(r){let a=r.length,{input_features:n}=await this.feature_extractor(r,{...i,max_length:a}),o=1+Math.ceil(Math.round(a/this.config.encoder_ds_factor+1e-4)/this.config.stack_factor);s.audio_token_len=[o],s.audio_values=n;let l=this.config.audio_placeholder;if(!t.includes(l))throw Error(`The input text does not contain the image token ${l}.`);t=t.replaceAll(l,l.repeat(o))}return{...this.tokenizer(t,{add_special_tokens:!1,...i}),...s}}}},"./src/models/vit/image_processing_vit.js":(t,r,i)=>{i.r(r),i.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/vitmatte/image_processing_vitmatte.js":(t,r,i)=>{i.r(r),i.d(r,{VitMatteImageProcessor:()=>n});var s=i("./src/base/image_processors_utils.js"),a=i("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(t,r){Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let i=await Promise.all(t.map(t=>this.preprocess(t))),s=await Promise.all(r.map(t=>this.preprocess(t,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,a.stack)(i.map((t,r)=>(0,a.cat)([t.pixel_values,s[r].pixel_values],0)),0),original_sizes:i.map(t=>t.original_size),reshaped_input_sizes:i.map(t=>t.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(t,r,i)=>{i.r(r),i.d(r,{VitPoseImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_pose_estimation(t,r,{threshold:i=null}={}){let s=t.tolist(),[a,n,o,l]=t.dims,u=[];for(let t=0;t<a;++t){let a=s[t],n=r[t],d=[];for(let t=0;t<n.length;++t){let r=n[t],s=[],u=[],c=[],p=r.at(-2)/l,h=r.at(-1)/o;for(let t=0;t<a.length;++t){let[r,n]=[0,0],o=0,l=-1/0,d=a[t];for(let t=0;t<d.length;++t){let i=d[t];for(let s=0;s<i.length;++s){let a=i[s];o+=a,l=Math.max(l,a),r+=(s+.5)*a,n+=t*a}}if(null!=i&&l<i)continue;let m=[p*r/o,h*n/o];s.push(m),c.push(t),u.push(l)}d.push({bbox:r,scores:u,labels:c,keypoints:s})}u.push(d)}return u}}},"./src/models/voxtral/processing_voxtral.js":(t,r,i)=>{i.r(r),i.d(r,{VoxtralProcessor:()=>u});var s=i("./src/models/auto/feature_extraction_auto.js"),a=i("./src/tokenizers.js"),n=i("./src/base/processing_utils.js"),o=i("./src/utils/tensor.js");let l="[AUDIO]";class u extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!1;async _call(t,r=null,i={}){if(Array.isArray(t))throw Error("Batched inputs are not supported yet.");let s={};if(r){if(!t.includes(l))throw Error(`The input text does not contain the audio token ${l}.`);Array.isArray(r)||(r=[r]);let a=t.split(l),n=a.length-1;if(n!==r.length)throw Error(`The number of audio inputs (${r.length}) does not match the number of audio tokens in the text (${n}).`);let u=this.feature_extractor.config.n_samples,d=r.map(t=>(function(t,r){let i=[];for(let s=0;s<t.length;s+=r)i.push(t.subarray(s,Math.min(s+r,t.length)));return i})(t,u)),c=d.map(t=>t.length),p=d.flat(),h=(await Promise.all(p.map(t=>this.feature_extractor(t,i)))).map(t=>t.input_features);s.audio_values=h.length>1?(0,o.cat)(h,0):h[0];let m=a[0];for(let t=0;t<c.length;++t){m+="[BEGIN_AUDIO]";for(let r=0;r<c[t];++r)m+=l.repeat(375);m+=a[t+1]}t=m}return{...this.tokenizer(t,{add_special_tokens:!1,...i}),...s}}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(t,r,i)=>{i.r(r),i.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js"),a=i("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(t){let r=t.reduce((t,r)=>t+r,0)/t.length,i=t.reduce((t,i)=>t+(i-r)**2,0)/t.length;return t.map(t=>(t-r)/Math.sqrt(i+1e-7))}async _call(t){(0,s.validate_audio_inputs)(t,"Wav2Vec2FeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=t;this.config.do_normalize&&(r=this._zero_mean_unit_var_norm(r));let i=[1,r.length];return{input_values:new a.Tensor("float32",r,i),attention_mask:new a.Tensor("int64",new BigInt64Array(r.length).fill(1n),i)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(t,r,i)=>{i.r(r),i.d(r,{Wav2Vec2Processor:()=>o});var s=i("./src/tokenizers.js"),a=i("./src/models/auto/feature_extraction_auto.js"),n=i("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=a.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(t,r,i)=>{i.r(r),i.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var s=i("./src/tokenizers.js"),a=i("./src/models/auto/feature_extraction_auto.js"),n=i("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=a.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(t,r,i)=>{i.r(r),i.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var a=i("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(t){super(t);const r=this.config.sampling_rate,i=(0,a.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=i,this.window=(0,a.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(t){return t=t.map(t=>32768*t),(0,a.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(t){(0,s.validate_audio_inputs)(t,"WeSpeakerFeatureExtractor");let r=(await this._extract_fbank_features(t)).unsqueeze_(0);if(null===this.config.fbank_centering_span){let t=r.mean(1).data,i=r.data,[s,a,n]=r.dims;for(let r=0;r<s;++r){let s=r*a*n,o=r*n;for(let r=0;r<a;++r){let a=s+r*n;for(let r=0;r<n;++r)i[a+r]-=t[o+r]}}}return{input_features:r}}}},"./src/models/whisper/common_whisper.js":(t,r,i)=>{i.r(r),i.d(r,{WHISPER_LANGUAGE_MAPPING:()=>a,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>o});let s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],a=new Map(s),n=new Map([...s.map(([t,r])=>[r,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(t){t=t.toLowerCase();let r=n.get(t);if(void 0===r){let i=t.match(/^<\|([a-z]{2})\|>$/);if(i&&(t=i[1]),a.has(t))r=t;else{let r=2===t.length?a.keys():a.values();throw Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(Array.from(r))}`)}}return r}},"./src/models/whisper/feature_extraction_whisper.js":(t,r,i)=>{i.r(r),i.d(r,{WhisperFeatureExtractor:()=>o});var s=i("./src/base/feature_extraction_utils.js");i("./src/utils/tensor.js");var a=i("./src/utils/audio.js"),n=i("./src/utils/maths.js");class o extends s.FeatureExtractor{constructor(t){super(t),this.config.mel_filters??=(0,a.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,a.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(t){let r=await (0,a.spectrogram)(t,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(t.length/this.config.hop_length),this.config.nb_max_frames)}),i=r.data,s=(0,n.max)(i)[0];for(let t=0;t<i.length;++t)i[t]=(Math.max(i[t],s-8)+4)/4;return r}async _call(t,{max_length:r=null}={}){let i;(0,s.validate_audio_inputs)(t,"WhisperFeatureExtractor");let a=r??this.config.n_samples;return t.length>a?(t.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),i=t.slice(0,a)):(i=new Float32Array(a)).set(t),{input_features:(await this._extract_fbank_features(i)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(t,r,i)=>{i.r(r),i.d(r,{WhisperGenerationConfig:()=>a});var s=i("./src/generation/configuration_utils.js");class a extends s.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(t,r,i)=>{i.r(r),i.d(r,{WhisperProcessor:()=>o});var s=i("./src/models/auto/feature_extraction_auto.js"),a=i("./src/tokenizers.js"),n=i("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/yolos/image_processing_yolos.js":(t,r,i)=>{i.r(r),i.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>a});var s=i("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...t){return(0,s.post_process_object_detection)(...t)}}class n extends a{}},"./src/ops/registry.js":(t,r,i)=>{i.r(r),i.d(r,{TensorOpRegistry:()=>o});var s=i("./src/backends/onnx.js"),a=i("./src/utils/tensor.js");let n=async(t,r,i)=>{let n=await (0,s.createInferenceSession)(new Uint8Array(t),r);return async t=>{let r=(0,s.isONNXProxy)(),o=Object.fromEntries(Object.entries(t).map(([t,i])=>[t,(r?i.clone():i).ort_tensor])),l=await (0,s.runInferenceSession)(n,o);return Array.isArray(i)?i.map(t=>new a.Tensor(l[t])):new a.Tensor(l[i])}};class o{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=n([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=n([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=n([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=n([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=n([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=n([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=n([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=n([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(t,r,i)=>{i.r(r),i.d(r,{AudioClassificationPipeline:()=>P,AutomaticSpeechRecognitionPipeline:()=>F,BackgroundRemovalPipeline:()=>L,DepthEstimationPipeline:()=>V,DocumentQuestionAnsweringPipeline:()=>N,FeatureExtractionPipeline:()=>C,FillMaskPipeline:()=>w,ImageClassificationPipeline:()=>I,ImageFeatureExtractionPipeline:()=>S,ImageSegmentationPipeline:()=>z,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>A,ObjectDetectionPipeline:()=>B,Pipeline:()=>g,QuestionAnsweringPipeline:()=>b,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>x,TextClassificationPipeline:()=>_,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>j,TokenClassificationPipeline:()=>y,TranslationPipeline:()=>M,ZeroShotAudioClassificationPipeline:()=>E,ZeroShotClassificationPipeline:()=>$,ZeroShotImageClassificationPipeline:()=>O,ZeroShotObjectDetectionPipeline:()=>D,pipeline:()=>q});var s=i("./src/tokenizers.js"),a=i("./src/models.js"),n=i("./src/models/auto/processing_auto.js");i("./src/base/processing_utils.js");var o=i("./src/utils/generic.js"),l=i("./src/utils/core.js"),u=i("./src/utils/maths.js"),d=i("./src/utils/audio.js"),c=i("./src/utils/tensor.js"),p=i("./src/utils/image.js");async function h(t){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>p.RawImage.read(t)))}async function m(t,r){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>"string"==typeof t||t instanceof URL?(0,d.read_audio)(t,r):t instanceof Float64Array?new Float32Array(t):t))}function f(t,r){r&&(t=t.map(t=>0|t));let[i,s,a,n]=t;return{xmin:i,ymin:s,xmax:a,ymax:n}}class g extends o.Callable{constructor({task:t,model:r,tokenizer:i=null,processor:s=null}){super(),this.task=t,this.model=r,this.tokenizer=i,this.processor=s}async dispose(){await this.model.dispose()}}class _ extends g{constructor(t){super(t)}async _call(t,{top_k:r=1}={}){let i=this.tokenizer(t,{padding:!0,truncation:!0}),s=await this.model(i),a="multi_label_classification"===this.model.config.problem_type?t=>t.sigmoid():t=>new c.Tensor("float32",(0,u.softmax)(t.data),t.dims),n=this.model.config.id2label,o=[];for(let t of s.logits){let i=a(t),s=await (0,c.topk)(i,r),l=s[0].tolist(),u=s[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:l[r]}));1===r?o.push(...u):o.push(u)}return Array.isArray(t)||1===r?o:o[0]}}class y extends g{constructor(t){super(t)}async _call(t,{ignore_labels:r=["O"]}={}){let i=Array.isArray(t),s=this.tokenizer(i?t:[t],{padding:!0,truncation:!0}),a=(await this.model(s)).logits,n=this.model.config.id2label,o=[];for(let t=0;t<a.dims[0];++t){let i=s.input_ids[t],l=a[t],d=[];for(let t=0;t<l.dims[0];++t){let s=l[t],a=(0,u.max)(s.data)[1],o=n?n[a]:`LABEL_${a}`;if(r.includes(o))continue;let c=this.tokenizer.decode([i[t].item()],{skip_special_tokens:!0});if(""===c)continue;let p=(0,u.softmax)(s.data);d.push({entity:o,score:p[a],index:t,word:c})}o.push(d)}return i?o:o[0]}}class b extends g{constructor(t){super(t)}async _call(t,r,{top_k:i=1}={}){let s=this.tokenizer(t,{text_pair:r,padding:!0,truncation:!0}),{start_logits:a,end_logits:n}=await this.model(s),o=s.input_ids.tolist(),d=s.attention_mask.tolist(),c=this.tokenizer.all_special_ids,p=[];for(let t=0;t<a.dims[0];++t){let r=o[t],s=r.findIndex(t=>t==this.tokenizer.sep_token_id);d[t].map((t,i)=>1==t&&(0===i||i>s&&-1===c.findIndex(t=>t==r[i])));let h=a[t].tolist(),m=n[t].tolist();for(let i=1;i<h.length;++i)(0==d[t]||i<=s||-1!==c.findIndex(t=>t==r[i]))&&(h[i]=-1/0,m[i]=-1/0);let f=(0,u.softmax)(h).map((t,r)=>[t,r]),g=(0,u.softmax)(m).map((t,r)=>[t,r]);f[0][0]=0,g[0][0]=0;let _=(0,l.product)(f,g).filter(t=>t[0][1]<=t[1][1]).map(t=>[t[0][1],t[1][1],t[0][0]*t[1][0]]).sort((t,r)=>r[2]-t[2]);for(let t=0;t<Math.min(_.length,i);++t){let[i,s,a]=_[t],n=r.slice(i,s+1),o=this.tokenizer.decode(n,{skip_special_tokens:!0});p.push({answer:o,score:a})}}return 1===i?p[0]:p}}class w extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let i=this.tokenizer(t,{padding:!0,truncation:!0}),{logits:s}=await this.model(i),a=[],n=i.input_ids.tolist();for(let t=0;t<n.length;++t){let i=n[t],o=i.findIndex(t=>t==this.tokenizer.mask_token_id);if(-1===o)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);let l=s[t][o],d=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(l.data),l.dims),r),p=d[0].tolist(),h=d[1].tolist();a.push(h.map((t,r)=>{let s=i.slice();return s[o]=t,{score:p[r],token:Number(t),token_str:this.tokenizer.decode([t]),sequence:this.tokenizer.decode(s,{skip_special_tokens:!0})}}))}return Array.isArray(t)?a:a[0]}}class x extends g{_key="generated_text";constructor(t){super(t)}async _call(t,r={}){let i;Array.isArray(t)||(t=[t]),this.model.config.prefix&&(t=t.map(t=>this.model.config.prefix+t));let s=this.model.config.task_specific_params;s&&s[this.task]&&s[this.task].prefix&&(t=t.map(t=>s[this.task].prefix+t));let a=this.tokenizer,n={padding:!0,truncation:!0};i=this instanceof M&&"_build_translation_inputs"in a?a._build_translation_inputs(t,n,r):a(t,n);let o=await this.model.generate({...i,...r});return a.batch_decode(o,{skip_special_tokens:!0}).map(t=>({[this._key]:t}))}}class v extends x{_key="summary_text";constructor(t){super(t)}}class M extends x{_key="translation_text";constructor(t){super(t)}}function T(t){return Array.isArray(t)&&t.every(t=>"role"in t&&"content"in t)}class k extends g{constructor(t){super(t)}async _call(t,r={}){let i,s,a=!1,n=!1,o=r.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1;if("string"==typeof t)i=t=[t];else if(Array.isArray(t)&&t.every(t=>"string"==typeof t))a=!0,i=t;else{if(T(t))t=[t];else if(Array.isArray(t)&&t.every(T))a=!0;else throw Error("Input must be a string, an array of strings, a Chat, or an array of Chats");n=!0,i=t.map(t=>this.tokenizer.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0})),o=!1}let l=!n&&(r.return_full_text??!0);this.tokenizer.padding_side="left";let u=this.tokenizer(i,{add_special_tokens:o,padding:!0,truncation:!0}),d=await this.model.generate({...u,...r}),c=this.tokenizer.batch_decode(d,{skip_special_tokens:!0});!l&&u.input_ids.dims.at(-1)>0&&(s=this.tokenizer.batch_decode(u.input_ids,{skip_special_tokens:!0}).map(t=>t.length));let p=Array.from({length:t.length},t=>[]);for(let r=0;r<c.length;++r){let i=Math.floor(r/d.dims[0]*t.length);s&&(c[r]=c[r].slice(s[i])),p[i].push({generated_text:n?[...t[i],{role:"assistant",content:c[r]}]:c[r]})}return a||1!==p.length?p:p[0]}}class $ extends g{constructor(t){super(t),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([t,r])=>[t.toLowerCase(),r])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(t,r,{hypothesis_template:i="This example is {}.",multi_label:s=!1}={}){let a=Array.isArray(t);a||(t=[t]),Array.isArray(r)||(r=[r]);let n=r.map(t=>i.replace("{}",t)),o=s||1===r.length,l=[];for(let i of t){let t=[];for(let r of n){let s=this.tokenizer(i,{text_pair:r,padding:!0,truncation:!0}),a=await this.model(s);o?t.push([a.logits.data[this.contradiction_id],a.logits.data[this.entailment_id]]):t.push(a.logits.data[this.entailment_id])}let s=(o?t.map(t=>(0,u.softmax)(t)[1]):(0,u.softmax)(t)).map((t,r)=>[t,r]).sort((t,r)=>r[0]-t[0]);l.push({sequence:i,labels:s.map(t=>r[t[1]]),scores:s.map(t=>t[0])})}return a?l:l[0]}}class C extends g{constructor(t){super(t)}async _call(t,{pooling:r="none",normalize:i=!1,quantize:s=!1,precision:a="binary"}={}){let n=this.tokenizer(t,{padding:!0,truncation:!0}),o=await this.model(n),l=o.last_hidden_state??o.logits??o.token_embeddings;switch(r){case"none":break;case"mean":l=(0,c.mean_pooling)(l,n.attention_mask);break;case"first_token":case"cls":l=l.slice(null,0);break;case"last_token":case"eos":l=l.slice(null,-1);break;default:throw Error(`Pooling method '${r}' not supported.`)}return i&&(l=l.normalize(2,-1)),s&&(l=(0,c.quantize_embeddings)(l,a)),l}}class S extends g{constructor(t){super(t)}async _call(t,{pool:r=null}={}){let i,s=await h(t),{pixel_values:a}=await this.processor(s),n=await this.model({pixel_values:a});if(r){if(!("pooler_output"in n))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=n.pooler_output}else i=n.last_hidden_state??n.logits??n.image_embeds;return i}}class P extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let i=this.processor.feature_extractor.config.sampling_rate,s=await m(t,i),a=this.model.config.id2label,n=[];for(let t of s){let i=await this.processor(t),s=(await this.model(i)).logits[0],o=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(s.data),s.dims),r),l=o[0].tolist(),d=o[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:l[r]}));n.push(d)}return Array.isArray(t)?n:n[0]}}class E extends g{constructor(t){super(t)}async _call(t,r,{hypothesis_template:i="This is a sound of {}."}={}){let s=!Array.isArray(t);s&&(t=[t]);let a=r.map(t=>i.replace("{}",t)),n=this.tokenizer(a,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,l=await m(t,o),d=[];for(let t of l){let i=await this.processor(t),s=await this.model({...n,...i}),a=(0,u.softmax)(s.logits_per_audio.data);d.push([...a].map((t,i)=>({score:t,label:r[i]})))}return s?d[0]:d}}class F extends g{constructor(t){super(t)}async _call(t,r={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(t,r);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":case"parakeet_ctc":return this._call_wav2vec2(t,r);case"moonshine":return this._call_moonshine(t,r);default:throw Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(t,r){r.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),r.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');let i=!Array.isArray(t);i&&(t=[t]);let s=this.processor.feature_extractor.config.sampling_rate,a=await m(t,s),n=[];for(let t of a){let r=await this.processor(t),i=(await this.model(r)).logits[0],s=[];for(let t of i)s.push((0,u.max)(t.data)[1]);let a=this.tokenizer.decode(s,{skip_special_tokens:!0}).trim();n.push({text:a})}return i?n[0]:n}async _call_whisper(t,r){let i=r.return_timestamps??!1,s=r.chunk_length_s??0,a=r.force_full_sequences??!1,n=r.stride_length_s??null,o={...r};"word"===i&&(o.return_token_timestamps=!0,o.return_timestamps=!1);let l=!Array.isArray(t);l&&(t=[t]);let d=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,c=this.processor.feature_extractor.config.hop_length,p=this.processor.feature_extractor.config.sampling_rate,h=await m(t,p),f=[];for(let t of h){let r=[];if(s>0){if(null===n)n=s/6;else if(s<=n)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");let i=p*s,a=p*n,o=i-2*a,l=0;for(;;){let s=l+i,n=t.subarray(l,s),u=await this.processor(n),d=0===l,c=s>=t.length;if(r.push({stride:[n.length,d?0:a,c?0:a],input_features:u.input_features,is_last:c}),c)break;l+=o}}else r=[{stride:[t.length,0,0],input_features:(await this.processor(t)).input_features,is_last:!0}];for(let t of r){o.num_frames=Math.floor(t.stride[0]/c);let r=await this.model.generate({inputs:t.input_features,...o});"word"===i?(t.tokens=r.sequences.tolist()[0],t.token_timestamps=r.token_timestamps.tolist()[0].map(t=>(0,u.round)(t,2))):t.tokens=r[0].tolist(),t.stride=t.stride.map(t=>t/p)}let[l,h]=this.tokenizer._decode_asr(r,{time_precision:d,return_timestamps:i,force_full_sequences:a});f.push({text:l,...h})}return l?f[0]:f}async _call_moonshine(t,r){let i=!Array.isArray(t);i&&(t=[t]);let s=this.processor.feature_extractor.config.sampling_rate,a=await m(t,s),n=[];for(let t of a){let i=await this.processor(t),a=6*Math.floor(t.length/s),o=await this.model.generate({max_new_tokens:a,...r,...i}),l=this.processor.batch_decode(o,{skip_special_tokens:!0})[0];n.push({text:l})}return i?n[0]:n}}class A extends g{constructor(t){super(t)}async _call(t,r={}){let i=Array.isArray(t),s=await h(t),{pixel_values:a}=await this.processor(s),n=[];for(let t of a){t.dims=[1,...t.dims];let i=await this.model.generate({inputs:t,...r}),s=this.tokenizer.batch_decode(i,{skip_special_tokens:!0}).map(t=>({generated_text:t.trim()}));n.push(s)}return i?n:n[0]}}class I extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let i=await h(t),{pixel_values:s}=await this.processor(i),a=await this.model({pixel_values:s}),n=this.model.config.id2label,o=[];for(let t of a.logits){let i=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(t.data),t.dims),r),s=i[0].tolist(),a=i[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:s[r]}));o.push(a)}return Array.isArray(t)?o:o[0]}}class z extends g{constructor(t){super(t),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(t,{threshold:r=.5,mask_threshold:i=.5,overlap_mask_area_threshold:s=.8,label_ids_to_fuse:a=null,target_sizes:n=null,subtask:o=null}={}){if(Array.isArray(t)&&1!==t.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");let l=await h(t),u=l.map(t=>[t.height,t.width]),d=await this.processor(l),{inputNames:c,outputNames:m}=this.model.sessions.model;if(!c.includes("pixel_values")){if(1!==c.length)throw Error(`Expected a single input name, but got ${c.length} inputs: ${c}.`);let t=c[0];if(t in d)throw Error(`Input name ${t} already exists in the inputs.`);d[t]=d.pixel_values}let f=await this.model(d),g=null;if(null!==o)g=this.subtasks_mapping[o];else if(this.processor.image_processor){for(let[t,r]of Object.entries(this.subtasks_mapping))if(r in this.processor.image_processor){g=this.processor.image_processor[r].bind(this.processor.image_processor),o=t;break}}let _=this.model.config.id2label,y=[];if(o)if("panoptic"===o||"instance"===o){let t=g(f,r,i,s,a,n??u)[0],o=t.segmentation;for(let r of t.segments_info){let t=new Uint8ClampedArray(o.data.length);for(let i=0;i<o.data.length;++i)o.data[i]===r.id&&(t[i]=255);let i=new p.RawImage(t,o.dims[1],o.dims[0],1);y.push({score:r.score,label:_[r.label_id],mask:i})}}else if("semantic"===o){let{segmentation:t,labels:r}=g(f,n??u)[0];for(let i of r){let r=new Uint8ClampedArray(t.data.length);for(let s=0;s<t.data.length;++s)t.data[s]===i&&(r[s]=255);let s=new p.RawImage(r,t.dims[1],t.dims[0],1);y.push({score:null,label:_[i],mask:s})}}else throw Error(`Subtask ${o} not supported.`);else{let t=f[m[0]];for(let r=0;r<u.length;++r){let i=u[r],s=t[r];s.data.some(t=>t<-1e-5||t>1.00001)&&s.sigmoid_();let a=await p.RawImage.fromTensor(s.mul_(255).to("uint8")).resize(i[1],i[0]);y.push({label:null,score:null,mask:a})}}return y}}class L extends z{constructor(t){super(t)}async _call(t,r={}){if(Array.isArray(t)&&1!==t.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");let i=await h(t),s=await super._call(t,r);return i.map((t,r)=>{let i=t.clone();return i.putAlpha(s[r].mask),i})}}class O extends g{constructor(t){super(t)}async _call(t,r,{hypothesis_template:i="This is a photo of {}"}={}){let s=Array.isArray(t),a=await h(t),n=r.map(t=>i.replace("{}",t)),o=this.tokenizer(n,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:l}=await this.processor(a),d=await this.model({...o,pixel_values:l}),c="siglip"===this.model.config.model_type?t=>t.sigmoid().data:t=>(0,u.softmax)(t.data),p=[];for(let t of d.logits_per_image){let i=[...c(t)].map((t,i)=>({score:t,label:r[i]}));i.sort((t,r)=>r.score-t.score),p.push(i)}return s?p:p[0]}}class B extends g{constructor(t){super(t)}async _call(t,{threshold:r=.9,percentage:i=!1}={}){let s=Array.isArray(t);if(s&&1!==t.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");let a=await h(t),n=i?null:a.map(t=>[t.height,t.width]),{pixel_values:o,pixel_mask:l}=await this.processor(a),u=await this.model({pixel_values:o,pixel_mask:l}),d=this.processor.image_processor.post_process_object_detection(u,r,n),c=this.model.config.id2label,p=d.map(t=>t.boxes.map((r,s)=>({score:t.scores[s],label:c[t.classes[s]],box:f(r,!i)})));return s?p:p[0]}}class D extends g{constructor(t){super(t)}async _call(t,r,{threshold:i=.1,top_k:s=null,percentage:a=!1}={}){let n=Array.isArray(t),o=await h(t),l=this.tokenizer(r,{padding:!0,truncation:!0}),u=await this.processor(o),d=[];for(let t=0;t<o.length;++t){let n,c=o[t],p=a?null:[[c.height,c.width]],h=u.pixel_values[t].unsqueeze_(0),m=await this.model({...l,pixel_values:h});if("post_process_grounded_object_detection"in this.processor){let t=this.processor.post_process_grounded_object_detection(m,l.input_ids,{box_threshold:i,text_threshold:i,target_sizes:p})[0];n=t.boxes.map((r,i)=>({score:t.scores[i],label:t.labels[i],box:f(r,!a)}))}else{let t=this.processor.image_processor.post_process_object_detection(m,i,p,!0)[0];n=t.boxes.map((i,s)=>({score:t.scores[s],label:r[t.classes[s]],box:f(i,!a)}))}n.sort((t,r)=>r.score-t.score),null!==s&&(n=n.slice(0,s)),d.push(n)}return n?d:d[0]}}class N extends g{constructor(t){super(t)}async _call(t,r,i={}){let s=(await h(t))[0],{pixel_values:a}=await this.processor(s),n=`<s_docvqa><s_question>${r}</s_question><s_answer>`,o=this.tokenizer(n,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,l=await this.model.generate({inputs:a,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:o,...i}),u=this.tokenizer.batch_decode(l)[0].match(/<s_answer>(.*?)<\/s_answer>/),d=null;return u&&u.length>=2&&(d=u[1].trim()),[{answer:d}]}}class j extends g{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(t){super(t),this.vocoder=t.vocoder??null}async _call(t,{speaker_embeddings:r=null}={}){return this.processor?this._call_text_to_spectrogram(t,{speaker_embeddings:r}):this._call_text_to_waveform(t)}async _call_text_to_waveform(t){let r=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:i}=await this.model(r),s=this.model.config.sampling_rate;return new d.RawAudio(i.data,s)}async _call_text_to_spectrogram(t,{speaker_embeddings:r}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await a.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof r||r instanceof URL)&&(r=new Float32Array(await (await fetch(r)).arrayBuffer())),r instanceof Float32Array)r=new c.Tensor("float32",r,[1,r.length]);else if(!(r instanceof c.Tensor))throw Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");let{input_ids:i}=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:s}=await this.model.generate_speech(i,r,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return new d.RawAudio(s.data,n)}}class R extends g{constructor(t){super(t)}async _call(t){let r=await h(t),i=await this.processor(r),s=await this.model(i),a=[];for(let t of s.reconstruction){let r=t.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");a.push(p.RawImage.fromTensor(r))}return a.length>1?a:a[0]}}class V extends g{constructor(t){super(t)}async _call(t){let r=await h(t),i=await this.processor(r),{predicted_depth:s}=await this.model(i),a=[];for(let t=0;t<r.length;++t){let i=s[t],[n,o]=i.dims.slice(-2),[l,u]=r[t].size,d=(await (0,c.interpolate_4d)(i.view(1,1,n,o),{size:[u,l],mode:"bilinear"})).view(u,l),h=d.min().item(),m=d.max().item(),f=d.sub(h).div_(m-h).mul_(255).to("uint8").unsqueeze(0),g=p.RawImage.fromTensor(f);a.push({predicted_depth:d,depth:g})}return a.length>1?a:a[0]}}let G=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:_,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:y,model:a.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:b,model:a.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:w,model:a.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:v,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:M,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:x,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:k,model:a.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:$,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:P,model:a.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:E,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:F,model:[a.AutoModelForSpeechSeq2Seq,a.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:j,model:[a.AutoModelForTextToWaveform,a.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:A,model:a.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:I,model:a.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:z,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:L,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:O,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:B,model:a.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:D,model:a.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:N,model:a.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:R,model:a.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:V,model:a.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:C,model:a.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:S,model:[a.AutoModelForImageFeatureExtraction,a.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),U=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function q(t,r=null,{progress_callback:i=null,config:s=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",device:u=null,dtype:d=null,subfolder:c="onnx",use_external_data_format:p=null,model_file_name:h=null,session_options:m={}}={}){let f=G[(t=U[t]??t).split("_",1)[0]];if(!f)throw Error(`Unsupported pipeline: ${t}. Must be one of [${Object.keys(G)}]`);r||(r=f.default.model,console.log(`No model specified. Using default model: "${r}".`));let g=new Map([["tokenizer",f.tokenizer],["model",f.model],["processor",f.processor]]),_=await W(g,r,{progress_callback:i,config:s,cache_dir:a,local_files_only:n,revision:o,device:u,dtype:d,subfolder:c,use_external_data_format:p,model_file_name:h,session_options:m});return _.task=t,(0,l.dispatchCallback)(i,{status:"ready",task:t,model:r}),new f.pipeline(_)}async function W(t,r,i){let s=Object.create(null),a=[];for(let[n,o]of t.entries()){let t;o&&(t=Array.isArray(o)?new Promise(async(t,s)=>{let a;for(let n of o){if(null===n)return void t(null);try{t(await n.from_pretrained(r,i));return}catch(t){if(t.message?.includes("Unsupported model type"))a=t;else{if(!t.message?.includes("Could not locate file"))return void s(t);a=t}}}s(a)}):o.from_pretrained(r,i),s[n]=t,a.push(t))}for(let[t,r]of(await Promise.all(a),Object.entries(s)))s[t]=await r;return s}},"./src/tokenizers.js":(t,r,i)=>{i.r(r),i.d(r,{AlbertTokenizer:()=>eM,AutoTokenizer:()=>ta,BartTokenizer:()=>eB,BertTokenizer:()=>ev,BlenderbotSmallTokenizer:()=>e9,BlenderbotTokenizer:()=>e5,BloomTokenizer:()=>eR,CLIPTokenizer:()=>e3,CamembertTokenizer:()=>eA,CodeGenTokenizer:()=>e2,CodeLlamaTokenizer:()=>eG,CohereTokenizer:()=>tr,ConvBertTokenizer:()=>eP,DebertaTokenizer:()=>e$,DebertaV2Tokenizer:()=>eC,DistilBertTokenizer:()=>eF,ElectraTokenizer:()=>ez,Ernie4_5_Tokenizer:()=>ts,EsmTokenizer:()=>eK,FalconTokenizer:()=>eW,GPT2Tokenizer:()=>eO,GPTNeoXTokenizer:()=>eH,GemmaTokenizer:()=>eX,Grok1Tokenizer:()=>eJ,HerbertTokenizer:()=>eS,LlamaTokenizer:()=>eV,M2M100Tokenizer:()=>e0,MBart50Tokenizer:()=>eN,MBartTokenizer:()=>eD,MPNetTokenizer:()=>eq,MarianTokenizer:()=>e8,MgpstrTokenizer:()=>ti,MobileBertTokenizer:()=>eT,NllbTokenizer:()=>eZ,NougatTokenizer:()=>te,PreTrainedTokenizer:()=>ex,Qwen2Tokenizer:()=>eQ,RoFormerTokenizer:()=>eE,RobertaTokenizer:()=>ej,SiglipTokenizer:()=>e4,SpeechT5Tokenizer:()=>e7,SqueezeBertTokenizer:()=>ek,T5Tokenizer:()=>eL,TokenizerModel:()=>T,VitsTokenizer:()=>tt,Wav2Vec2CTCTokenizer:()=>e6,WhisperTokenizer:()=>e1,XLMRobertaTokenizer:()=>eU,XLMTokenizer:()=>eI,is_chinese_char:()=>y});var s=i("./src/utils/generic.js"),a=i("./src/utils/core.js"),n=i("./src/utils/hub.js"),o=i("./src/utils/maths.js"),l=i("./src/utils/tensor.js"),u=i("./src/utils/data-structures.js"),d=i("./node_modules/@huggingface/jinja/dist/index.js"),c=i("./src/models/whisper/common_whisper.js");async function p(t,r){let i=await Promise.all([(0,n.getModelJSON)(t,"tokenizer.json",!0,r),(0,n.getModelJSON)(t,"tokenizer_config.json",!0,r)]);return null!==r.legacy&&(i[1].legacy=r.legacy),i}function h(t,r=!0){if(void 0!==t.Regex){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(let[t,i]of v)r=r.replaceAll(t,i);return RegExp(r,"gu")}if(void 0===t.String)return console.warn("Unknown pattern type:",t),null;{let i=(0,a.escapeRegExp)(t.String);return RegExp(r?i:`(${i})`,"gu")}}function m(t){return new Map(Object.entries(t))}function f(t){let r=t.dims;switch(r.length){case 1:return t.tolist();case 2:if(1!==r[0])throw Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw Error(`Expected tensor to have 1-2 dimensions, got ${r.length}.`)}}function g(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function _(t){return t.replace(/\p{M}/gu,"")}function y(t){return t>=19968&&t<=40959||t>=13312&&t<=19903||t>=131072&&t<=173791||t>=173824&&t<=177983||t>=177984&&t<=178207||t>=178208&&t<=183983||t>=63744&&t<=64255||t>=194560&&t<=195103}let b="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",w=RegExp(`^[${b}]+$`,"gu"),x=".,!?…。，、।۔،",v=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],["(?i:[sdmt]|ll|ve|re)","(?:[sS]|[dD]|[mM]|[tT]|[lL][lL]|[vV][eE]|[rR][eE])"],["[^\\r\\n\\p{L}\\p{N}]?+","[^\\r\\n\\p{L}\\p{N}]?"],["[^\\s\\p{L}\\p{N}]++","[^\\s\\p{L}\\p{N}]+"],[` ?[^(\\s|[${x}])]+`,` ?[^\\s${x}]+`]]);class M{constructor(t){this.content=t.content,this.id=t.id,this.single_word=t.single_word??!1,this.lstrip=t.lstrip??!1,this.rstrip=t.rstrip??!1,this.special=t.special??!1,this.normalized=t.normalized??null}}class T extends s.Callable{constructor(t){super(),this.config=t,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(t,...r){switch(t.type){case"WordPiece":return new k(t);case"Unigram":return new $(t,...r);case"BPE":return new P(t);default:if(t.vocab)if(Array.isArray(t.vocab))return new $(t,...r);else if(!(Object.hasOwn(t,"continuing_subword_prefix")&&Object.hasOwn(t,"unk_token")))return new E(t,...r);else if(Object.hasOwn(t,"merges"))return new P(t);else return new k(t);throw Error(`Unknown TokenizerModel type: ${t.type}`)}}_call(t){return t=this.encode(t),this.fuse_unk&&(t=function(t,r,i){let s=[],a=0;for(;a<t.length;){if(s.push(t[a]),(r.get(t[a])??i)!==i){++a;continue}for(;++a<t.length&&(r.get(t[a])??i)===i;)r.get(s.at(-1))!==i&&(s[s.length-1]+=t[a])}return s}(t,this.tokens_to_ids,this.unk_token_id)),t}encode(t){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(t){return t.map(t=>this.tokens_to_ids.get(t)??this.unk_token_id)}convert_ids_to_tokens(t){return t.map(t=>this.vocab[t]??this.unk_token)}}class k extends T{constructor(t){for(const[r,i]of(super(t),this.tokens_to_ids=m(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.max_input_chars_per_word=t.max_input_chars_per_word??100,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[i]=r}encode(t){let r=[];for(let i of t){let t=[...i];if(t.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let s=!1,a=0,n=[];for(;a<t.length;){let r=t.length,i=null;for(;a<r;){let s=t.slice(a,r).join("");if(a>0&&(s=this.config.continuing_subword_prefix+s),this.tokens_to_ids.has(s)){i=s;break}--r}if(null===i){s=!0;break}n.push(i),a=r}s?r.push(this.unk_token):r.push(...n)}return r}}class $ extends T{constructor(t,r){super(t);const i=t.vocab.length;this.vocab=Array(i),this.scores=Array(i);for(let r=0;r<i;++r)[this.vocab[r],this.scores[r]]=t.vocab[r];this.unk_token_id=t.unk_id,this.unk_token=this.vocab[t.unk_id],this.tokens_to_ids=new Map(this.vocab.map((t,r)=>[t,r])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new u.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(t){let r=t.chars,i=0;for(;i<r.length;){let s=!1,n=[],o=r.slice(i).join("");for(let r of this.trie.commonPrefixSearch(o)){n.push(r);let o=this.tokens_to_ids.get(r),l=this.scores[o],u=(0,a.len)(r);t.insert(i,u,l,o),s||1!==u||(s=!0)}s||t.insert(i,1,this.unk_score,this.unk_token_id),i+=1}}tokenize(t){let r=new u.TokenLattice(t,this.bos_token_id,this.eos_token_id);return this.populateNodes(r),r.tokens()}encode(t){let r=[];for(let i of t){let t=this.tokenize(i);r.push(...t)}return r}}let C=(()=>{let t=[...Array.from({length:94},(t,r)=>r+33),...Array.from({length:12},(t,r)=>r+161),...Array.from({length:82},(t,r)=>r+174)],r=t.slice(),i=0;for(let s=0;s<256;++s)t.includes(s)||(t.push(s),r.push(256+i),i+=1);let s=r.map(t=>String.fromCharCode(t));return Object.fromEntries(t.map((t,r)=>[t,s[r]]))})(),S=(0,a.reverseDictionary)(C);class P extends T{constructor(t){for(const[r,i]of(super(t),this.tokens_to_ids=m(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[i]=r;const r=Array.isArray(t.merges[0]);this.merges=r?t.merges:t.merges.map(t=>t.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((t,r)=>[JSON.stringify(t),r])),this.end_of_word_suffix=t.end_of_word_suffix,this.continuing_subword_suffix=t.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new u.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(t){if(0===t.length)return[];let r=this.cache.get(t);if(void 0!==r)return r;let i=Array.from(t);this.end_of_word_suffix&&(i[i.length-1]+=this.end_of_word_suffix);let s=[];if(i.length>1){let t=new u.PriorityQueue((t,r)=>t.score<r.score),r={token:i[0],bias:0,prev:null,next:null},a=r;for(let r=1;r<i.length;++r){let s={bias:r/i.length,token:i[r],prev:a,next:null};a.next=s,this._add_node(t,a),a=s}for(;!t.isEmpty();){let i=t.pop();if(i.deleted||!i.next||i.next.deleted)continue;if(i.deleted=!0,i.next.deleted=!0,i.prev){let t={...i.prev};i.prev.deleted=!0,i.prev=t,t.prev?t.prev.next=t:r=t}let s={token:i.token+i.next.token,bias:i.bias,prev:i.prev,next:i.next.next};s.prev?(s.prev.next=s,this._add_node(t,s.prev)):r=s,s.next&&(s.next.prev=s,this._add_node(t,s))}for(let t=r;null!==t;t=t.next)s.push(t.token)}else s=i;if(this.continuing_subword_suffix)for(let t=0;t<s.length-1;++t)s[t]+=this.continuing_subword_suffix;return t.length<this.max_length_to_cache&&this.cache.put(t,s),s}_add_node(t,r){let i=this.bpe_ranks.get(JSON.stringify([r.token,r.next.token]));void 0!==i&&(r.score=i+r.bias,t.push(r))}encode(t){let r=[];for(let i of t){if(this.ignore_merges&&this.tokens_to_ids.has(i)){r.push(i);continue}for(let t of this.bpe(i))if(this.tokens_to_ids.has(t))r.push(t);else if(this.byte_fallback){let i=Array.from(this.text_encoder.encode(t)).map(t=>`<0x${t.toString(16).toUpperCase().padStart(2,"0")}>`);i.every(t=>this.tokens_to_ids.has(t))?r.push(...i):r.push(this.unk_token)}else r.push(this.unk_token)}return r}}class E extends T{constructor(t,r){for(const[i,s]of(super(t),this.tokens_to_ids=m(r.target_lang?t.vocab[r.target_lang]:t.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=i}encode(t){return t}}class F extends s.Callable{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"BertNormalizer":return new G(t);case"Precompiled":return new ef(t);case"Sequence":return new V(t);case"Replace":return new A(t);case"NFC":return new z(t);case"NFD":return new L(t);case"NFKC":return new O(t);case"NFKD":return new B(t);case"Strip":return new D(t);case"StripAccents":return new N(t);case"Lowercase":return new j(t);case"Prepend":return new R(t);default:throw Error(`Unknown Normalizer type: ${t.type}`)}}normalize(t){throw Error("normalize should be implemented in subclass.")}_call(t){return this.normalize(t)}}class A extends F{normalize(t){let r=h(this.config.pattern);return null===r?t:t.replaceAll(r,this.config.content)}}class I extends F{form=void 0;normalize(t){return t=t.normalize(this.form)}}class z extends I{form="NFC"}class L extends I{form="NFD"}class O extends I{form="NFKC"}class B extends I{form="NFKD"}class D extends F{normalize(t){return this.config.strip_left&&this.config.strip_right?t=t.trim():(this.config.strip_left&&(t=t.trimStart()),this.config.strip_right&&(t=t.trimEnd())),t}}class N extends F{normalize(t){return t=_(t)}}class j extends F{normalize(t){return t=t.toLowerCase()}}class R extends F{normalize(t){return t=this.config.prepend+t}}class V extends F{constructor(t){super(t),this.normalizers=t.normalizers.map(t=>F.fromConfig(t))}normalize(t){return this.normalizers.reduce((t,r)=>r.normalize(t),t)}}class G extends F{_tokenize_chinese_chars(t){let r=[];for(let i=0;i<t.length;++i){let s=t[i];y(s.charCodeAt(0))?(r.push(" "),r.push(s),r.push(" ")):r.push(s)}return r.join("")}stripAccents(t){return t.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(t){switch(t){case"	":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(t)}}_clean_text(t){let r=[];for(let i of t){let t=i.charCodeAt(0);0===t||65533===t||this._is_control(i)||(/^\s$/.test(i)?r.push(" "):r.push(i))}return r.join("")}normalize(t){return this.config.clean_text&&(t=this._clean_text(t)),this.config.handle_chinese_chars&&(t=this._tokenize_chinese_chars(t)),this.config.lowercase?(t=t.toLowerCase(),!1!==this.config.strip_accents&&(t=this.stripAccents(t))):this.config.strip_accents&&(t=this.stripAccents(t)),t}}class U extends s.Callable{static fromConfig(t){if(null===t)return null;switch(t.type){case"BertPreTokenizer":return new q(t);case"Sequence":return new eg(t);case"Whitespace":return new e_(t);case"WhitespaceSplit":return new ey(t);case"Metaspace":return new eh(t);case"ByteLevel":return new W(t);case"Split":return new H(t);case"Punctuation":return new K(t);case"Digits":return new Q(t);case"Replace":return new eb(t);default:throw Error(`Unknown PreTokenizer type: ${t.type}`)}}pre_tokenize_text(t,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(t,r){return(Array.isArray(t)?t.map(t=>this.pre_tokenize_text(t,r)):this.pre_tokenize_text(t,r)).flat()}_call(t,r){return this.pre_tokenize(t,r)}}class q extends U{constructor(t){super(),this.pattern=RegExp(`[^\\s${b}]+|[${b}]`,"gu")}pre_tokenize_text(t,r){return t.trim().match(this.pattern)||[]}}class W extends U{constructor(t){super(),this.config=t,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=C,this.text_encoder=new TextEncoder}pre_tokenize_text(t,r){return this.add_prefix_space&&!t.startsWith(" ")&&(t=" "+t),(this.use_regex?t.match(this.pattern)||[]:[t]).map(t=>Array.from(this.text_encoder.encode(t),t=>this.byte_encoder[t]).join(""))}}class H extends U{constructor(t){super(),this.config=t,this.pattern=h(this.config.pattern,this.config.invert)}pre_tokenize_text(t,r){return null===this.pattern?[]:this.config.invert?t.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?t.split(this.pattern).filter(t=>t):function(t,r){let i=[],s=0;for(let a of t.matchAll(r)){let r=a[0];s<a.index&&i.push(t.slice(s,a.index)),r.length>0&&i.push(r),s=a.index+r.length}return s<t.length&&i.push(t.slice(s)),i}(t,this.pattern)}}class K extends U{constructor(t){super(),this.config=t,this.pattern=RegExp(`[^${b}]+|[${b}]+`,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class Q extends U{constructor(t){super(),this.config=t;const r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=RegExp(r,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class X extends s.Callable{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"TemplateProcessing":return new Z(t);case"ByteLevel":return new ee(t);case"RobertaProcessing":return new Y(t);case"BertProcessing":return new J(t);case"Sequence":return new et(t);default:throw Error(`Unknown PostProcessor type: ${t.type}`)}}post_process(t){throw Error("post_process should be implemented in subclass.")}_call(t,...r){return this.post_process(t,...r)}}class J extends X{constructor(t){super(t),this.cls=t.cls[0],this.sep=t.sep[0]}post_process(t,r=null,{add_special_tokens:i=!0}={}){i&&(t=(0,a.mergeArrays)([this.cls],t,[this.sep]));let s=Array(t.length).fill(0);if(null!==r){let n=i&&this instanceof Y?[this.sep]:[],o=i?[this.sep]:[];t=(0,a.mergeArrays)(t,n,r,o),s=(0,a.mergeArrays)(s,Array(r.length+n.length+o.length).fill(1))}return{tokens:t,token_type_ids:s}}}class Y extends J{}class Z extends X{constructor(t){super(t),this.single=t.single,this.pair=t.pair}post_process(t,r=null,{add_special_tokens:i=!0}={}){let s=null===r?this.single:this.pair,n=[],o=[];for(let l of s)"SpecialToken"in l?i&&(n.push(l.SpecialToken.id),o.push(l.SpecialToken.type_id)):"Sequence"in l&&("A"===l.Sequence.id?(n=(0,a.mergeArrays)(n,t),o=(0,a.mergeArrays)(o,Array(t.length).fill(l.Sequence.type_id))):"B"===l.Sequence.id&&(n=(0,a.mergeArrays)(n,r),o=(0,a.mergeArrays)(o,Array(r.length).fill(l.Sequence.type_id))));return{tokens:n,token_type_ids:o}}}class ee extends X{post_process(t,r=null){return r&&(t=(0,a.mergeArrays)(t,r)),{tokens:t}}}class et extends X{constructor(t){super(t),this.processors=t.processors.map(t=>X.fromConfig(t))}post_process(t,r=null,i={}){let s;for(let a of this.processors)if(a instanceof ee)t=a.post_process(t).tokens,r&&(r=a.post_process(r).tokens);else{let n=a.post_process(t,r,i);t=n.tokens,s=n.token_type_ids}return{tokens:t,token_type_ids:s}}}class er extends s.Callable{constructor(t){super(),this.config=t,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=t.trim_offsets}static fromConfig(t){if(null===t)return null;switch(t.type){case"WordPiece":return new eo(t);case"Metaspace":return new em(t);case"ByteLevel":return new el(t);case"Replace":return new ei(t);case"ByteFallback":return new es(t);case"Fuse":return new ea(t);case"Strip":return new en(t);case"Sequence":return new ed(t);case"CTC":return new eu(t);case"BPEDecoder":return new ec(t);default:throw Error(`Unknown Decoder type: ${t.type}`)}}_call(t){return this.decode(t)}decode(t){return this.decode_chain(t).join("")}decode_chain(t){throw Error("`decode_chain` should be implemented in subclass.")}}class ei extends er{decode_chain(t){let r=h(this.config.pattern);return null===r?t:t.map(t=>t.replaceAll(r,this.config.content))}}class es extends er{constructor(t){super(t),this.text_decoder=new TextDecoder}decode_chain(t){let r=[],i=[];for(let s of t){let t=null;if(6===s.length&&s.startsWith("<0x")&&s.endsWith(">")){let r=parseInt(s.slice(3,5),16);isNaN(r)||(t=r)}if(null!==t)i.push(t);else{if(i.length>0){let t=this.text_decoder.decode(Uint8Array.from(i));r.push(t),i=[]}r.push(s)}}if(i.length>0){let t=this.text_decoder.decode(Uint8Array.from(i));r.push(t),i=[]}return r}}class ea extends er{decode_chain(t){return[t.join("")]}}class en extends er{constructor(t){super(t),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(t){return t.map(t=>{let r=0;for(let i=0;i<this.start;++i)if(t[i]===this.content){r=i+1;continue}else break;let i=t.length;for(let r=0;r<this.stop;++r){let s=t.length-r-1;if(t[s]===this.content){i=s;continue}break}return t.slice(r,i)})}}class eo extends er{constructor(t){super(t),this.cleanup=t.cleanup}decode_chain(t){return t.map((t,r)=>(0!==r&&(t=t.startsWith(this.config.prefix)?t.replace(this.config.prefix,""):" "+t),this.cleanup&&(t=g(t)),t))}}class el extends er{constructor(t){super(t),this.byte_decoder=S,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(t){let r=new Uint8Array([...t.join("")].map(t=>this.byte_decoder[t]));return this.text_decoder.decode(r)}decode_chain(t){let r=[],i=[];for(let s of t)void 0!==this.added_tokens.find(t=>t.content===s)?(i.length>0&&(r.push(this.convert_tokens_to_string(i)),i=[]),r.push(s)):i.push(s);return i.length>0&&r.push(this.convert_tokens_to_string(i)),r}}class eu extends er{constructor(t){super(t),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(t){if(0===t.length)return"";let r=[t[0]];for(let i=1;i<t.length;++i)t[i]!==r.at(-1)&&r.push(t[i]);let i=r.filter(t=>t!==this.pad_token).join("");return this.cleanup&&(i=g(i).replaceAll(this.word_delimiter_token," ").trim()),i}decode_chain(t){return[this.convert_tokens_to_string(t)]}}class ed extends er{constructor(t){super(t),this.decoders=t.decoders.map(t=>er.fromConfig(t))}decode_chain(t){return this.decoders.reduce((t,r)=>r.decode_chain(t),t)}}class ec extends er{constructor(t){super(t),this.suffix=this.config.suffix}decode_chain(t){return t.map((r,i)=>r.replaceAll(this.suffix,i===t.length-1?"":" "))}}class ep extends er{decode_chain(t){let r="";for(let i=1;i<t.length;i+=2)r+=t[i];return[r]}}class eh extends U{constructor(t){super(),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement,this.strRep=t.str_rep||this.replacement,this.prepend_scheme=t.prepend_scheme??"always"}pre_tokenize_text(t,{section_index:r}={}){let i=t.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!i.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===r)&&(i=this.strRep+i),[i]}}class em extends er{constructor(t){super(t),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement}decode_chain(t){let r=[];for(let i=0;i<t.length;++i){let s=t[i].replaceAll(this.replacement," ");this.addPrefixSpace&&0==i&&s.startsWith(" ")&&(s=s.substring(1)),r.push(s)}return r}}class ef extends F{constructor(t){super(t),this.charsmap=t.precompiled_charsmap}normalize(t){return t=(t=(t=t.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?t.split("～").map(t=>t.normalize("NFKC")).join("～"):t.normalize("NFKC")}}class eg extends U{constructor(t){super(),this.tokenizers=t.pretokenizers.map(t=>U.fromConfig(t))}pre_tokenize_text(t,r){return this.tokenizers.reduce((t,i)=>i.pre_tokenize(t,r),[t])}}class e_ extends U{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\w+|[^\w\s]+/g)||[]}}class ey extends U{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\S+/g)||[]}}class eb extends U{constructor(t){super(),this.config=t,this.pattern=h(this.config.pattern),this.content=this.config.content}pre_tokenize_text(t,r){return null===this.pattern?[t]:[t.replaceAll(this.pattern,this.config.content)]}}let ew=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];class ex extends s.Callable{return_token_type_ids=!1;padding_side="right";constructor(t,r){for(const i of(super(),this.config=r,this.normalizer=F.fromConfig(t.normalizer),this.pre_tokenizer=U.fromConfig(t.pre_tokenizer),this.model=T.fromConfig(t.model,r),this.post_processor=X.fromConfig(t.post_processor),this.decoder=er.fromConfig(t.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[],t.added_tokens)){const t=new M(i);this.added_tokens.push(t),this.model.tokens_to_ids.set(t.content,t.id),this.model.vocab[t.id]=t.content,t.special&&(this.special_tokens.push(t.content),this.all_special_ids.push(t.id))}if(this.additional_special_tokens=r.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new u.DictionarySplitter(this.added_tokens.map(t=>t.content)),this.added_tokens_map=new Map(this.added_tokens.map(t=>[t.content,t])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=r.model_max_length,this.remove_space=r.remove_space,this.clean_up_tokenization_spaces=r.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=r.do_lowercase_and_remove_accent??!1,r.padding_side&&(this.padding_side=r.padding_side),this.add_bos_token=r.add_bos_token,this.add_eos_token=r.add_eos_token,this.legacy=!1,this.chat_template=r.chat_template??null,Array.isArray(this.chat_template)){const t=Object.create(null);for(const{name:r,template:i}of this.chat_template){if("string"!=typeof r||"string"!=typeof i)throw Error('Chat template must be a list of objects with "name" and "template" properties');t[r]=i}this.chat_template=t}this._compiled_template_cache=new Map}getToken(...t){for(let r of t){let t=this.config[r];if(t)if("object"!=typeof t)return t;else if("AddedToken"===t.__type)return t.content;else throw Error(`Unknown token: ${t}`)}return null}static async from_pretrained(t,{progress_callback:r=null,config:i=null,cache_dir:s=null,local_files_only:a=!1,revision:n="main",legacy:o=null}={}){return new this(...await p(t,{progress_callback:r,config:i,cache_dir:s,local_files_only:a,revision:n,legacy:o}))}_call(t,{text_pair:r=null,add_special_tokens:i=!0,padding:s=!1,truncation:n=null,max_length:u=null,return_tensor:d=!0,return_token_type_ids:c=null}={}){let p,h=Array.isArray(t);if(h){if(0===t.length)throw Error("text array must be non-empty");if(null!==r){if(Array.isArray(r)){if(t.length!==r.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");p=t.map((t,s)=>this._encode_plus(t,{text_pair:r[s],add_special_tokens:i,return_token_type_ids:c}))}else p=t.map(t=>this._encode_plus(t,{add_special_tokens:i,return_token_type_ids:c}))}else{if(null==t)throw Error("text may not be null or undefined");if(Array.isArray(r))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");p=[this._encode_plus(t,{text_pair:r,add_special_tokens:i,return_token_type_ids:c})]}if(null===u?u=this.model_max_length:null===n&&(!0===s?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),u=this.model_max_length):!1===s&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),n=!0)),!0===s&&(u=Math.min((0,o.max)(p.map(t=>t.input_ids.length))[0],u??1/0)),u=Math.min(u,this.model_max_length??1/0),s||n)for(let t=0;t<p.length;++t)if(p[t].input_ids.length===u)continue;else p[t].input_ids.length>u?n&&function(t,r){for(let i of Object.keys(t))t[i].length=r}(p[t],u):s&&function(t,r,i,s){for(let n of Object.keys(t)){let o=r-t[n].length,l=i(n),u=Array(o).fill(l);t[n]="right"===s?(0,a.mergeArrays)(t[n],u):(0,a.mergeArrays)(u,t[n])}}(p[t],u,t=>"input_ids"===t?this.pad_token_id:0,this.padding_side);let m={};if(d){if(!(s&&n)&&p.some(t=>{for(let r of Object.keys(t))if(t[r].length!==p[0][r]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");let t=[p.length,p[0].input_ids.length];for(let r of Object.keys(p[0]))m[r]=new l.Tensor("int64",BigInt64Array.from(p.flatMap(t=>t[r]).map(BigInt)),t)}else{for(let t of Object.keys(p[0]))m[t]=p.map(r=>r[t]);if(!h)for(let t of Object.keys(m))m[t]=m[t][0]}return m}_encode_text(t){if(null===t)return null;let r=this.added_tokens_splitter.split(t);for(let t=0;t<r.length;++t){let i=this.added_tokens_map.get(r[t]);i&&(i.lstrip&&t>0&&(r[t-1]=r[t-1].trimEnd()),i.rstrip&&t<r.length-1&&(r[t+1]=r[t+1].trimStart()))}return r.flatMap((t,r)=>{if(0===t.length)return[];if(this.added_tokens_map.has(t))return[t];if(!0===this.remove_space&&(t=t.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(t=_(t.toLowerCase())),null!==this.normalizer&&(t=this.normalizer(t)),0===t.length)return[];let i=null!==this.pre_tokenizer?this.pre_tokenizer(t,{section_index:r}):[t];return this.model(i)})}_encode_plus(t,{text_pair:r=null,add_special_tokens:i=!0,return_token_type_ids:s=null}={}){let{tokens:a,token_type_ids:n}=this._tokenize_helper(t,{pair:r,add_special_tokens:i}),o=this.model.convert_tokens_to_ids(a),l={input_ids:o,attention_mask:Array(o.length).fill(1)};return(s??this.return_token_type_ids)&&n&&(l.token_type_ids=n),l}_tokenize_helper(t,{pair:r=null,add_special_tokens:i=!1}={}){let s=this._encode_text(t),n=this._encode_text(r);return this.post_processor?this.post_processor(s,n,{add_special_tokens:i}):{tokens:(0,a.mergeArrays)(s??[],n??[])}}tokenize(t,{pair:r=null,add_special_tokens:i=!1}={}){return this._tokenize_helper(t,{pair:r,add_special_tokens:i}).tokens}encode(t,{text_pair:r=null,add_special_tokens:i=!0,return_token_type_ids:s=null}={}){return this._encode_plus(t,{text_pair:r,add_special_tokens:i,return_token_type_ids:s}).input_ids}batch_decode(t,r={}){return t instanceof l.Tensor&&(t=t.tolist()),t.map(t=>this.decode(t,r))}decode(t,r={}){if(t instanceof l.Tensor&&(t=f(t)),!Array.isArray(t)||0===t.length||!(0,a.isIntegralNumber)(t[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(t,r)}decode_single(t,{skip_special_tokens:r=!1,clean_up_tokenization_spaces:i=null}){let s=this.model.convert_ids_to_tokens(t);r&&(s=s.filter(t=>!this.special_tokens.includes(t)));let a=this.decoder?this.decoder(s):s.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(a=a.replaceAll(this.decoder.end_of_word_suffix," "),r&&(a=a.trim())),(i??this.clean_up_tokenization_spaces)&&(a=g(a)),a}get_chat_template({chat_template:t=null,tools:r=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){let i=this.chat_template;if(null!==t&&Object.hasOwn(i,t))t=i[t];else if(null===t)if(null!==r&&"tool_use"in i)t=i.tool_use;else if("default"in i)t=i.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(i).sort()}.`)}else if(null===t)if(this.chat_template)t=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return t}apply_chat_template(t,{tools:r=null,documents:i=null,chat_template:s=null,add_generation_prompt:a=!1,tokenize:n=!0,padding:o=!1,truncation:l=!1,max_length:u=null,return_tensor:c=!0,return_dict:p=!1,tokenizer_kwargs:h={},...m}={}){if("string"!=typeof(s=this.get_chat_template({chat_template:s,tools:r})))throw Error(`chat_template must be a string, but got ${typeof s}`);let f=this._compiled_template_cache.get(s);void 0===f&&(f=new d.Template(s),this._compiled_template_cache.set(s,f));let g=Object.create(null);for(let t of ew){let r=this.getToken(t);r&&(g[t]=r)}let _=f.render({messages:t,add_generation_prompt:a,tools:r,documents:i,...g,...m});if(n){let t=this._call(_,{add_special_tokens:!1,padding:o,truncation:l,max_length:u,return_tensor:c,...h});return p?t:t.input_ids}return _}}class ev extends ex{return_token_type_ids=!0}class eM extends ex{return_token_type_ids=!0}class eT extends ex{return_token_type_ids=!0}class ek extends ex{return_token_type_ids=!0}class e$ extends ex{return_token_type_ids=!0}class eC extends ex{return_token_type_ids=!0}class eS extends ex{return_token_type_ids=!0}class eP extends ex{return_token_type_ids=!0}class eE extends ex{return_token_type_ids=!0}class eF extends ex{}class eA extends ex{}class eI extends ex{return_token_type_ids=!0;constructor(t,r){super(t,r),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ez extends ex{return_token_type_ids=!0}class eL extends ex{}class eO extends ex{}class eB extends ex{}class eD extends ex{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,i){return eY(this,t,r,i)}}class eN extends eD{}class ej extends ex{}class eR extends ex{}class eV extends ex{padding_side="left";constructor(t,r){super(t,r),this.legacy=r.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new eh({replacement:"▁",add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(t){if(null===t)return null;if(this.legacy||0===t.length)return super._encode_text(t);let r=super._encode_text("▁"+t.replaceAll("▁"," "));return r.length>1&&"▁"===r[0]&&this.special_tokens.includes(r[1])&&(r=r.slice(1)),r}}class eG extends ex{}class eU extends ex{}class eq extends ex{}class eW extends ex{}class eH extends ex{}class eK extends ex{}class eQ extends ex{}class eX extends ex{}class eJ extends ex{}function eY(t,r,i,s){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||"function"!=typeof t.lang_to_token)throw Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");let a=s.src_lang,n=s.tgt_lang;if(!t.language_codes.includes(n))throw Error(`Target language code "${n}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(void 0!==a){if(!t.language_codes.includes(a))throw Error(`Source language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(let r of t.post_processor.config.single)if("SpecialToken"in r&&t.languageRegex.test(r.SpecialToken.id)){r.SpecialToken.id=t.lang_to_token(a);break}}return s.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(n)])[0],t._call(r,i)}class eZ extends ex{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,i){return eY(this,t,r,i)}}class e0 extends ex{constructor(t,r){super(t,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)).map(t=>t.slice(2,-2)),this.lang_to_token=t=>`__${t}__`}_build_translation_inputs(t,r,i){return eY(this,t,r,i)}}class e1 extends ex{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(t,{return_timestamps:r=!1,return_language:i=!1,time_precision:s=null,force_full_sequences:a=!0}={}){if(null===s)throw Error("Must specify time_precision");let n=null,l="word"===r;function u(){return{language:n,timestamp:[null,null],text:""}}let d=[],p=u(),h=0,m=this.timestamp_begin,f=m+1500,g=[],_=[],y=!1,b=null,x=new Set(this.all_special_ids);for(let i of t){let t=i.tokens,a=l?i.token_timestamps:null,v=null,M=m;if("stride"in i){let[r,a,n]=i.stride;if(h-=a,b=r-n,a&&(M=a/s+m),n)for(let r=t.length-1;r>=0;--r){let i=Number(t[r]);if(i>=m){if(null!==v&&(i-m)*s<b)break;v=i}}}let T=[],k=[];for(let i=0;i<t.length;++i){let b=Number(t[i]);if(x.has(b)){let t=this.decode([b]),i=c.WHISPER_LANGUAGE_MAPPING.get(t.slice(2,-2));if(void 0!==i){if(null!==n&&i!==n&&!r){g.push(T);let t=this.findLongestCommonSequence(g)[0],r=this.decode(t);p.text=r,d.push(p),g=[],T=[],p=u()}n=p.language=i}}else if(b>=m&&b<=f){let t=(b-m)*s+h,r=(0,o.round)(t,2);if(null!==v&&b>=v)y=!0;else if(y||g.length>0&&b<M)y=!1;else if(null===p.timestamp[0])p.timestamp[0]=r;else if(r===p.timestamp[0]);else{p.timestamp[1]=r,g.push(T),l&&_.push(k);let[t,i]=this.findLongestCommonSequence(g,_),s=this.decode(t);p.text=s,l&&(p.words=this.collateWordTimestamps(t,i,n)),d.push(p),g=[],T=[],_=[],k=[],p=u()}}else if(T.push(b),l){let t,r=(0,o.round)(a[i]+h,2);if(i+1<a.length){t=(0,o.round)(a[i+1]+h,2);let n=this.decode([b]);w.test(n)&&(t=(0,o.round)(Math.min(r+s,t),2))}else t=null;k.push([r,t])}}if("stride"in i){let[t,r,s]=i.stride;h+=t-s}T.length>0?(g.push(T),l&&_.push(k)):g.every(t=>0===t.length)&&(p=u(),g=[],T=[],_=[],k=[])}if(g.length>0){if(a&&r)throw Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");let[t,i]=this.findLongestCommonSequence(g,_),s=this.decode(t);p.text=s,l&&(p.words=this.collateWordTimestamps(t,i,n)),d.push(p)}let v=Object.create(null),M=d.map(t=>t.text).join("");if(r||i){for(let t=0;t<d.length;++t){let s=d[t];r||delete s.timestamp,i||delete s.language}if(l){let t=[];for(let r of d)for(let i of r.words)t.push(i);v={chunks:t}}else v={chunks:d}}return[M,v]}findLongestCommonSequence(t,r=null){let i=t[0],s=i.length,a=[],n=Array.isArray(r)&&r.length>0,o=n?[]:null,l=n?r[0]:null;for(let u=1;u<t.length;++u){let d=t[u],c=0,p=[s,s,0,0],h=d.length;for(let t=1;t<s+h;++t){let a,o=Math.max(0,s-t),m=Math.min(s,s+h-t),f=i.slice(o,m),g=Math.max(0,t-s),_=Math.min(h,t),y=d.slice(g,_);if(f.length!==y.length)throw Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");a=n?f.filter((t,i)=>t===y[i]&&l[o+i]<=r[u][g+i]).length:f.filter((t,r)=>t===y[r]).length;let b=t/1e4,w=a/t+b;a>1&&w>c&&(c=w,p=[o,m,g,_])}let[m,f,g,_]=p,y=Math.floor((f+m)/2),b=Math.floor((_+g)/2);a.push(...i.slice(0,y)),s=(i=d.slice(b)).length,n&&(o.push(...l.slice(0,y)),l=r[u].slice(b))}return(a.push(...i),n)?(o.push(...l),[a,o]):[a,[]]}collateWordTimestamps(t,r,i){let[s,a,n]=this.combineTokensIntoWords(t,i),o=[];for(let t=0;t<s.length;++t){let i=n[t];o.push({text:s[t],timestamp:[r[i.at(0)][0],r[i.at(-1)][1]]})}return o}combineTokensIntoWords(t,r,i="\"'“¡¿([{-",s="\"'.。,，!！?？:：”)]}、"){let a,n,o;return["chinese","japanese","thai","lao","myanmar"].includes(r=r??"english")?[a,n,o]=this.splitTokensOnUnicode(t):[a,n,o]=this.splitTokensOnSpaces(t),this.mergePunctuations(a,n,o,i,s)}decode(t,r){let i;return r?.decode_with_timestamps?(t instanceof l.Tensor&&(t=f(t)),i=this.decodeWithTimestamps(t,r)):i=super.decode(t,r),i}decodeWithTimestamps(t,r){let i=r?.time_precision??.02,s=Array.from(this.all_special_ids).at(-1)+1,a=[[]];for(let r of t)if((r=Number(r))>=s){let t=((r-s)*i).toFixed(2);a.push(`<|${t}|>`),a.push([])}else a[a.length-1].push(r);return(a=a.map(t=>"string"==typeof t?t:super.decode(t,r))).join("")}splitTokensOnUnicode(t){let r=this.decode(t,{decode_with_timestamps:!0}),i=[],s=[],a=[],n=[],o=[],l=0;for(let u=0;u<t.length;++u){let d=t[u];n.push(d),o.push(u);let c=this.decode(n,{decode_with_timestamps:!0});c.includes("�")&&"�"!==r[l+c.indexOf("�")]||(i.push(c),s.push(n),a.push(o),n=[],o=[],l+=c.length)}return[i,s,a]}splitTokensOnSpaces(t){let[r,i,s]=this.splitTokensOnUnicode(t),a=[],n=[],o=[],l=RegExp(`^[${b}]$`,"gu");for(let t=0;t<r.length;++t){let u=r[t],d=i[t],c=s[t],p=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),h=u.startsWith(" "),m=u.trim(),f=l.test(m);if(p||h||f||0===a.length)a.push(u),n.push(d),o.push(c);else{let t=a.length-1;a[t]+=u,n[t].push(...d),o[t].push(...c)}}return[a,n,o]}mergePunctuations(t,r,i,s,n){let o=structuredClone(t),l=structuredClone(r),u=structuredClone(i),d=o.length-2,c=o.length-1;for(;d>=0;)o[d].startsWith(" ")&&s.includes(o[d].trim())?(o[c]=o[d]+o[c],l[c]=(0,a.mergeArrays)(l[d],l[c]),u[c]=(0,a.mergeArrays)(u[d],u[c]),o[d]="",l[d]=[],u[d]=[]):c=d,--d;for(d=0,c=1;c<o.length;)!o[d].endsWith(" ")&&n.includes(o[c])?(o[d]+=o[c],l[d]=(0,a.mergeArrays)(l[d],l[c]),u[d]=(0,a.mergeArrays)(u[d],u[c]),o[c]="",l[c]=[],u[c]=[]):d=c,++c;return[o.filter(t=>t),l.filter(t=>t.length>0),u.filter(t=>t.length>0)]}}class e2 extends ex{}class e3 extends ex{}class e4 extends ex{}class e8 extends ex{constructor(t,r){super(t,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(t=>this.languageRegex.test(t)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(t){if(null===t)return null;let[r,...i]=t.trim().split(this.languageRegex);if(0===i.length)return super._encode_text(r);if(2===i.length){let[t,r]=i;return this.supported_language_codes.includes(t)||console.warn(`Unsupported language code "${t}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,a.mergeArrays)([t],super._encode_text(r))}}}class e6 extends ex{}class e5 extends ex{}class e9 extends ex{}class e7 extends ex{}class te extends ex{}class tt extends ex{constructor(t,r){super(t,r),this.decoder=new ep({})}}class tr extends ex{}class ti extends ex{}class ts extends ex{}class ta{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:eL,DistilBertTokenizer:eF,CamembertTokenizer:eA,DebertaTokenizer:e$,DebertaV2Tokenizer:eC,BertTokenizer:ev,HerbertTokenizer:eS,ConvBertTokenizer:eP,RoFormerTokenizer:eE,XLMTokenizer:eI,ElectraTokenizer:ez,MobileBertTokenizer:eT,SqueezeBertTokenizer:ek,AlbertTokenizer:eM,GPT2Tokenizer:eO,BartTokenizer:eB,MBartTokenizer:eD,MBart50Tokenizer:eN,RobertaTokenizer:ej,WhisperTokenizer:e1,CodeGenTokenizer:e2,CLIPTokenizer:e3,SiglipTokenizer:e4,MarianTokenizer:e8,BloomTokenizer:eR,NllbTokenizer:eZ,M2M100Tokenizer:e0,LlamaTokenizer:eV,CodeLlamaTokenizer:eG,XLMRobertaTokenizer:eU,MPNetTokenizer:eq,FalconTokenizer:eW,GPTNeoXTokenizer:eH,EsmTokenizer:eK,Wav2Vec2CTCTokenizer:e6,BlenderbotTokenizer:e5,BlenderbotSmallTokenizer:e9,SpeechT5Tokenizer:e7,NougatTokenizer:te,VitsTokenizer:tt,Qwen2Tokenizer:eQ,GemmaTokenizer:eX,Grok1Tokenizer:eJ,CohereTokenizer:tr,MgpstrTokenizer:ti,Ernie4_5_Tokenizer:ts,PreTrainedTokenizer:ex};static async from_pretrained(t,{progress_callback:r=null,config:i=null,cache_dir:s=null,local_files_only:a=!1,revision:n="main",legacy:o=null}={}){let[l,u]=await p(t,{progress_callback:r,config:i,cache_dir:s,local_files_only:a,revision:n,legacy:o}),d=u.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer",c=this.TOKENIZER_CLASS_MAPPING[d];return c||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),c=ex),new c(l,u)}}},"./src/utils/audio.js":(t,r,i)=>{i.r(r),i.d(r,{RawAudio:()=>M,hamming:()=>h,hanning:()=>p,mel_filter_bank:()=>y,read_audio:()=>d,spectrogram:()=>w,window_function:()=>x});var s=i("./src/utils/hub.js"),a=i("./src/utils/maths.js"),n=i("./src/utils/core.js"),o=i("./src/env.js"),l=i("./src/utils/tensor.js"),u=i("?7992");async function d(t,r){let i;if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");let a=await (await (0,s.getFile)(t)).arrayBuffer(),n=new AudioContext({sampleRate:r});void 0===r&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);let o=await n.decodeAudioData(a);if(2===o.numberOfChannels){let t=Math.sqrt(2),r=o.getChannelData(0),s=o.getChannelData(1);i=new Float32Array(r.length);for(let a=0;a<o.length;++a)i[a]=t*(r[a]+s[a])/2}else i=o.getChannelData(0);return i}function c(t,r){if(t<1)return new Float64Array;if(1===t)return new Float64Array([1]);let i=1-r,s=2*Math.PI/(t-1),a=new Float64Array(t);for(let n=0;n<t;++n)a[n]=r-i*Math.cos(n*s);return a}function p(t){return c(t,.5)}function h(t){return c(t,.54)}let m={htk:t=>2595*Math.log10(1+t/700),kaldi:t=>1127*Math.log(1+t/700),slaney:(t,r=1e3,i=15,s=27/Math.log(6.4))=>t>=r?i+Math.log(t/r)*s:3*t/200};function f(t,r="htk"){let i=m[r];if(!i)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?i(t):t.map(t=>i(t))}let g={htk:t=>700*(10**(t/2595)-1),kaldi:t=>700*(Math.exp(t/1127)-1),slaney:(t,r=1e3,i=15,s=Math.log(6.4)/27)=>t>=i?r*Math.exp(s*(t-i)):200*t/3};function _(t,r,i){let s=(r-t)/(i-1);return Float64Array.from({length:i},(r,i)=>t+s*i)}function y(t,r,i,s,a,n=null,o="htk",l=!1){let u;if(null!==n&&"slaney"!==n)throw Error('norm must be one of null or "slaney"');if(t<2)throw Error(`Require num_frequency_bins: ${t} >= 2`);if(i>s)throw Error(`Require min_frequency: ${i} <= max_frequency: ${s}`);let d=_(f(i,o),f(s,o),r+2),c=function(t,r="htk"){let i=g[r];if(!i)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?i(t):t.map(t=>i(t))}(d,o);if(l){let r=a/((t-1)*2);u=f(Float64Array.from({length:t},(t,i)=>i*r),o),c=d}else u=_(0,Math.floor(a/2),t);let p=function(t,r){let i=Float64Array.from({length:r.length-1},(t,i)=>r[i+1]-r[i]),s=Array.from({length:t.length},()=>Array(r.length));for(let i=0;i<t.length;++i){let a=s[i];for(let s=0;s<r.length;++s)a[s]=r[s]-t[i]}let a=r.length-2,n=Array.from({length:a},()=>Array(t.length));for(let r=0;r<t.length;++r){let t=s[r];for(let s=0;s<a;++s){let a=-t[s]/i[s],o=t[s+2]/i[s+1];n[s][r]=Math.max(0,Math.min(a,o))}}return n}(u,c);if(null!==n&&"slaney"===n)for(let i=0;i<r;++i){let r=p[i],s=2/(c[i+2]-c[i]);for(let i=0;i<t;++i)r[i]*=s}return p}function b(t,r,i,s,n){if(i<=0)throw Error("reference must be greater than zero");if(s<=0)throw Error("min_value must be greater than zero");let o=Math.log10(i=Math.max(s,i));for(let i=0;i<t.length;++i)t[i]=r*Math.log10(Math.max(s,t[i])-o);if(null!==n){if(n<=0)throw Error("db_range must be greater than zero");let r=(0,a.max)(t)[0]-n;for(let i=0;i<t.length;++i)t[i]=Math.max(t[i],r)}return t}async function w(t,r,i,s,{fft_length:o=null,power:u=1,center:d=!0,pad_mode:c="reflect",onesided:p=!0,preemphasis:h=null,preemphasis_htk_flavor:m=!0,mel_filters:f=null,mel_floor:g=1e-10,log_mel:_=null,reference:y=1,min_value:x=1e-10,db_range:v=null,remove_dc_offset:M=null,min_num_frames:T=null,max_num_frames:k=null,do_pad:$=!0,transpose:C=!1,mel_offset:S=0}={}){let P=r.length;if(null===o&&(o=i),i>o)throw Error(`frame_length (${i}) may not be larger than fft_length (${o})`);if(P!==i)throw Error(`Length of the window (${P}) must equal frame_length (${i})`);if(s<=0)throw Error("hop_length must be greater than zero");if(null===u&&null!==f)throw Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!m)throw Error("`preemphasis_htk_flavor=false` is not currently supported.");if(d)switch(c){case"reflect":{let r=Math.floor((o-1)/2)+1;t=function(t,r,i){let s=new t.constructor(t.length+r+i),a=t.length-1;for(let i=0;i<t.length;++i)s[r+i]=t[i];for(let i=1;i<=r;++i)s[r-i]=t[(0,n.calculateReflectOffset)(i,a)];for(let o=1;o<=i;++o)s[a+r+o]=t[(0,n.calculateReflectOffset)(a-o,a)];return s}(t,r,r);break}case"constant":{let r=Math.floor(o/2),i=new t.constructor(t.length+2*r);i.set(t,r),t=i;break}default:throw Error(`pad_mode="${c}" not implemented yet.`)}let E=Math.floor(1+Math.floor((t.length-i)/s));null!==T&&E<T&&(E=T);let F=p?Math.floor(o/2)+1:o,A=E,I=E;null!==k&&(k>E?$&&(I=k):I=A=k);let z=new a.FFT(o),L=new Float64Array(o),O=new Float64Array(z.outputBufferSize),B=new Float32Array(F*I);for(let a=0;a<A;++a){let n=a*s,o=Math.min(t.length-n,i);o!==i&&L.fill(0,0,i);for(let r=0;r<o;++r)L[r]=t[n+r];if(M){let t=0;for(let r=0;r<o;++r)t+=L[r];let r=t/o;for(let t=0;t<o;++t)L[t]-=r}if(null!==h){for(let t=o-1;t>=1;--t)L[t]-=h*L[t-1];L[0]*=1-h}for(let t=0;t<r.length;++t)L[t]*=r[t];z.realTransform(O,L);for(let t=0;t<F;++t){let r=t<<1;B[t*I+a]=O[r]**2+O[r+1]**2}}if(null!==u&&2!==u){let t=u/2;for(let r=0;r<B.length;++r)B[r]**=t}let D=f.length,N=await (0,l.matmul)(new l.Tensor("float32",f.flat(),[D,F]),new l.Tensor("float32",B,[F,I]));C&&(N=N.transpose(1,0));let j=N.data;for(let t=0;t<j.length;++t)j[t]=S+Math.max(g,j[t]);if(null!==u&&null!==_){let t=Math.min(j.length,A*D);switch(_){case"log":for(let r=0;r<t;++r)j[r]=Math.log(j[r]);break;case"log10":for(let r=0;r<t;++r)j[r]=Math.log10(j[r]);break;case"dB":if(1===u)!function(t,r=1,i=1e-5,s=null){b(t,20,r,i,s)}(j,y,x,v);else if(2===u)!function(t,r=1,i=1e-10,s=null){b(t,10,r,i,s)}(j,y,x,v);else throw Error(`Cannot use log_mel option '${_}' with power ${u}`);break;default:throw Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return N}function x(t,r,{periodic:i=!0,frame_length:s=null,center:a=!0}={}){let n,o=i?t+1:t;switch(r){case"boxcar":n=new Float64Array(o).fill(1);break;case"hann":case"hann_window":n=p(o);break;case"hamming":n=h(o);break;case"povey":n=p(o).map(t=>Math.pow(t,.85));break;default:throw Error(`Unknown window type ${r}.`)}if(i&&(n=n.subarray(0,t)),null===s)return n;if(t>s)throw Error(`Length of the window (${t}) may not be larger than frame_length (${s})`);return n}function v(t,r,i){for(let s=0;s<i.length;++s)t.setUint8(r+s,i.charCodeAt(s))}class M{constructor(t,r){this.audio=t,this.sampling_rate=r}toWav(){return function(t,r){let i=44,s=new ArrayBuffer(44+4*t.length),a=new DataView(s);v(a,0,"RIFF"),a.setUint32(4,36+4*t.length,!0),v(a,8,"WAVE"),v(a,12,"fmt "),a.setUint32(16,16,!0),a.setUint16(20,3,!0),a.setUint16(22,1,!0),a.setUint32(24,r,!0),a.setUint32(28,4*r,!0),a.setUint16(32,4,!0),a.setUint16(34,32,!0),v(a,36,"data"),a.setUint32(40,4*t.length,!0);for(let r=0;r<t.length;++r,i+=4)a.setFloat32(i,t[r],!0);return s}(this.audio,this.sampling_rate)}toBlob(){return new Blob([this.toWav()],{type:"audio/wav"})}async save(t){let r;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw Error("Unable to save a file from a Web Worker.");r=n.saveBlob}else if(o.apis.IS_FS_AVAILABLE)r=async(t,r)=>{let i=await r.arrayBuffer();u.writeFileSync(t,P.Buffer.from(i))};else throw Error("Unable to save because filesystem is disabled in this environment.");await r(t,this.toBlob())}}},"./src/utils/constants.js":(t,r,i)=>{i.r(r),i.d(r,{CHAT_TEMPLATE_NAME:()=>u,CONFIG_NAME:()=>a,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>d,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>l});let s="https://github.com/huggingface/transformers.js/issues/new/choose",a="config.json",n="preprocessor_config.json",o=n,l="processor_config.json",u="chat_template.jinja",d="generation_config.json"},"./src/utils/core.js":(t,r,i)=>{function s(t,r){t&&t(r)}function a(t){return Object.fromEntries(Object.entries(t).map(([t,r])=>[r,t]))}function n(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(t){return t?.prototype?.__proto__?.constructor?.name==="TypedArray"}function l(t){return Number.isInteger(t)||"bigint"==typeof t}function u(t){return null==t||-1===t}function d(t){let r=[],i=t;for(;Array.isArray(i);)r.push(i.length),i=i[0];return r}function c(t,r,i){let s=t[r];if(void 0!==s)return delete t[r],s;if(void 0===i)throw Error(`Key ${r} does not exist in object.`);return i}function p(...t){return Array.prototype.concat.apply([],t)}function h(...t){return t.reduce((t,r)=>t.flatMap(t=>r.map(r=>[t,r])))}function m(t,r){return Math.abs((t+r)%(2*r)-r)}function f(t,r){let i=URL.createObjectURL(r),s=document.createElement("a");s.href=i,s.download=t,s.click(),s.remove(),URL.revokeObjectURL(i)}function g(t,r){return Object.assign({},...r.map(r=>{if(void 0!==t[r])return{[r]:t[r]}}))}function _(t){let r=0;for(let i of t)++r;return r}function y(t,r){let i=0;for(let s of t)s===r&&++i;return i}i.r(r),i.d(r,{calculateDimensions:()=>d,calculateReflectOffset:()=>m,count:()=>y,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>l,isNullishDimension:()=>u,isTypedArray:()=>o,len:()=>_,mergeArrays:()=>p,pick:()=>g,pop:()=>c,product:()=>h,reverseDictionary:()=>a,saveBlob:()=>f})},"./src/utils/data-structures.js":(t,r,i)=>{i.r(r),i.d(r,{CharTrie:()=>a,DictionarySplitter:()=>u,LRUCache:()=>d,PriorityQueue:()=>s,TokenLattice:()=>o});class s{constructor(t=(t,r)=>t>r,r=1/0){this._heap=[],this._comparator=t,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...t){return this.extend(t)}extend(t){for(let r of t)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{let t=this._smallest();this._comparator(r,this._heap[t])&&(this._heap[t]=r,this._siftUpFrom(t))}return this.size}pop(){let t=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),t}replace(t){let r=this.peek();return this._heap[0]=t,this._siftDown(),r}_parent(t){return(t+1>>>1)-1}_left(t){return(t<<1)+1}_right(t){return t+1<<1}_greater(t,r){return this._comparator(this._heap[t],this._heap[r])}_swap(t,r){let i=this._heap[t];this._heap[t]=this._heap[r],this._heap[r]=i}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(t){for(;t>0&&this._greater(t,this._parent(t));)this._swap(t,this._parent(t)),t=this._parent(t)}_siftDown(){let t=0;for(;this._left(t)<this.size&&this._greater(this._left(t),t)||this._right(t)<this.size&&this._greater(this._right(t),t);){let r=this._right(t)<this.size&&this._greater(this._right(t),this._left(t))?this._right(t):this._left(t);this._swap(t,r),t=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class a{constructor(){this.root=n.default()}extend(t){for(let r of t)this.push(r)}push(t){let r=this.root;for(let i of t){let t=r.children.get(i);void 0===t&&(t=n.default(),r.children.set(i,t)),r=t}r.isLeaf=!0}*commonPrefixSearch(t){let r=this.root;if(void 0===r)return;let i="";for(let s of t){if(i+=s,void 0===(r=r.children.get(s)))return;r.isLeaf&&(yield i)}}}class n{constructor(t,r){this.isLeaf=t,this.children=r}static default(){return new n(!1,new Map)}}class o{constructor(t,r,i){this.chars=Array.from(t),this.len=this.chars.length,this.bosTokenId=r,this.eosTokenId=i,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const s=new l(this.bosTokenId,0,0,0,0),a=new l(this.eosTokenId,1,this.len,0,0);this.nodes.push(s.clone()),this.nodes.push(a.clone()),this.beginNodes[this.len].push(a),this.endNodes[0].push(s)}insert(t,r,i,s){let a=new l(s,this.nodes.length,t,r,i);this.beginNodes[t].push(a),this.endNodes[t+r].push(a),this.nodes.push(a)}viterbi(){let t=this.len,r=0;for(;r<=t;){if(0==this.beginNodes[r].length)return[];for(let t of this.beginNodes[r]){t.prev=null;let i=0,s=null;for(let a of this.endNodes[r]){let r=a.backtraceScore+t.score;(null===s||r>i)&&(s=a.clone(),i=r)}if(null===s)return[];t.prev=s,t.backtraceScore=i}++r}let i=[],s=this.beginNodes[t][0].prev;if(null===s)return[];let a=s.clone();for(;null!==a.prev;)i.push(a.clone()),a=a.clone().prev.clone();return i.reverse(),i}piece(t){return this.chars.slice(t.pos,t.pos+t.length).join("")}tokens(){return this.viterbi().map(t=>this.piece(t))}tokenIds(){return this.viterbi().map(t=>t.tokenId)}}class l{constructor(t,r,i,s,a){this.tokenId=t,this.nodeId=r,this.pos=i,this.length=s,this.score=a,this.prev=null,this.backtraceScore=0}clone(){let t=new l(this.tokenId,this.nodeId,this.pos,this.length,this.score);return t.prev=this.prev,t.backtraceScore=this.backtraceScore,t}}class u{constructor(t){this.trie=this._buildTrie(t)}_buildTrie(t){let r=Object.create(null);for(let i of t){let t=r;for(let r=0;r<i.length;++r)t=t[i[r]]??=Object.create(null);t.end=i}return r}split(t){let r=[],i=t.length,s=0,a=0;for(;a<i;){let n=this.trie,o=null,l=a;for(;l<i&&(n=n[t[l]]);)n.end&&(o=n.end),++l;o?(a>s&&r.push(t.slice(s,a)),r.push(o),a+=o.length,s=a):++a}return s<i&&r.push(t.slice(s)),r}}class d{constructor(t){this.capacity=t,this.cache=new Map}get(t){if(!this.cache.has(t))return;let r=this.cache.get(t);return this.cache.delete(t),this.cache.set(t,r),r}put(t,r){this.cache.has(t)&&this.cache.delete(t),this.cache.set(t,r),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(t,r,i)=>{i.r(r),i.d(r,{DEVICE_TYPES:()=>s});let s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(t,r,i)=>{let s;i.r(r),i.d(r,{DATA_TYPES:()=>l,DEFAULT_DEVICE_DTYPE_MAPPING:()=>u,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>d,isWebGpuFp16Supported:()=>o});var a=i("./src/env.js"),n=i("./src/utils/devices.js");let o=async function(){if(void 0===s)if(a.apis.IS_WEBGPU_AVAILABLE)try{s=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch(t){s=!1}else s=!1;return s},l=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),u=Object.freeze({[n.DEVICE_TYPES.wasm]:l.q8}),d=Object.freeze({[l.fp32]:"",[l.fp16]:"_fp16",[l.int8]:"_int8",[l.uint8]:"_uint8",[l.q8]:"_quantized",[l.q4]:"_q4",[l.q4f16]:"_q4f16",[l.bnb4]:"_bnb4"})},"./src/utils/generic.js":(t,r,i)=>{i.r(r),i.d(r,{Callable:()=>s});let s=class{constructor(){let t=function(...r){return t._call(...r)};return Object.setPrototypeOf(t,new.target.prototype)}_call(){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(t,r,i)=>{i.r(r),i.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>l,getFile:()=>h,getModelFile:()=>_,getModelJSON:()=>b,getModelText:()=>y});var s=i("?7992"),a=i("?5af5"),n=i("./src/env.js"),o=i("./src/utils/core.js");let l=100,u={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class d{constructor(t){if(this.filePath=t,this.headers=new Headers,this.exists=s.existsSync(t),this.exists){this.status=200,this.statusText="OK";let r=s.statSync(t);this.headers.set("content-length",r.size.toString()),this.updateContentType();const i=s.createReadStream(t);this.body=new ReadableStream({start(t){i.on("data",r=>t.enqueue(r)),i.on("end",()=>t.close()),i.on("error",r=>t.error(r))},cancel(){i.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){let t=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",u[t]??"application/octet-stream")}clone(){let t=new d(this.filePath);return t.exists=this.exists,t.status=this.status,t.statusText=this.statusText,t.headers=new Headers(this.headers),t}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){return new Blob([await s.promises.readFile(this.filePath)],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function c(t,r=null,i=null){let s;try{s=new URL(t)}catch(t){return!1}return(!r||!!r.includes(s.protocol))&&(!i||!!i.includes(s.hostname))}let p=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function h(t){if(n.env.useFS&&!c(t,["http:","https:","blob:"]))return new d(t instanceof URL?"file:"===t.protocol?t.pathname:t.toString():t);if(void 0===S.default||S.default?.release?.name!=="node")return fetch(t);{let r=!!S.default.env?.TESTING_REMOTELY,i=n.env.version,s=new Headers;if(s.set("User-Agent",`transformers.js/${i}; is_ci/${r};`),c(t,["http:","https:"],["huggingface.co","hf.co"])){let t=S.default.env?.HF_TOKEN??S.default.env?.HF_ACCESS_TOKEN;t&&s.set("Authorization",`Bearer ${t}`)}return fetch(t,{headers:s})}}let m={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class f{constructor(t){this.path=t}async match(t){let r=new d(a.join(this.path,t));return r.exists?r:void 0}async put(t,r,i){let n=a.join(this.path,t);try{let t=r.headers.get("Content-Length"),o=parseInt(t??"0"),l=0;await s.promises.mkdir(a.dirname(n),{recursive:!0});let u=s.createWriteStream(n),d=r.body.getReader();for(;;){let{done:t,value:r}=await d.read();if(t)break;await new Promise((t,i)=>{u.write(r,r=>{r?i(r):t()})}),l+=r.length;let s=o?l/o*100:0;i?.({progress:s,loaded:l,total:o})}u.close()}catch(t){try{await s.promises.unlink(n)}catch{}throw t}}}async function g(t,...r){for(let i of r)try{let r=await t.match(i);if(r)return r}catch(t){continue}}async function _(t,r,i=!0,s={},a=!1){let l,u,y,b;if(!n.env.allowLocalModels){if(s.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");else if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}if((0,o.dispatchCallback)(s.progress_callback,{status:"initiate",name:t,file:r}),!l&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");l=n.env.customCache}if(!l&&n.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{l=await caches.open("transformers-cache")}catch(t){console.warn("An error occurred while opening the browser cache:",t)}}if(!l&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");l=new f(s.cache_dir??n.env.cacheDir)}let v=s.revision??"main",M=x(t,r),T=!(!p.test(t)||t.includes("..")||t.includes("--")||t.endsWith(".git")||t.endsWith(".ipynb")),k=T?x(n.env.localModelPath,M):M,$=x(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(v)),r),C=l instanceof f?"main"===v?M:x(t,v,r):$,S=!1;l&&(y=await g(l,k,C));let P=void 0!==y;if(void 0===y){if(n.env.allowLocalModels)if(c(M,["http:","https:"])){if(s.local_files_only)throw Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${M}.`);else if(!n.env.allowRemoteModels)throw Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${M}.`)}else try{y=await h(k),u=k}catch(t){console.warn(`Unable to load from local path "${k}": "${t}"`)}if(void 0===y||404===y.status){if(s.local_files_only||!n.env.allowRemoteModels)if(!i)return null;else throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${k}".`);if(!T)throw Error(`Local file missing at "${k}" and download aborted due to invalid model ID "${t}".`);if(200!==(y=await h($)).status){var E=y.status;if(!i)return null;let t=m[E]??`Error (${E}) occurred while trying to load file`;throw Error(`${t}: "${$}".`)}u=C}S=l&&"undefined"!=typeof Response&&y instanceof Response&&200===y.status}if((0,o.dispatchCallback)(s.progress_callback,{status:"download",name:t,file:r}),!(n.apis.IS_NODE_ENV&&a)){let i;s.progress_callback?P&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(i=new Uint8Array(await y.arrayBuffer()),(0,o.dispatchCallback)(s.progress_callback,{status:"progress",name:t,file:r,progress:100,loaded:i.length,total:i.length})):i=await w(y,i=>{(0,o.dispatchCallback)(s.progress_callback,{status:"progress",name:t,file:r,...i})}):i=new Uint8Array(await y.arrayBuffer()),b=i}if(S&&u&&await l.match(u)===void 0)if(b)await l.put(u,new Response(b,{headers:y.headers})).catch(t=>{console.warn(`Unable to add response to browser cache: ${t}.`)});else{let i=s.progress_callback?i=>(0,o.dispatchCallback)(s.progress_callback,{status:"progress",name:t,file:r,...i}):void 0;await l.put(u,y,i)}if((0,o.dispatchCallback)(s.progress_callback,{status:"done",name:t,file:r}),b){if(!n.apis.IS_NODE_ENV&&a)throw Error("Cannot return path in a browser environment.");return b}if(y instanceof d)return y.filePath;let F=await l?.match(u);if(F instanceof d)return F.filePath;if(F instanceof Response)return new Uint8Array(await F.arrayBuffer());if("string"==typeof F)return F;throw Error("Unable to get model file path or buffer.")}async function y(t,r,i=!0,s={}){let a=await _(t,r,i,s,!1);return null===a?null:new TextDecoder("utf-8").decode(a)}async function b(t,r,i=!0,s={}){let a=await y(t,r,i,s);return null===a?{}:JSON.parse(a)}async function w(t,r){let i=t.headers.get("Content-Length");null===i&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let s=parseInt(i??"0"),a=new Uint8Array(s),n=0,o=t.body.getReader();async function l(){let{done:t,value:i}=await o.read();if(t)return;let u=n+i.length;if(u>s){let t=new Uint8Array(s=u);t.set(a),a=t}return a.set(i,n),r({progress:(n=u)/s*100,loaded:n,total:s}),l()}return await l(),a}function x(...t){return(t=t.map((r,i)=>(i&&(r=r.replace(RegExp("^/"),"")),i!==t.length-1&&(r=r.replace(RegExp("/$"),"")),r))).join("/")}},"./src/utils/image.js":(t,r,i)=>{let s,a,n;i.r(r),i.d(r,{RawImage:()=>f,load_image:()=>g});var o=i("./src/utils/core.js"),l=i("./src/utils/hub.js"),u=i("./src/env.js"),d=i("./src/utils/tensor.js"),c=i("?2b25");let p=u.apis.IS_BROWSER_ENV||u.apis.IS_WEBWORKER_ENV;if(p)s=(t,r)=>{if(!self.OffscreenCanvas)throw Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(t,r)},n=self.createImageBitmap,a=self.ImageData;else if(c)n=async t=>{let r=(await t.metadata()).channels,{data:i,info:s}=await t.rotate().raw().toBuffer({resolveWithObject:!0}),a=new f(new Uint8ClampedArray(i),s.width,s.height,s.channels);return void 0!==r&&r!==s.channels&&a.convert(r),a};else throw Error("Unable to load image processing library.");let h={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},m=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(t,r,i,s){this.data=t,this.width=r,this.height=i,this.channels=s}get size(){return[this.width,this.height]}static async read(t){if(t instanceof f)return t;if("string"==typeof t||t instanceof URL)return await this.fromURL(t);if(t instanceof Blob)return await this.fromBlob(t);if("undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas)return this.fromCanvas(t);throw Error(`Unsupported input type: ${typeof t}`)}static fromCanvas(t){if(!p)throw Error("fromCanvas() is only supported in browser environments.");return new f(t.getContext("2d").getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}static async fromURL(t){let r=await (0,l.getFile)(t);if(200!==r.status)throw Error(`Unable to read image from "${t}" (${r.status} ${r.statusText})`);let i=await r.blob();return this.fromBlob(i)}static async fromBlob(t){if(p){let r=await n(t),i=s(r.width,r.height).getContext("2d");return i.drawImage(r,0,0),new this(i.getImageData(0,0,r.width,r.height).data,r.width,r.height,4)}{let r=c(await t.arrayBuffer());return await n(r)}}static fromTensor(t,r="CHW"){if(3!==t.dims.length)throw Error(`Tensor should have 3 dimensions, but has ${t.dims.length} dimensions.`);if("CHW"===r)t=t.transpose(1,2,0);else if("HWC"===r);else throw Error(`Unsupported channel format: ${r}`);if(!(t.data instanceof Uint8ClampedArray||t.data instanceof Uint8Array))throw Error(`Unsupported tensor type: ${t.type}`);switch(t.dims[2]){case 1:case 2:case 3:case 4:return new f(t.data,t.dims[1],t.dims[0],t.dims[2]);default:throw Error(`Unsupported number of channels: ${t.dims[2]}`)}}grayscale(){if(1===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let r=0,i=0;r<this.data.length;r+=this.channels){let s=this.data[r],a=this.data[r+1],n=this.data[r+2];t[i++]=Math.round(.2989*s+.587*a+.114*n)}break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let r=0,i=0;r<this.data.length;++r)t[i++]=this.data[r],t[i++]=this.data[r],t[i++]=this.data[r];break;case 4:for(let r=0,i=0;r<this.data.length;r+=4)t[i++]=this.data[r],t[i++]=this.data[r+1],t[i++]=this.data[r+2];break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let r=0,i=0;r<this.data.length;++r)t[i++]=this.data[r],t[i++]=this.data[r],t[i++]=this.data[r],t[i++]=255;break;case 3:for(let r=0,i=0;r<this.data.length;r+=3)t[i++]=this.data[r],t[i++]=this.data[r+1],t[i++]=this.data[r+2],t[i++]=255;break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,4)}putAlpha(t){if(t.width!==this.width||t.height!==this.height)throw Error(`Expected mask size to be ${this.width}x${this.height}, but got ${t.width}x${t.height}`);if(1!==t.channels)throw Error(`Expected mask to have 1 channel, but got ${t.channels}`);let r=this.data,i=t.data,s=this.width*this.height;if(3===this.channels){let t=new Uint8ClampedArray(4*s);for(let a=0,n=0,o=0;a<s;++a)t[o++]=r[n++],t[o++]=r[n++],t[o++]=r[n++],t[o++]=i[a];return this._update(t,this.width,this.height,4)}if(4===this.channels){for(let t=0;t<s;++t)r[4*t+3]=i[t];return this}throw Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(t,r,{resample:i=2}={}){if(this.width===t&&this.height===r)return this;let a=h[i]??i,l=(0,o.isNullishDimension)(t),u=(0,o.isNullishDimension)(r);if(l&&u)return this;if(l?t=r/this.height*this.width:u&&(r=t/this.width*this.height),p){let i=this.channels,a=this.toCanvas(),n=s(t,r).getContext("2d");return n.drawImage(a,0,0,t,r),new f(n.getImageData(0,0,t,r).data,t,r,4).convert(i)}{let i=this.toSharp();switch(a){case"box":case"hamming":("box"===a||"hamming"===a)&&(console.warn(`Resampling method ${a} is not yet supported. Using bilinear instead.`),a="bilinear");case"nearest":case"bilinear":case"bicubic":i=i.affine([t/this.width,0,0,r/this.height],{interpolator:a});break;case"lanczos":i=i.resize({width:t,height:r,fit:"fill",kernel:"lanczos3"});break;default:throw Error(`Resampling method ${a} is not supported.`)}return await n(i)}}async pad([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.max(i,0),a=Math.max(a,0),0===t&&0===r&&0===i&&0===a)return this;if(p){let n=this.channels,o=this.toCanvas(),l=this.width+t+r,u=this.height+i+a,d=s(l,u).getContext("2d");return d.drawImage(o,0,0,this.width,this.height,t,i,this.width,this.height),new f(d.getImageData(0,0,l,u).data,l,u,4).convert(n)}{let s=this.toSharp().extend({left:t,right:r,top:i,bottom:a});return await n(s)}}async crop([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.min(i,this.width-1),a=Math.min(a,this.height-1),0===t&&0===r&&i===this.width-1&&a===this.height-1)return this;let o=i-t+1,l=a-r+1;if(p){let i=this.channels,a=this.toCanvas(),n=s(o,l).getContext("2d");return n.drawImage(a,t,r,o,l,0,0,o,l),new f(n.getImageData(0,0,o,l).data,o,l,4).convert(i)}{let i=this.toSharp().extract({left:t,top:r,width:o,height:l});return await n(i)}}async center_crop(t,r){if(this.width===t&&this.height===r)return this;let i=(this.width-t)/2,a=(this.height-r)/2;if(p){let n=this.channels,o=this.toCanvas(),l=s(t,r).getContext("2d"),u=0,d=0,c=0,p=0;return i>=0?u=i:c=-i,a>=0?d=a:p=-a,l.drawImage(o,u,d,t,r,c,p,t,r),new f(l.getImageData(0,0,t,r).data,t,r,4).convert(n)}{let s=this.toSharp();if(i>=0&&a>=0)s=s.extract({left:Math.floor(i),top:Math.floor(a),width:t,height:r});else if(i<=0&&a<=0){let n=Math.floor(-a),o=Math.floor(-i);s=s.extend({top:n,left:o,right:t-this.width-o,bottom:r-this.height-n})}else{let n=[0,0],o=0;a<0?(n[0]=Math.floor(-a),n[1]=r-this.height-n[0]):o=Math.floor(a);let l=[0,0],u=0;i<0?(l[0]=Math.floor(-i),l[1]=t-this.width-l[0]):u=Math.floor(i),s=s.extend({top:n[0],bottom:n[1],left:l[0],right:l[1]}).extract({left:u,top:o,width:t,height:r})}return await n(s)}}async toBlob(t="image/png",r=1){if(!p)throw Error("toBlob() is only supported in browser environments.");let i=this.toCanvas();return await i.convertToBlob({type:t,quality:r})}toTensor(t="CHW"){let r=new d.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===t);else if("CHW"===t)r=r.permute(2,0,1);else throw Error(`Unsupported channel format: ${t}`);return r}toCanvas(){if(!p)throw Error("toCanvas() is only supported in browser environments.");let t=this.clone().rgba(),r=s(t.width,t.height),i=new a(t.data,t.width,t.height);return r.getContext("2d").putImageData(i,0,0),r}split(){let{data:t,width:r,height:i,channels:s}=this,a=t.constructor,n=t.length/s,o=Array.from({length:s},()=>new a(n));for(let r=0;r<n;++r){let i=s*r;for(let a=0;a<s;++a)o[a][r]=t[i+a]}return o.map(t=>new f(t,r,i,1))}_update(t,r,i,s=null){return this.data=t,this.width=r,this.height=i,null!==s&&(this.channels=s),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(t){if(this.channels===t)return this;switch(t){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(t){if(p){if(u.apis.IS_WEBWORKER_ENV)throw Error("Unable to save an image from a Web Worker.");let r=t.split(".").pop().toLowerCase(),i=m.get(r)??"image/png",s=await this.toBlob(i);(0,o.saveBlob)(t,s)}else if(u.apis.IS_FS_AVAILABLE){let r=this.toSharp();return await r.toFile(t)}else throw Error("Unable to save the image because filesystem is disabled in this environment.")}toSharp(){if(p)throw Error("toSharp() is only supported in server-side environments.");return c(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}let g=f.read.bind(f)},"./src/utils/maths.js":(t,r,i)=>{function s(t,[r,i,a],[n,o],l="bilinear",u=!1){let d=o/a,c=n/i,p=new t.constructor(n*o*r),h=i*a,m=n*o;for(let s=0;s<n;++s)for(let n=0;n<o;++n){let l=s*o+n,u=(n+.5)/d-.5,f=(s+.5)/c-.5,g=Math.floor(u),_=Math.floor(f),y=Math.min(g+1,a-1),b=Math.min(_+1,i-1),w=u-(g=Math.max(g,0)),x=f-(_=Math.max(_,0)),v=(1-w)*(1-x),M=w*(1-x),T=(1-w)*x,k=w*x,$=_*a,C=b*a,S=$+g,P=$+y,E=C+g,F=C+y;for(let i=0;i<r;++i){let r=i*h;p[i*m+l]=v*t[r+S]+M*t[r+P]+T*t[r+E]+k*t[r+F]}}return p}function a(t,r,i){let s=Array(i.length),a=Array(i.length);for(let t=i.length-1,n=1;t>=0;--t)a[t]=n,s[t]=r[i[t]],n*=s[t];let n=i.map((t,r)=>a[i.indexOf(r)]),o=new t.constructor(t.length);for(let i=0;i<t.length;++i){let s=0;for(let t=r.length-1,a=i;t>=0;--t)s+=a%r[t]*n[t],a=Math.floor(a/r[t]);o[s]=t[i]}return[o,s]}function n(t){let r=p(t)[0],i=t.map(t=>Math.exp(t-r)),s=i.reduce((t,r)=>t+r,0);return i.map(t=>t/s)}function o(t){let r=p(t)[0],i=0;for(let s=0;s<t.length;++s)i+=Math.exp(t[s]-r);let s=Math.log(i);return t.map(t=>t-r-s)}function l(t,r){let i=0;for(let s=0;s<t.length;++s)i+=t[s]*r[s];return i}function u(t,r){return l(t,r)/(d(t)*d(r))}function d(t){return Math.sqrt(t.reduce((t,r)=>t+r*r,0))}function c(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],i=0;for(let s=1;s<t.length;++s)t[s]<r&&(r=t[s],i=s);return[r,i]}function p(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],i=0;for(let s=1;s<t.length;++s)t[s]>r&&(r=t[s],i=s);return[r,i]}function h(t){return t>0&&(t&t-1)==0}i.r(r),i.d(r,{FFT:()=>g,bankers_round:()=>b,cos_sim:()=>u,dot:()=>l,dynamic_time_warping:()=>w,interpolate_data:()=>s,log_softmax:()=>o,magnitude:()=>d,max:()=>p,medianFilter:()=>_,min:()=>c,permute_data:()=>a,round:()=>y,softmax:()=>n});class m{constructor(t){if(this.size=0|t,this.size<=1||!h(this.size))throw Error("FFT size must be a power of two larger than 1");this._csize=t<<1,this.table=new Float64Array(2*this.size);for(let t=0;t<this.table.length;t+=2){const r=Math.PI*t/this.size;this.table[t]=Math.cos(r),this.table[t+1]=-Math.sin(r)}let r=0;for(let t=1;this.size>t;t<<=1)++r;this._width=r%2==0?r-1:r,this._bitrev=new Int32Array(1<<this._width);for(let t=0;t<this._bitrev.length;++t){this._bitrev[t]=0;for(let r=0;r<this._width;r+=2){const i=this._width-r-2;this._bitrev[t]|=(t>>>r&3)<<i}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(t,r){let i=r||Array(t.length>>>1);for(let r=0;r<t.length;r+=2)i[r>>>1]=t[r];return i}toComplexArray(t,r){let i=r||this.createComplexArray();for(let r=0;r<i.length;r+=2)i[r]=t[r>>>1],i[r+1]=0;return i}transform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,1)}realTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._realTransform4(t,r,1)}inverseTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,-1);for(let r=0;r<t.length;++r)t[r]/=this.size}_transform4(t,r,i){let s,a,n=this._csize,o=1<<this._width,l=n/o<<1,u=this._bitrev;if(4===l)for(s=0,a=0;s<n;s+=l,++a){let i=u[a];this._singleTransform2(r,t,s,i,o)}else for(s=0,a=0;s<n;s+=l,++a){let n=u[a];this._singleTransform4(r,t,s,n,o,i)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=n/o<<1)>>>2;for(s=0;s<n;s+=l){let a=s+r-1;for(let n=s,l=0;n<a;n+=2,l+=o){let s=n,a=s+r,o=a+r,u=o+r,c=t[s],p=t[s+1],h=t[a],m=t[a+1],f=t[o],g=t[o+1],_=t[u],y=t[u+1],b=d[l],w=i*d[l+1],x=h*b-m*w,v=h*w+m*b,M=d[2*l],T=i*d[2*l+1],k=f*M-g*T,$=f*T+g*M,C=d[3*l],S=i*d[3*l+1],P=_*C-y*S,E=_*S+y*C,F=c+k,A=p+$,I=c-k,z=p-$,L=x+P,O=v+E,B=i*(x-P),D=i*(v-E);t[s]=F+L,t[s+1]=A+O,t[a]=I+D,t[a+1]=z-B,t[o]=F-L,t[o+1]=A-O,t[u]=I-D,t[u+1]=z+B}}}}_singleTransform2(t,r,i,s,a){let n=t[s],o=t[s+1],l=t[s+a],u=t[s+a+1];r[i]=n+l,r[i+1]=o+u,r[i+2]=n-l,r[i+3]=o-u}_singleTransform4(t,r,i,s,a,n){let o=2*a,l=3*a,u=t[s],d=t[s+1],c=t[s+a],p=t[s+a+1],h=t[s+o],m=t[s+o+1],f=t[s+l],g=t[s+l+1],_=u+h,y=d+m,b=u-h,w=d-m,x=c+f,v=p+g,M=n*(c-f),T=n*(p-g);r[i]=_+x,r[i+1]=y+v,r[i+2]=b+T,r[i+3]=w-M,r[i+4]=_-x,r[i+5]=y-v,r[i+6]=b-T,r[i+7]=w+M}_realTransform4(t,r,i){let s,a,n=this._csize,o=1<<this._width,l=n/o<<1,u=this._bitrev;if(4===l)for(s=0,a=0;s<n;s+=l,++a){let i=u[a];this._singleRealTransform2(r,t,s,i>>>1,o>>>1)}else for(s=0,a=0;s<n;s+=l,++a){let n=u[a];this._singleRealTransform4(r,t,s,n>>>1,o>>>1,i)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=n/o<<1)>>>1,a=r>>>1,u=a>>>1;for(s=0;s<n;s+=l)for(let n=0,l=0;n<=u;n+=2,l+=o){let o=s+n,c=o+a,p=c+a,h=p+a,m=t[o],f=t[o+1],g=t[c],_=t[c+1],y=t[p],b=t[p+1],w=t[h],x=t[h+1],v=d[l],M=i*d[l+1],T=g*v-_*M,k=g*M+_*v,$=d[2*l],C=i*d[2*l+1],S=y*$-b*C,P=y*C+b*$,E=d[3*l],F=i*d[3*l+1],A=w*E-x*F,I=w*F+x*E,z=m+S,L=f+P,O=m-S,B=f-P,D=T+A,N=k+I,j=i*(T-A),R=i*(k-I);if(t[o]=z+D,t[o+1]=L+N,t[c]=O+R,t[c+1]=B-j,0===n){t[p]=z-D,t[p+1]=L-N;continue}if(n===u)continue;let V=s+a-n,G=s+r-n;t[V]=O-i*R,t[V+1]=-B-i*j,t[G]=z-i*D,t[G+1]=-L+i*N}}let c=n>>>1;for(let r=2;r<c;r+=2)t[n-r]=t[r],t[n-r+1]=-t[r+1]}_singleRealTransform2(t,r,i,s,a){let n=t[s],o=t[s+a];r[i]=n+o,r[i+1]=0,r[i+2]=n-o,r[i+3]=0}_singleRealTransform4(t,r,i,s,a,n){let o=t[s],l=t[s+a],u=t[s+2*a],d=t[s+3*a],c=o+u,p=o-u,h=l+d,m=n*(l-d);r[i]=c+h,r[i+1]=0,r[i+2]=p,r[i+3]=-m,r[i+4]=c-h,r[i+5]=0,r[i+6]=p,r[i+7]=m}}class f{constructor(t){const r=2*(t-1),i=2*(2*t-1),s=2**Math.ceil(Math.log2(i));this.bufferSize=s,this._a=r;const a=new Float64Array(i),n=new Float64Array(s);this._chirpBuffer=new Float64Array(s),this._buffer1=new Float64Array(s),this._buffer2=new Float64Array(s),this._outBuffer1=new Float64Array(s),this._outBuffer2=new Float64Array(s);const o=-2*Math.PI/t,l=Math.cos(o),u=Math.sin(o);for(let r=0;r<i>>1;++r){const i=(r+1-t)**2/2,s=Math.sqrt(l**2+u**2)**i,o=i*Math.atan2(u,l),d=2*r;a[d]=s*Math.cos(o),a[d+1]=s*Math.sin(o),n[d]=a[d],n[d+1]=-a[d+1]}this._slicedChirpBuffer=a.subarray(r,i),this._f=new m(s>>1),this._f.transform(this._chirpBuffer,n)}_transform(t,r,i){let s=this._buffer1,a=this._buffer2,n=this._outBuffer1,o=this._outBuffer2,l=this._chirpBuffer,u=this._slicedChirpBuffer,d=this._a;if(i)for(let t=0;t<u.length;t+=2){let i=t+1,a=r[t>>1];s[t]=a*u[t],s[i]=a*u[i]}else for(let t=0;t<u.length;t+=2){let i=t+1;s[t]=r[t]*u[t]-r[i]*u[i],s[i]=r[t]*u[i]+r[i]*u[t]}this._f.transform(n,s);for(let t=0;t<l.length;t+=2){let r=t+1;a[t]=n[t]*l[t]-n[r]*l[r],a[r]=n[t]*l[r]+n[r]*l[t]}this._f.inverseTransform(o,a);for(let r=0;r<o.length;r+=2){let i=o[r+d],s=o[r+d+1],a=u[r],n=u[r+1];t[r]=i*a-s*n,t[r+1]=i*n+s*a}}transform(t,r){this._transform(t,r,!1)}realTransform(t,r){this._transform(t,r,!0)}}class g{constructor(t){this.fft_length=t,this.isPowerOfTwo=h(t),this.isPowerOfTwo?(this.fft=new m(t),this.outputBufferSize=2*t):(this.fft=new f(t),this.outputBufferSize=this.fft.bufferSize)}realTransform(t,r){this.fft.realTransform(t,r)}transform(t,r){this.fft.transform(t,r)}}function _(t,r){if(r%2==0||r<=0)throw Error("Window size must be a positive odd number");let i=new t.constructor(t.length),s=new t.constructor(r),a=Math.floor(r/2);for(let r=0;r<t.length;++r){let n=0;for(let i=-a;i<=a;++i){let a=r+i;a<0?a=Math.abs(a):a>=t.length&&(a=2*(t.length-1)-a),s[n++]=t[a]}s.sort(),i[r]=s[a]}return i}function y(t,r){let i=Math.pow(10,r);return Math.round(t*i)/i}function b(t){let r=Math.round(t);return Math.abs(t)%1==.5?r%2==0?r:r-1:r}function w(t){let r=t.length,i=t[0].length,s=[r+1,i+1],a=Array.from({length:s[0]},()=>Array(s[1]).fill(1/0));a[0][0]=0;let n=Array.from({length:s[0]},()=>Array(s[1]).fill(-1));for(let r=1;r<s[1];++r)for(let i=1;i<s[0];++i){let s,o,l=a[i-1][r-1],u=a[i-1][r],d=a[i][r-1];l<u&&l<d?(s=l,o=0):u<l&&u<d?(s=u,o=1):(s=d,o=2),a[i][r]=t[i-1][r-1]+s,n[i][r]=o}for(let t=0;t<s[1];++t)n[0][t]=2;for(let t=0;t<s[0];++t)n[t][0]=1;let o=r,l=i,u=[],d=[];for(;o>0||l>0;)switch(u.push(o-1),d.push(l-1),n[o][l]){case 0:--o,--l;break;case 1:--o;break;case 2:--l;break;default:throw Error(`Internal error in dynamic time warping. Unexpected trace[${o}, ${l}]. Please file a bug report.`)}return u.reverse(),d.reverse(),[u,d]}},"./src/utils/tensor.js":(t,r,i)=>{i.r(r),i.d(r,{DataTypeMap:()=>o,Tensor:()=>l,cat:()=>v,full:()=>S,full_like:()=>P,interpolate:()=>d,interpolate_4d:()=>c,layer_norm:()=>y,matmul:()=>p,mean:()=>$,mean_pooling:()=>_,ones:()=>E,ones_like:()=>F,permute:()=>u,quantize_embeddings:()=>L,rand:()=>z,rfft:()=>h,slice:()=>g,stack:()=>M,std_mean:()=>k,topk:()=>m,zeros:()=>A,zeros_like:()=>I});var s=i("./src/utils/maths.js"),a=i("./src/backends/onnx.js"),n=i("./src/ops/registry.js");let o=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class l{get dims(){return this.ort_tensor.dims}set dims(t){this.ort_tensor.dims=t}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...t){return(0,a.isONNXTensor)(t[0])?this.ort_tensor=t[0]:this.ort_tensor=new a.Tensor(t[0],t[1],t[2]),new Proxy(this,{get:(t,r)=>{if("string"==typeof r){let i=Number(r);if(Number.isInteger(i))return t._getitem(i)}return t[r]},set:(t,r,i)=>t[r]=i})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){let[t,...r]=this.dims;if(r.length>0){let i=r.reduce((t,r)=>t*r);for(let s=0;s<t;++s)yield this._subarray(s,i,r)}else yield*this.data}_getitem(t){let[r,...i]=this.dims;if(t=x(t,r),!(i.length>0))return new l(this.type,[this.data[t]],i);{let r=i.reduce((t,r)=>t*r);return this._subarray(t,r,i)}}indexOf(t){let r=this.data;for(let i=0;i<r.length;++i)if(r[i]==t)return i;return -1}_subarray(t,r,i){let s=t*r,a=(t+1)*r,n="subarray"in this.data?this.data.subarray(s,a):this.data.slice(s,a);return new l(this.type,n,i)}item(){let t=this.data;if(1!==t.length)throw Error(`a Tensor with ${t.length} elements cannot be converted to Scalar`);return t[0]}tolist(){return function(t,r){let i=t.length;if(i!==r.reduce((t,r)=>t*r))throw Error(`cannot reshape array of size ${i} into shape (${r})`);let s=t;for(let t=r.length-1;t>=0;t--)s=s.reduce((i,s)=>{let a=i[i.length-1];return a.length<r[t]?a.push(s):i.push([s]),i},[[]]);return s[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=1/(1+Math.exp(-t[r]));return this}map(t){return this.clone().map_(t)}map_(t){let r=this.data;for(let i=0;i<r.length;++i)r[i]=t(r[i],i,r);return this}mul(t){return this.clone().mul_(t)}mul_(t){let r=this.data;for(let i=0;i<r.length;++i)r[i]*=t;return this}div(t){return this.clone().div_(t)}div_(t){let r=this.data;for(let i=0;i<r.length;++i)r[i]/=t;return this}add(t){return this.clone().add_(t)}add_(t){let r=this.data;for(let i=0;i<r.length;++i)r[i]+=t;return this}sub(t){return this.clone().sub_(t)}sub_(t){let r=this.data;for(let i=0;i<r.length;++i)r[i]-=t;return this}clone(){return new l(this.type,this.data.slice(),this.dims.slice())}slice(...t){let r=[],i=[];for(let s=0;s<this.dims.length;++s){let a=t[s];if(null==a)i.push([0,this.dims[s]]),r.push(this.dims[s]);else if("number"==typeof a)a=x(a,this.dims[s],s),i.push([a,a+1]);else if(Array.isArray(a)&&2===a.length){let[t,n]=a;if((t=null===t?0:x(t,this.dims[s],s,!1))>(n=null===n?this.dims[s]:x(n,this.dims[s],s,!1)))throw Error(`Invalid slice: ${a}`);let o=[Math.max(t,0),Math.min(n,this.dims[s])];i.push(o),r.push(o[1]-o[0])}else throw Error(`Invalid slice: ${a}`)}let s=i.map(([t,r])=>r-t),a=s.reduce((t,r)=>t*r),n=this.data,o=new n.constructor(a),u=this.stride(),d=!0;for(let t=1;t<s.length;++t)if(0!==i[t][0]||i[t][1]!==this.dims[t]){d=!1;break}if(d){let t=i[0][0]*u[0],r=i[0][1]*u[0];if(ArrayBuffer.isView(n))o.set(n.subarray(t,r));else if(Array.isArray(n)){let i=n.slice(t,r);for(let t=0;t<i.length;++t)o[t]=i[t]}else throw Error("Unsupported data type for slicing")}else for(let t=0;t<a;++t){let r=0;for(let a=s.length-1,n=t;a>=0;--a){let t=s[a];r+=(n%t+i[a][0])*u[a],n=Math.floor(n/t)}o[t]=n[r]}return new l(this.type,o,r)}permute(...t){return u(this,t)}transpose(...t){return this.permute(...t)}sum(t=null,r=!1){return this.norm(1,t,r)}norm(t="fro",r=null,i=!1){if("fro"===t)t=2;else if("string"==typeof t)throw Error(`Unsupported norm: ${t}`);let s=this.data,a=(r,i)=>r+i**t;if(null===r){let r=s.reduce(a,0)**(1/t);return new l(this.type,[r],[])}let[n,o,u]=T(a,this,r,i);if(1!==t)for(let r=0;r<o.length;++r)o[r]=o[r]**(1/t);return new l(n,o,u)}normalize_(t=2,r=1){r=x(r,this.dims.length);let i=this.norm(t,r,!0),s=this.data,a=i.data;for(let t=0;t<s.length;++t){let i=0;for(let s=this.dims.length-1,a=t,n=1;s>=0;--s){let t=this.dims[s];s!==r&&(i+=a%t*n,n*=this.dims[s]),a=Math.floor(a/t)}s[t]/=a[i]}return this}normalize(t=2,r=1){return this.clone().normalize_(t,r)}stride(){return function(t){let r=Array(t.length);for(let i=t.length-1,s=1;i>=0;--i)r[i]=s,s*=t[i];return r}(this.dims)}squeeze(t=null){return new l(this.type,this.data,b(this.dims,t))}squeeze_(t=null){return this.dims=b(this.dims,t),this}unsqueeze(t=null){return new l(this.type,this.data,w(this.dims,t))}unsqueeze_(t=null){return this.dims=w(this.dims,t),this}flatten_(t=0,r=-1){r=(r+this.dims.length)%this.dims.length;let i=this.dims.slice(0,t),s=this.dims.slice(t,r+1),a=this.dims.slice(r+1);return this.dims=[...i,s.reduce((t,r)=>t*r,1),...a],this}flatten(t=0,r=-1){return this.clone().flatten_(t,r)}view(...t){let r=-1;for(let i=0;i<t.length;++i)if(-1===t[i]){if(-1!==r)throw Error("Only one dimension can be inferred");r=i}let i=this.data;if(-1!==r){let s=t.reduce((t,i,s)=>s!==r?t*i:t,1);t[r]=i.length/s}return new l(this.type,i,t)}neg_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=-t[r];return this}neg(){return this.clone().neg_()}gt(t){let r=new Uint8Array(this.data.length),i=this.data;for(let s=0;s<i.length;++s)r[s]=+(i[s]>t);return new l("bool",r,this.dims)}lt(t){let r=new Uint8Array(this.data.length),i=this.data;for(let s=0;s<i.length;++s)r[s]=+(i[s]<t);return new l("bool",r,this.dims)}clamp_(t,r){let i=this.data;for(let s=0;s<i.length;++s)i[s]=Math.min(Math.max(i[s],t),r);return this}clamp(t,r){return this.clone().clamp_(t,r)}round_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=Math.round(t[r]);return this}round(){return this.clone().round_()}mean(t=null,r=!1){return $(this,t,r)}min(t=null,r=!1){if(null===t){let t=(0,s.min)(this.data)[0];return new l(this.type,[t],[])}let[i,a,n]=T((t,r)=>Math.min(t,r),this,t,r,1/0);return new l(i,a,n)}max(t=null,r=!1){if(null===t){let t=(0,s.max)(this.data)[0];return new l(this.type,[t],[])}let[i,a,n]=T((t,r)=>Math.max(t,r),this,t,r,-1/0);return new l(i,a,n)}argmin(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new l("int64",[BigInt((0,s.min)(this.data)[1])],[])}argmax(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new l("int64",[BigInt((0,s.max)(this.data)[1])],[])}to(t){let r;if(this.type===t)return this;if(!o.hasOwnProperty(t))throw Error(`Unsupported type: ${t}`);let i=["int64","uint64"].includes(this.type),s=["int64","uint64"].includes(t);return i&&!s?r=Number:!i&&s&&(r=BigInt),new l(t,o[t].from(this.data,r),this.dims)}}function u(t,r){let[i,a]=(0,s.permute_data)(t.data,t.dims,r);return new l(t.type,i,a)}function d(t,[r,i],a="bilinear",n=!1){let o=t.dims.at(-3)??1,u=t.dims.at(-2),c=t.dims.at(-1),p=(0,s.interpolate_data)(t.data,[o,u,c],[r,i],a,n);return new l(t.type,p,[o,r,i])}async function c(t,{size:r=null,mode:i="bilinear"}={}){let s,a;if(4!==t.dims.length)throw Error("`interpolate_4d` currently only supports 4D input.");if(!r)throw Error("`interpolate_4d` requires a `size` argument.");if(2===r.length)s=[...t.dims.slice(0,2),...r];else if(3===r.length)s=[t.dims[0],...r];else if(4===r.length)s=r;else throw Error("`size` must be of length 2, 3, or 4.");if("nearest"===i)a=await n.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===i)a=await n.TensorOpRegistry.bilinear_interpolate_4d;else if("bicubic"===i)a=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw Error(`Unsupported mode: ${i}`);let o=new l("int64",new BigInt64Array(s.map(BigInt)),[s.length]);return await a({x:t,s:o})}async function p(t,r){let i=await n.TensorOpRegistry.matmul;return await i({a:t,b:r})}async function h(t,r){let i=await n.TensorOpRegistry.rfft;return await i({x:t,a:r})}async function m(t,r){let i=await n.TensorOpRegistry.top_k;return r=null==r?t.dims.at(-1):Math.min(r,t.dims.at(-1)),await i({x:t,k:new l("int64",[BigInt(r)],[1])})}let f=t=>new l("int64",t,[t.length]);async function g(t,r,i,s,a){let o=await n.TensorOpRegistry.slice;return await o({x:t,s:f(r),e:f(i),a:f(s),t:f(a??Array(s.length).fill(1))})}function _(t,r){let i=t.data,s=r.data,a=[t.dims[0],t.dims[2]],n=new i.constructor(a[0]*a[1]),[o,u,d]=t.dims,c=0;for(let t=0;t<o;++t){let r=t*d*u;for(let a=0;a<d;++a){let o=0,l=0,p=t*u,h=r+a;for(let t=0;t<u;++t){let r=Number(s[p+t]);l+=r,o+=i[h+t*d]*r}let m=o/l;n[c++]=m}}return new l(t.type,n,a)}function y(t,r,{eps:i=1e-5}={}){if(2!==t.dims.length)throw Error("`layer_norm` currently only supports 2D input.");let[s,a]=t.dims;if(1!==r.length&&r[0]!==a)throw Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");let[n,o]=k(t,1,0,!0),u=n.data,d=o.data,c=t.data,p=new c.constructor(c.length);for(let t=0;t<s;++t){let r=t*a;for(let s=0;s<a;++s){let a=r+s;p[a]=(c[a]-d[t])/(u[t]+i)}}return new l(t.type,p,t.dims)}function b(t,r){return t=t.slice(),null===r?t=t.filter(t=>1!==t):"number"==typeof r?1===t[r]&&t.splice(r,1):Array.isArray(r)&&(t=t.filter((t,i)=>1!==t||!r.includes(i))),t}function w(t,r){return r=x(r,t.length+1),(t=t.slice()).splice(r,0,1),t}function x(t,r,i=null,s=!0){if(t<-r||t>=r)if(!s)return t<-r?0:r;else throw Error(`IndexError: index ${t} is out of bounds for dimension${null===i?"":" "+i} with size ${r}`);return t<0&&(t=(t%r+r)%r),t}function v(t,r=0){r=x(r,t[0].dims.length);let i=t[0].dims.slice();i[r]=t.reduce((t,i)=>t+i.dims[r],0);let s=i.reduce((t,r)=>t*r,1),a=new t[0].data.constructor(s),n=t[0].type;if(0===r){let r=0;for(let i of t){let t=i.data;a.set(t,r),r+=t.length}}else{let s=0;for(let n=0;n<t.length;++n){let{data:o,dims:l}=t[n];for(let t=0;t<o.length;++t){let n=0;for(let a=l.length-1,o=t,u=1;a>=0;--a){let t=l[a],d=o%t;a===r&&(d+=s),n+=d*u,u*=i[a],o=Math.floor(o/t)}a[n]=o[t]}s+=l[r]}}return new l(n,a,i)}function M(t,r=0){return v(t.map(t=>t.unsqueeze(r)),r)}function T(t,r,i=null,s=!1,a=null){let n=r.data,o=r.dims;i=x(i,o.length);let l=o.slice();l[i]=1;let u=new n.constructor(n.length/o[i]);null!==a&&u.fill(a);for(let r=0;r<n.length;++r){let s=0;for(let t=o.length-1,a=r,n=1;t>=0;--t){let r=o[t];t!==i&&(s+=a%r*n,n*=l[t]),a=Math.floor(a/r)}u[s]=t(u[s],n[r],r,s)}return s||l.splice(i,1),[r.type,u,l]}function k(t,r=null,i=1,s=!1){let a=t.data,n=t.dims;if(null===r){let r=a.reduce((t,r)=>t+r,0)/a.length,s=Math.sqrt(a.reduce((t,i)=>t+(i-r)**2,0)/(a.length-i)),n=new l(t.type,[r],[]);return[new l(t.type,[s],[]),n]}let o=$(t,r=x(r,n.length),s),u=o.data,[d,c,p]=T((t,r,i,s)=>t+(r-u[s])**2,t,r,s);for(let t=0;t<c.length;++t)c[t]=Math.sqrt(c[t]/(n[r]-i));return[new l(d,c,p),o]}function $(t,r=null,i=!1){let s=t.dims,a=t.data;if(null===r){let r=a.reduce((t,r)=>t+r,0);return new l(t.type,[r/a.length],[])}let[n,o,u]=T((t,r)=>t+r,t,r=x(r,s.length),i);if(1!==s[r])for(let t=0;t<o.length;++t)o[t]/=s[r];return new l(n,o,u)}function C(t,r,i,s){return new l(i,new s(t.reduce((t,r)=>t*r,1)).fill(r),t)}function S(t,r){let i,s;if("number"==typeof r)i="float32",s=Float32Array;else if("bigint"==typeof r)i="int64",s=BigInt64Array;else if("boolean"==typeof r)i="bool",s=Uint8Array;else throw Error(`Unsupported data type: ${typeof r}`);return C(t,r,i,s)}function P(t,r){return S(t.dims,r)}function E(t){return C(t,1n,"int64",BigInt64Array)}function F(t){return E(t.dims)}function A(t){return C(t,0n,"int64",BigInt64Array)}function I(t){return A(t.dims)}function z(t){let r=t.reduce((t,r)=>t*r,1);return new l("float32",Float32Array.from({length:r},()=>Math.random()),t)}function L(t,r){if(2!==t.dims.length)throw Error("The tensor must have 2 dimensions");if(t.dims.at(-1)%8!=0)throw Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(r))throw Error("The precision must be either 'binary' or 'ubinary'");let i="binary"===r,s=i?Int8Array:Uint8Array,a=t.data,n=new s(a.length/8);for(let t=0;t<a.length;++t){let r=+(a[t]>0),s=Math.floor(t/8),o=t%8;n[s]|=r<<7-o,i&&0===o&&(n[s]-=128)}return new l(i?"int8":"uint8",n,[t.dims[0],t.dims[1]/8])}},"./src/utils/video.js":(t,r,i)=>{i.r(r),i.d(r,{RawVideo:()=>o,RawVideoFrame:()=>n,load_video:()=>l});var s=i("./src/utils/image.js"),a=i("./src/env.js");class n{constructor(t,r){this.image=t,this.timestamp=r}}class o{constructor(t,r){t.length>0&&t[0]instanceof s.RawImage&&(t=t.map((i,s)=>new n(i,(s+1)/(t.length+1)*r))),this.frames=t,this.duration=r}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function l(t,{num_frames:r=null,fps:i=null}={}){let u,d;if(!a.apis.IS_BROWSER_ENV)throw Error("`load_video` is currently only supported in browser environments.");if(null==r&&null==i)throw Error("Either num_frames or fps must be provided.");let c=[],p=document.createElement("video");if(p.crossOrigin="anonymous",p.muted=!0,"string"==typeof t)p.src=t;else if(t instanceof Blob)p.src=URL.createObjectURL(t);else if(t instanceof HTMLVideoElement)p.src=t.src;else throw Error("Invalid URL or video element provided.");if(await new Promise(t=>p.onloadedmetadata=t),p.seekable.start(0)===p.seekable.end(0)){let t=await fetch(p.src),r=await t.blob();p.src=URL.createObjectURL(r),await new Promise(t=>p.onloadedmetadata=t)}let h=p.duration;null!=r?(u=r,d=1===r?0:h/(r-1)):u=Math.floor(h/(d=1/i));let m=[];for(let t=0;t<u;++t)m.push(1===r?h/2:t*d);let f=document.createElement("canvas");f.width=p.videoWidth,f.height=p.videoHeight;let g=f.getContext("2d",{willReadFrequently:!0});for(let t of m){p.currentTime=t,await new Promise(t=>{p.onseeked=t}),g.drawImage(p,0,0,f.width,f.height);let r=g.getImageData(0,0,f.width,f.height),i=new n(new s.RawImage(r.data,f.width,f.height,4),t);c.push(i)}return p.remove(),new o(c,h)}}},oJ={};function oY(t){var r=oJ[t];if(void 0!==r)return r.exports;var i=oJ[t]={exports:{}};return oX[t](i,i.exports,oY),i.exports}i=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,oY.t=function(t,s){if(1&s&&(t=this(t)),8&s||"object"==typeof t&&t&&(4&s&&t.__esModule||16&s&&"function"==typeof t.then))return t;var a=Object.create(null);oY.r(a);var n={};r=r||[null,i({}),i([]),i(i)];for(var o=2&s&&t;"object"==typeof o&&!~r.indexOf(o);o=i(o))Object.getOwnPropertyNames(o).forEach(r=>n[r]=()=>t[r]);return n.default=()=>t,oY.d(a,n),a},oY.d=(t,r)=>{for(var i in r)oY.o(r,i)&&!oY.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:r[i]})},oY.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),oY.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var oZ={};oY.r(oZ),oY.d(oZ,{ASTFeatureExtractor:()=>f.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>o.AlbertTokenizer,ArceeForCausalLM:()=>n.ArceeForCausalLM,ArceeModel:()=>n.ArceeModel,ArceePreTrainedModel:()=>n.ArceePreTrainedModel,AudioClassificationPipeline:()=>a.AudioClassificationPipeline,AutoConfig:()=>l.AutoConfig,AutoFeatureExtractor:()=>g.AutoFeatureExtractor,AutoImageProcessor:()=>b.AutoImageProcessor,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>n.AutoModelForAudioTextToText,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>n.AutoModelForImageTextToText,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>n.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>n.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>n.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>v.AutoProcessor,AutoTokenizer:()=>o.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>a.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>a.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>o.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>M.BaseStreamer,BeitFeatureExtractor:()=>y.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>o.BertTokenizer,BitImageProcessor:()=>y.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>o.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>o.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>o.BloomTokenizer,CLIPFeatureExtractor:()=>y.CLIPFeatureExtractor,CLIPImageProcessor:()=>y.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModel:()=>n.CLIPTextModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>o.CLIPTokenizer,CLIPVisionModel:()=>n.CLIPVisionModel,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>o.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>y.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>f.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>k.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>o.CodeGenTokenizer,CodeLlamaTokenizer:()=>o.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>o.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>o.ConvBertTokenizer,ConvNextFeatureExtractor:()=>y.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>y.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>n.DFineForObjectDetection,DFineModel:()=>n.DFineModel,DFinePreTrainedModel:()=>n.DFinePreTrainedModel,DINOv3ConvNextModel:()=>n.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>n.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>y.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>n.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>n.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>y.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>y.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DacDecoderModel:()=>n.DacDecoderModel,DacDecoderOutput:()=>n.DacDecoderOutput,DacEncoderModel:()=>n.DacEncoderModel,DacEncoderOutput:()=>n.DacEncoderOutput,DacFeatureExtractor:()=>f.DacFeatureExtractor,DacModel:()=>n.DacModel,DacPreTrainedModel:()=>n.DacPreTrainedModel,DataTypeMap:()=>p.DataTypeMap,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>o.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>o.DebertaV2Tokenizer,DecisionTransformerModel:()=>n.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>n.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>y.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTImageProcessor:()=>y.DeiTImageProcessor,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>a.DepthEstimationPipeline,DepthProForDepthEstimation:()=>n.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>n.DepthProPreTrainedModel,DetrFeatureExtractor:()=>y.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrImageProcessor:()=>y.DetrImageProcessor,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>n.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>n.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>n.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>o.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>a.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>y.DonutFeatureExtractor,DonutImageProcessor:()=>y.DonutImageProcessor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>y.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>o.ElectraTokenizer,EncodecFeatureExtractor:()=>f.EncodecFeatureExtractor,EosTokenCriteria:()=>T.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>n.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>n.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>n.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>o.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>o.EsmTokenizer,ExaoneForCausalLM:()=>n.ExaoneForCausalLM,ExaoneModel:()=>n.ExaoneModel,ExaonePreTrainedModel:()=>n.ExaonePreTrainedModel,FFT:()=>h.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>o.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>a.FeatureExtractionPipeline,FeatureExtractor:()=>m.FeatureExtractor,FillMaskPipeline:()=>a.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>x.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>k.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>k.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>y.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>o.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>o.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>n.Gemma3ForCausalLM,Gemma3Model:()=>n.Gemma3Model,Gemma3PreTrainedModel:()=>n.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>f.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>n.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>n.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>x.Gemma3nProcessor,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>o.GemmaTokenizer,GlmForCausalLM:()=>n.GlmForCausalLM,GlmModel:()=>n.GlmModel,GlmPreTrainedModel:()=>n.GlmPreTrainedModel,GraniteForCausalLM:()=>n.GraniteForCausalLM,GraniteModel:()=>n.GraniteModel,GraniteMoeHybridForCausalLM:()=>n.GraniteMoeHybridForCausalLM,GraniteMoeHybridModel:()=>n.GraniteMoeHybridModel,GraniteMoeHybridPreTrainedModel:()=>n.GraniteMoeHybridPreTrainedModel,GranitePreTrainedModel:()=>n.GranitePreTrainedModel,Grok1Tokenizer:()=>o.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>n.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>y.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>n.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>x.GroundingDinoProcessor,GroupViTModel:()=>n.GroupViTModel,GroupViTPreTrainedModel:()=>n.GroupViTPreTrainedModel,HeliumForCausalLM:()=>n.HeliumForCausalLM,HeliumModel:()=>n.HeliumModel,HeliumPreTrainedModel:()=>n.HeliumPreTrainedModel,HerbertTokenizer:()=>o.HerbertTokenizer,HieraForImageClassification:()=>n.HieraForImageClassification,HieraModel:()=>n.HieraModel,HieraPreTrainedModel:()=>n.HieraPreTrainedModel,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,IJepaForImageClassification:()=>n.IJepaForImageClassification,IJepaModel:()=>n.IJepaModel,IJepaPreTrainedModel:()=>n.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>n.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>y.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>n.Idefics3PreTrainedModel,Idefics3Processor:()=>x.Idefics3Processor,ImageClassificationPipeline:()=>a.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>a.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>f.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>a.ImageSegmentationPipeline,ImageToImagePipeline:()=>a.ImageToImagePipeline,ImageToTextPipeline:()=>a.ImageToTextPipeline,InterruptableStoppingCriteria:()=>T.InterruptableStoppingCriteria,JAISLMHeadModel:()=>n.JAISLMHeadModel,JAISModel:()=>n.JAISModel,JAISPreTrainedModel:()=>n.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>y.JinaCLIPImageProcessor,JinaCLIPModel:()=>n.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>n.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>x.JinaCLIPProcessor,JinaCLIPTextModel:()=>n.JinaCLIPTextModel,JinaCLIPVisionModel:()=>n.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>n.Lfm2ForCausalLM,Lfm2Model:()=>n.Lfm2Model,Lfm2PreTrainedModel:()=>n.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>n.LiteWhisperForConditionalGeneration,Llama4ForCausalLM:()=>n.Llama4ForCausalLM,Llama4PreTrainedModel:()=>n.Llama4PreTrainedModel,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>o.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>n.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LlavaProcessor:()=>x.LlavaProcessor,LlavaQwen2ForCausalLM:()=>n.LlavaQwen2ForCausalLM,LogitsProcessor:()=>k.LogitsProcessor,LogitsProcessorList:()=>k.LogitsProcessorList,LogitsWarper:()=>k.LogitsWarper,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>o.M2M100Tokenizer,MBart50Tokenizer:()=>o.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>o.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>o.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>o.MarianTokenizer,Mask2FormerImageProcessor:()=>y.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>y.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>n.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>y.MaskFormerImageProcessor,MaskFormerModel:()=>n.MaskFormerModel,MaskFormerPreTrainedModel:()=>n.MaskFormerPreTrainedModel,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>T.MaxLengthCriteria,Metric3DForDepthEstimation:()=>n.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>n.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>n.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>n.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>n.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>n.MgpstrModelOutput,MgpstrPreTrainedModel:()=>n.MgpstrPreTrainedModel,MgpstrProcessor:()=>x.MgpstrProcessor,MgpstrTokenizer:()=>o.MgpstrTokenizer,MimiDecoderModel:()=>n.MimiDecoderModel,MimiDecoderOutput:()=>n.MimiDecoderOutput,MimiEncoderModel:()=>n.MimiEncoderModel,MimiEncoderOutput:()=>n.MimiEncoderOutput,MimiModel:()=>n.MimiModel,MimiPreTrainedModel:()=>n.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>k.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>k.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>o.MobileBertTokenizer,MobileLLMForCausalLM:()=>n.MobileLLMForCausalLM,MobileLLMModel:()=>n.MobileLLMModel,MobileLLMPreTrainedModel:()=>n.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>y.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>n.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>y.MobileNetV1ImageProcessor,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>y.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>n.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>y.MobileNetV2ImageProcessor,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>y.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>n.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>y.MobileNetV3ImageProcessor,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>y.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>n.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>y.MobileNetV4ImageProcessor,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>y.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>y.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,ModernBertDecoderForCausalLM:()=>n.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>n.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>n.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>n.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>n.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>n.ModernBertForTokenClassification,ModernBertModel:()=>n.ModernBertModel,ModernBertPreTrainedModel:()=>n.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>f.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>n.MoonshineForConditionalGeneration,MoonshineModel:()=>n.MoonshineModel,MoonshinePreTrainedModel:()=>n.MoonshinePreTrainedModel,MoonshineProcessor:()=>x.MoonshineProcessor,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MultiModalityCausalLM:()=>n.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>n.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NanoChatForCausalLM:()=>n.NanoChatForCausalLM,NanoChatModel:()=>n.NanoChatModel,NanoChatPreTrainedModel:()=>n.NanoChatPreTrainedModel,NeoBertForMaskedLM:()=>n.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>n.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>n.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>n.NeoBertForTokenClassification,NeoBertModel:()=>n.NeoBertModel,NeoBertPreTrainedModel:()=>n.NeoBertPreTrainedModel,NllbTokenizer:()=>o.NllbTokenizer,NoBadWordsLogitsProcessor:()=>k.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>k.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>y.NougatImageProcessor,NougatTokenizer:()=>o.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>a.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>n.Olmo2ForCausalLM,Olmo2Model:()=>n.Olmo2Model,Olmo2PreTrainedModel:()=>n.Olmo2PreTrainedModel,OlmoForCausalLM:()=>n.OlmoForCausalLM,OlmoModel:()=>n.OlmoModel,OlmoPreTrainedModel:()=>n.OlmoPreTrainedModel,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>y.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTImageProcessor:()=>y.OwlViTImageProcessor,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>x.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>y.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>n.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>n.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>x.PaliGemmaProcessor,ParakeetFeatureExtractor:()=>f.ParakeetFeatureExtractor,ParakeetForCTC:()=>n.ParakeetForCTC,ParakeetPreTrainedModel:()=>n.ParakeetPreTrainedModel,PatchTSMixerForPrediction:()=>n.PatchTSMixerForPrediction,PatchTSMixerModel:()=>n.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>n.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>n.PatchTSTForPrediction,PatchTSTModel:()=>n.PatchTSTModel,PatchTSTPreTrainedModel:()=>n.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,Phi3VForCausalLM:()=>n.Phi3VForCausalLM,Phi3VImageProcessor:()=>y.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>n.Phi3VPreTrainedModel,Phi3VProcessor:()=>x.Phi3VProcessor,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>a.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>o.PreTrainedTokenizer,PretrainedConfig:()=>l.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>w.Processor,PvtForImageClassification:()=>n.PvtForImageClassification,PvtImageProcessor:()=>y.PvtImageProcessor,PvtModel:()=>n.PvtModel,PvtPreTrainedModel:()=>n.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>f.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>x.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>a.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>o.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>n.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>y.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>n.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>x.Qwen2VLProcessor,Qwen3ForCausalLM:()=>n.Qwen3ForCausalLM,Qwen3Model:()=>n.Qwen3Model,Qwen3PreTrainedModel:()=>n.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>n.RFDetrForObjectDetection,RFDetrModel:()=>n.RFDetrModel,RFDetrObjectDetectionOutput:()=>n.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>n.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>y.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>n.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>n.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>n.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>n.RTDetrV2PreTrainedModel,RawAudio:()=>u.RawAudio,RawImage:()=>d.RawImage,RawVideo:()=>c.RawVideo,RawVideoFrame:()=>c.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>k.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>o.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>o.RobertaTokenizer,SamImageProcessor:()=>y.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>x.SamProcessor,SapiensForDepthEstimation:()=>n.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>n.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>n.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>n.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>f.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>y.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>y.SegformerImageProcessor,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>y.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>o.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SmolLM3ForCausalLM:()=>n.SmolLM3ForCausalLM,SmolLM3Model:()=>n.SmolLM3Model,SmolLM3PreTrainedModel:()=>n.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>n.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>y.SmolVLMImageProcessor,SmolVLMProcessor:()=>x.SmolVLMProcessor,SnacDecoderModel:()=>n.SnacDecoderModel,SnacEncoderModel:()=>n.SnacEncoderModel,SnacFeatureExtractor:()=>f.SnacFeatureExtractor,SnacModel:()=>n.SnacModel,SnacPreTrainedModel:()=>n.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>f.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>x.SpeechT5Processor,SpeechT5Tokenizer:()=>o.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>o.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>T.StoppingCriteria,StoppingCriteriaList:()=>T.StoppingCriteriaList,StyleTextToSpeech2Model:()=>n.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>n.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>a.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>k.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>y.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinForSemanticSegmentation:()=>n.SwinForSemanticSegmentation,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>o.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>k.TemperatureLogitsWarper,Tensor:()=>p.Tensor,Text2TextGenerationPipeline:()=>a.Text2TextGenerationPipeline,TextClassificationPipeline:()=>a.TextClassificationPipeline,TextGenerationPipeline:()=>a.TextGenerationPipeline,TextStreamer:()=>M.TextStreamer,TextToAudioPipeline:()=>a.TextToAudioPipeline,TokenClassificationPipeline:()=>a.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>o.TokenizerModel,TopKLogitsWarper:()=>k.TopKLogitsWarper,TopPLogitsWarper:()=>k.TopPLogitsWarper,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>a.TranslationPipeline,UltravoxModel:()=>n.UltravoxModel,UltravoxPreTrainedModel:()=>n.UltravoxPreTrainedModel,UltravoxProcessor:()=>x.UltravoxProcessor,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>x.VLChatProcessor,VLMImageProcessor:()=>y.VLMImageProcessor,VaultGemmaForCausalLM:()=>n.VaultGemmaForCausalLM,VaultGemmaModel:()=>n.VaultGemmaModel,VaultGemmaPreTrainedModel:()=>n.VaultGemmaPreTrainedModel,ViTFeatureExtractor:()=>y.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>y.ViTImageProcessor,ViTMAEModel:()=>n.ViTMAEModel,ViTMAEPreTrainedModel:()=>n.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>n.ViTMSNForImageClassification,ViTMSNModel:()=>n.ViTMSNModel,ViTMSNPreTrainedModel:()=>n.ViTMSNPreTrainedModel,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>y.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>n.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>y.VitPoseImageProcessor,VitPosePreTrainedModel:()=>n.VitPosePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>o.VitsTokenizer,VoxtralForConditionalGeneration:()=>n.VoxtralForConditionalGeneration,VoxtralProcessor:()=>x.VoxtralProcessor,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>o.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>f.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>x.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>x.WhisperProcessor,WhisperTextStreamer:()=>M.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>k.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>o.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>o.XLMRobertaTokenizer,XLMTokenizer:()=>o.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>y.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosImageProcessor:()=>y.YolosImageProcessor,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>a.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>a.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>a.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>a.ZeroShotObjectDetectionPipeline,bankers_round:()=>h.bankers_round,cat:()=>p.cat,cos_sim:()=>h.cos_sim,dot:()=>h.dot,dynamic_time_warping:()=>h.dynamic_time_warping,env:()=>s.env,full:()=>p.full,full_like:()=>p.full_like,getCacheShapes:()=>l.getCacheShapes,hamming:()=>u.hamming,hanning:()=>u.hanning,interpolate:()=>p.interpolate,interpolate_4d:()=>p.interpolate_4d,interpolate_data:()=>h.interpolate_data,is_chinese_char:()=>o.is_chinese_char,layer_norm:()=>p.layer_norm,load_image:()=>d.load_image,load_video:()=>c.load_video,log_softmax:()=>h.log_softmax,magnitude:()=>h.magnitude,matmul:()=>p.matmul,max:()=>h.max,mean:()=>p.mean,mean_pooling:()=>p.mean_pooling,medianFilter:()=>h.medianFilter,mel_filter_bank:()=>u.mel_filter_bank,min:()=>h.min,ones:()=>p.ones,ones_like:()=>p.ones_like,permute:()=>p.permute,permute_data:()=>h.permute_data,pipeline:()=>a.pipeline,quantize_embeddings:()=>p.quantize_embeddings,rand:()=>p.rand,read_audio:()=>u.read_audio,rfft:()=>p.rfft,round:()=>h.round,slice:()=>p.slice,softmax:()=>h.softmax,spectrogram:()=>u.spectrogram,stack:()=>p.stack,std_mean:()=>p.std_mean,topk:()=>p.topk,window_function:()=>u.window_function,zeros:()=>p.zeros,zeros_like:()=>p.zeros_like}),s=oY("./src/env.js"),a=oY("./src/pipelines.js"),n=oY("./src/models.js"),o=oY("./src/tokenizers.js"),l=oY("./src/configs.js"),u=oY("./src/utils/audio.js"),d=oY("./src/utils/image.js"),c=oY("./src/utils/video.js"),p=oY("./src/utils/tensor.js"),h=oY("./src/utils/maths.js"),m=oY("./src/base/feature_extraction_utils.js"),f=oY("./src/models/feature_extractors.js"),g=oY("./src/models/auto/feature_extraction_auto.js"),_=oY("./src/base/image_processors_utils.js"),y=oY("./src/models/image_processors.js"),b=oY("./src/models/auto/image_processing_auto.js"),w=oY("./src/base/processing_utils.js"),x=oY("./src/models/processors.js"),v=oY("./src/models/auto/processing_auto.js"),M=oY("./src/generation/streamers.js"),T=oY("./src/generation/stopping_criteria.js"),k=oY("./src/generation/logits_process.js"),oZ.ASTFeatureExtractor,oZ.ASTForAudioClassification,oZ.ASTModel,oZ.ASTPreTrainedModel,oZ.AlbertForMaskedLM,oZ.AlbertForQuestionAnswering,oZ.AlbertForSequenceClassification,oZ.AlbertModel,oZ.AlbertPreTrainedModel,oZ.AlbertTokenizer,oZ.ArceeForCausalLM,oZ.ArceeModel,oZ.ArceePreTrainedModel,oZ.AudioClassificationPipeline,oZ.AutoConfig,oZ.AutoFeatureExtractor,oZ.AutoImageProcessor,oZ.AutoModel,oZ.AutoModelForAudioClassification,oZ.AutoModelForAudioFrameClassification,oZ.AutoModelForAudioTextToText,oZ.AutoModelForCTC,oZ.AutoModelForCausalLM,oZ.AutoModelForDepthEstimation,oZ.AutoModelForDocumentQuestionAnswering,oZ.AutoModelForImageClassification,oZ.AutoModelForImageFeatureExtraction,oZ.AutoModelForImageMatting,oZ.AutoModelForImageSegmentation,oZ.AutoModelForImageTextToText,oZ.AutoModelForImageToImage,oZ.AutoModelForMaskGeneration,oZ.AutoModelForMaskedLM,oZ.AutoModelForNormalEstimation,oZ.AutoModelForObjectDetection,oZ.AutoModelForPoseEstimation,oZ.AutoModelForQuestionAnswering,oZ.AutoModelForSemanticSegmentation,oZ.AutoModelForSeq2SeqLM,oZ.AutoModelForSequenceClassification,oZ.AutoModelForSpeechSeq2Seq,oZ.AutoModelForTextToSpectrogram,oZ.AutoModelForTextToWaveform,oZ.AutoModelForTokenClassification,oZ.AutoModelForUniversalSegmentation,oZ.AutoModelForVision2Seq,oZ.AutoModelForXVector,oZ.AutoModelForZeroShotObjectDetection,oZ.AutoProcessor,oZ.AutoTokenizer,oZ.AutomaticSpeechRecognitionPipeline,oZ.BackgroundRemovalPipeline,oZ.BartForConditionalGeneration,oZ.BartForSequenceClassification,oZ.BartModel,oZ.BartPretrainedModel,oZ.BartTokenizer,oZ.BaseModelOutput,oZ.BaseStreamer,oZ.BeitFeatureExtractor,oZ.BeitForImageClassification,oZ.BeitModel,oZ.BeitPreTrainedModel,oZ.BertForMaskedLM,oZ.BertForQuestionAnswering,oZ.BertForSequenceClassification,oZ.BertForTokenClassification,oZ.BertModel,oZ.BertPreTrainedModel,oZ.BertTokenizer,oZ.BitImageProcessor,oZ.BlenderbotForConditionalGeneration,oZ.BlenderbotModel,oZ.BlenderbotPreTrainedModel,oZ.BlenderbotSmallForConditionalGeneration,oZ.BlenderbotSmallModel,oZ.BlenderbotSmallPreTrainedModel,oZ.BlenderbotSmallTokenizer,oZ.BlenderbotTokenizer,oZ.BloomForCausalLM,oZ.BloomModel,oZ.BloomPreTrainedModel,oZ.BloomTokenizer,oZ.CLIPFeatureExtractor,oZ.CLIPImageProcessor,oZ.CLIPModel,oZ.CLIPPreTrainedModel,oZ.CLIPSegForImageSegmentation,oZ.CLIPSegModel,oZ.CLIPSegPreTrainedModel,oZ.CLIPTextModel,oZ.CLIPTextModelWithProjection,oZ.CLIPTokenizer,oZ.CLIPVisionModel,oZ.CLIPVisionModelWithProjection,oZ.CamembertForMaskedLM,oZ.CamembertForQuestionAnswering,oZ.CamembertForSequenceClassification,oZ.CamembertForTokenClassification,oZ.CamembertModel,oZ.CamembertPreTrainedModel,oZ.CamembertTokenizer,oZ.CausalLMOutput,oZ.CausalLMOutputWithPast,oZ.ChineseCLIPFeatureExtractor,oZ.ChineseCLIPModel,oZ.ChineseCLIPPreTrainedModel,oZ.ClapAudioModelWithProjection,oZ.ClapFeatureExtractor,oZ.ClapModel,oZ.ClapPreTrainedModel,oZ.ClapTextModelWithProjection,oZ.ClassifierFreeGuidanceLogitsProcessor,oZ.CodeGenForCausalLM,oZ.CodeGenModel,oZ.CodeGenPreTrainedModel,oZ.CodeGenTokenizer,oZ.CodeLlamaTokenizer,oZ.CohereForCausalLM,oZ.CohereModel,oZ.CoherePreTrainedModel,oZ.CohereTokenizer,oZ.ConvBertForMaskedLM,oZ.ConvBertForQuestionAnswering,oZ.ConvBertForSequenceClassification,oZ.ConvBertForTokenClassification,oZ.ConvBertModel,oZ.ConvBertPreTrainedModel,oZ.ConvBertTokenizer,oZ.ConvNextFeatureExtractor,oZ.ConvNextForImageClassification,oZ.ConvNextImageProcessor,oZ.ConvNextModel,oZ.ConvNextPreTrainedModel,oZ.ConvNextV2ForImageClassification,oZ.ConvNextV2Model,oZ.ConvNextV2PreTrainedModel,oZ.DFineForObjectDetection,oZ.DFineModel,oZ.DFinePreTrainedModel,oZ.DINOv3ConvNextModel,oZ.DINOv3ConvNextPreTrainedModel,oZ.DINOv3ViTImageProcessor,oZ.DINOv3ViTModel,oZ.DINOv3ViTPreTrainedModel,oZ.DPTFeatureExtractor,oZ.DPTForDepthEstimation,oZ.DPTImageProcessor,oZ.DPTModel,oZ.DPTPreTrainedModel,oZ.DacDecoderModel,oZ.DacDecoderOutput,oZ.DacEncoderModel,oZ.DacEncoderOutput,oZ.DacFeatureExtractor,oZ.DacModel,oZ.DacPreTrainedModel,oZ.DataTypeMap,oZ.DebertaForMaskedLM,oZ.DebertaForQuestionAnswering,oZ.DebertaForSequenceClassification,oZ.DebertaForTokenClassification,oZ.DebertaModel,oZ.DebertaPreTrainedModel,oZ.DebertaTokenizer,oZ.DebertaV2ForMaskedLM,oZ.DebertaV2ForQuestionAnswering,oZ.DebertaV2ForSequenceClassification,oZ.DebertaV2ForTokenClassification,oZ.DebertaV2Model,oZ.DebertaV2PreTrainedModel,oZ.DebertaV2Tokenizer,oZ.DecisionTransformerModel,oZ.DecisionTransformerPreTrainedModel,oZ.DeiTFeatureExtractor,oZ.DeiTForImageClassification,oZ.DeiTImageProcessor,oZ.DeiTModel,oZ.DeiTPreTrainedModel,oZ.DepthAnythingForDepthEstimation,oZ.DepthAnythingPreTrainedModel,oZ.DepthEstimationPipeline,oZ.DepthProForDepthEstimation,oZ.DepthProPreTrainedModel,oZ.DetrFeatureExtractor,oZ.DetrForObjectDetection,oZ.DetrForSegmentation,oZ.DetrImageProcessor,oZ.DetrModel,oZ.DetrObjectDetectionOutput,oZ.DetrPreTrainedModel,oZ.DetrSegmentationOutput,oZ.Dinov2ForImageClassification,oZ.Dinov2Model,oZ.Dinov2PreTrainedModel,oZ.Dinov2WithRegistersForImageClassification,oZ.Dinov2WithRegistersModel,oZ.Dinov2WithRegistersPreTrainedModel,oZ.DistilBertForMaskedLM,oZ.DistilBertForQuestionAnswering,oZ.DistilBertForSequenceClassification,oZ.DistilBertForTokenClassification,oZ.DistilBertModel,oZ.DistilBertPreTrainedModel,oZ.DistilBertTokenizer,oZ.DocumentQuestionAnsweringPipeline,oZ.DonutFeatureExtractor,oZ.DonutImageProcessor,oZ.DonutSwinModel,oZ.DonutSwinPreTrainedModel,oZ.EfficientNetForImageClassification,oZ.EfficientNetImageProcessor,oZ.EfficientNetModel,oZ.EfficientNetPreTrainedModel,oZ.ElectraForMaskedLM,oZ.ElectraForQuestionAnswering,oZ.ElectraForSequenceClassification,oZ.ElectraForTokenClassification,oZ.ElectraModel,oZ.ElectraPreTrainedModel,oZ.ElectraTokenizer,oZ.EncodecFeatureExtractor,oZ.EosTokenCriteria,oZ.Ernie4_5_ForCausalLM,oZ.Ernie4_5_Model,oZ.Ernie4_5_PretrainedModel,oZ.Ernie4_5_Tokenizer,oZ.EsmForMaskedLM,oZ.EsmForSequenceClassification,oZ.EsmForTokenClassification,oZ.EsmModel,oZ.EsmPreTrainedModel,oZ.EsmTokenizer,oZ.ExaoneForCausalLM,oZ.ExaoneModel,oZ.ExaonePreTrainedModel,oZ.FFT,oZ.FalconForCausalLM,oZ.FalconModel,oZ.FalconPreTrainedModel,oZ.FalconTokenizer,oZ.FastViTForImageClassification,oZ.FastViTModel,oZ.FastViTPreTrainedModel,oZ.FeatureExtractionPipeline,oZ.FeatureExtractor,oZ.FillMaskPipeline,oZ.Florence2ForConditionalGeneration,oZ.Florence2PreTrainedModel,oZ.Florence2Processor,oZ.ForcedBOSTokenLogitsProcessor,oZ.ForcedEOSTokenLogitsProcessor,oZ.GLPNFeatureExtractor,oZ.GLPNForDepthEstimation,oZ.GLPNModel,oZ.GLPNPreTrainedModel,oZ.GPT2LMHeadModel,oZ.GPT2Model,oZ.GPT2PreTrainedModel,oZ.GPT2Tokenizer,oZ.GPTBigCodeForCausalLM,oZ.GPTBigCodeModel,oZ.GPTBigCodePreTrainedModel,oZ.GPTJForCausalLM,oZ.GPTJModel,oZ.GPTJPreTrainedModel,oZ.GPTNeoForCausalLM,oZ.GPTNeoModel,oZ.GPTNeoPreTrainedModel,oZ.GPTNeoXForCausalLM,oZ.GPTNeoXModel,oZ.GPTNeoXPreTrainedModel,oZ.GPTNeoXTokenizer,oZ.Gemma2ForCausalLM,oZ.Gemma2Model,oZ.Gemma2PreTrainedModel,oZ.Gemma3ForCausalLM,oZ.Gemma3Model,oZ.Gemma3PreTrainedModel,oZ.Gemma3nAudioFeatureExtractor,oZ.Gemma3nForConditionalGeneration,oZ.Gemma3nPreTrainedModel,oZ.Gemma3nProcessor,oZ.GemmaForCausalLM,oZ.GemmaModel,oZ.GemmaPreTrainedModel,oZ.GemmaTokenizer,oZ.GlmForCausalLM,oZ.GlmModel,oZ.GlmPreTrainedModel,oZ.GraniteForCausalLM,oZ.GraniteModel,oZ.GraniteMoeHybridForCausalLM,oZ.GraniteMoeHybridModel,oZ.GraniteMoeHybridPreTrainedModel,oZ.GranitePreTrainedModel,oZ.Grok1Tokenizer,oZ.GroundingDinoForObjectDetection,oZ.GroundingDinoImageProcessor,oZ.GroundingDinoPreTrainedModel,oZ.GroundingDinoProcessor,oZ.GroupViTModel,oZ.GroupViTPreTrainedModel,oZ.HeliumForCausalLM,oZ.HeliumModel,oZ.HeliumPreTrainedModel,oZ.HerbertTokenizer,oZ.HieraForImageClassification,oZ.HieraModel,oZ.HieraPreTrainedModel,oZ.HubertForCTC,oZ.HubertForSequenceClassification,oZ.HubertModel,oZ.HubertPreTrainedModel,oZ.IJepaForImageClassification,oZ.IJepaModel,oZ.IJepaPreTrainedModel,oZ.Idefics3ForConditionalGeneration,oZ.Idefics3ImageProcessor,oZ.Idefics3PreTrainedModel,oZ.Idefics3Processor,oZ.ImageClassificationPipeline,oZ.ImageFeatureExtractionPipeline,oZ.ImageFeatureExtractor,oZ.ImageMattingOutput,oZ.ImageProcessor,oZ.ImageSegmentationPipeline,oZ.ImageToImagePipeline,oZ.ImageToTextPipeline,oZ.InterruptableStoppingCriteria,oZ.JAISLMHeadModel,oZ.JAISModel,oZ.JAISPreTrainedModel,oZ.JinaCLIPImageProcessor,oZ.JinaCLIPModel,oZ.JinaCLIPPreTrainedModel,oZ.JinaCLIPProcessor,oZ.JinaCLIPTextModel,oZ.JinaCLIPVisionModel,oZ.Lfm2ForCausalLM,oZ.Lfm2Model,oZ.Lfm2PreTrainedModel,oZ.LiteWhisperForConditionalGeneration,oZ.Llama4ForCausalLM,oZ.Llama4PreTrainedModel,oZ.LlamaForCausalLM,oZ.LlamaModel,oZ.LlamaPreTrainedModel,oZ.LlamaTokenizer,oZ.LlavaForConditionalGeneration,oZ.LlavaOnevisionForConditionalGeneration,oZ.LlavaOnevisionImageProcessor,oZ.LlavaPreTrainedModel,oZ.LlavaProcessor,oZ.LlavaQwen2ForCausalLM,oZ.LogitsProcessor,oZ.LogitsProcessorList,oZ.LogitsWarper,oZ.LongT5ForConditionalGeneration,oZ.LongT5Model,oZ.LongT5PreTrainedModel,oZ.M2M100ForConditionalGeneration,oZ.M2M100Model,oZ.M2M100PreTrainedModel,oZ.M2M100Tokenizer,oZ.MBart50Tokenizer,oZ.MBartForCausalLM,oZ.MBartForConditionalGeneration,oZ.MBartForSequenceClassification,oZ.MBartModel,oZ.MBartPreTrainedModel,oZ.MBartTokenizer,oZ.MPNetForMaskedLM,oZ.MPNetForQuestionAnswering,oZ.MPNetForSequenceClassification,oZ.MPNetForTokenClassification,oZ.MPNetModel,oZ.MPNetPreTrainedModel,oZ.MPNetTokenizer,oZ.MT5ForConditionalGeneration,oZ.MT5Model,oZ.MT5PreTrainedModel,oZ.MarianMTModel,oZ.MarianModel,oZ.MarianPreTrainedModel,oZ.MarianTokenizer,oZ.Mask2FormerImageProcessor,oZ.MaskFormerFeatureExtractor,oZ.MaskFormerForInstanceSegmentation,oZ.MaskFormerImageProcessor,oZ.MaskFormerModel,oZ.MaskFormerPreTrainedModel,oZ.MaskedLMOutput,oZ.MaxLengthCriteria,oZ.Metric3DForDepthEstimation,oZ.Metric3DPreTrainedModel,oZ.Metric3Dv2ForDepthEstimation,oZ.Metric3Dv2PreTrainedModel,oZ.MgpstrForSceneTextRecognition,oZ.MgpstrModelOutput,oZ.MgpstrPreTrainedModel,oZ.MgpstrProcessor,oZ.MgpstrTokenizer,oZ.MimiDecoderModel,oZ.MimiDecoderOutput,oZ.MimiEncoderModel,oZ.MimiEncoderOutput,oZ.MimiModel,oZ.MimiPreTrainedModel,oZ.MinLengthLogitsProcessor,oZ.MinNewTokensLengthLogitsProcessor,oZ.MistralForCausalLM,oZ.MistralModel,oZ.MistralPreTrainedModel,oZ.MobileBertForMaskedLM,oZ.MobileBertForQuestionAnswering,oZ.MobileBertForSequenceClassification,oZ.MobileBertModel,oZ.MobileBertPreTrainedModel,oZ.MobileBertTokenizer,oZ.MobileLLMForCausalLM,oZ.MobileLLMModel,oZ.MobileLLMPreTrainedModel,oZ.MobileNetV1FeatureExtractor,oZ.MobileNetV1ForImageClassification,oZ.MobileNetV1ForSemanticSegmentation,oZ.MobileNetV1ImageProcessor,oZ.MobileNetV1Model,oZ.MobileNetV1PreTrainedModel,oZ.MobileNetV2FeatureExtractor,oZ.MobileNetV2ForImageClassification,oZ.MobileNetV2ForSemanticSegmentation,oZ.MobileNetV2ImageProcessor,oZ.MobileNetV2Model,oZ.MobileNetV2PreTrainedModel,oZ.MobileNetV3FeatureExtractor,oZ.MobileNetV3ForImageClassification,oZ.MobileNetV3ForSemanticSegmentation,oZ.MobileNetV3ImageProcessor,oZ.MobileNetV3Model,oZ.MobileNetV3PreTrainedModel,oZ.MobileNetV4FeatureExtractor,oZ.MobileNetV4ForImageClassification,oZ.MobileNetV4ForSemanticSegmentation,oZ.MobileNetV4ImageProcessor,oZ.MobileNetV4Model,oZ.MobileNetV4PreTrainedModel,oZ.MobileViTFeatureExtractor,oZ.MobileViTForImageClassification,oZ.MobileViTImageProcessor,oZ.MobileViTModel,oZ.MobileViTPreTrainedModel,oZ.MobileViTV2ForImageClassification,oZ.MobileViTV2Model,oZ.MobileViTV2PreTrainedModel,oZ.ModelOutput,oZ.ModernBertDecoderForCausalLM,oZ.ModernBertDecoderModel,oZ.ModernBertDecoderPreTrainedModel,oZ.ModernBertForMaskedLM,oZ.ModernBertForSequenceClassification,oZ.ModernBertForTokenClassification,oZ.ModernBertModel,oZ.ModernBertPreTrainedModel,oZ.Moondream1ForConditionalGeneration,oZ.MoonshineFeatureExtractor,oZ.MoonshineForConditionalGeneration,oZ.MoonshineModel,oZ.MoonshinePreTrainedModel,oZ.MoonshineProcessor,oZ.MptForCausalLM,oZ.MptModel,oZ.MptPreTrainedModel,oZ.MultiModalityCausalLM,oZ.MultiModalityPreTrainedModel,oZ.MusicgenForCausalLM,oZ.MusicgenForConditionalGeneration,oZ.MusicgenModel,oZ.MusicgenPreTrainedModel,oZ.NanoChatForCausalLM,oZ.NanoChatModel,oZ.NanoChatPreTrainedModel,oZ.NeoBertForMaskedLM,oZ.NeoBertForQuestionAnswering,oZ.NeoBertForSequenceClassification,oZ.NeoBertForTokenClassification,oZ.NeoBertModel,oZ.NeoBertPreTrainedModel,oZ.NllbTokenizer,oZ.NoBadWordsLogitsProcessor,oZ.NoRepeatNGramLogitsProcessor,oZ.NomicBertModel,oZ.NomicBertPreTrainedModel,oZ.NougatImageProcessor,oZ.NougatTokenizer,oZ.OPTForCausalLM,oZ.OPTModel,oZ.OPTPreTrainedModel,oZ.ObjectDetectionPipeline,oZ.Olmo2ForCausalLM,oZ.Olmo2Model,oZ.Olmo2PreTrainedModel,oZ.OlmoForCausalLM,oZ.OlmoModel,oZ.OlmoPreTrainedModel,oZ.OpenELMForCausalLM,oZ.OpenELMModel,oZ.OpenELMPreTrainedModel,oZ.OwlViTFeatureExtractor,oZ.OwlViTForObjectDetection,oZ.OwlViTImageProcessor,oZ.OwlViTModel,oZ.OwlViTPreTrainedModel,oZ.OwlViTProcessor,oZ.Owlv2ForObjectDetection,oZ.Owlv2ImageProcessor,oZ.Owlv2Model,oZ.Owlv2PreTrainedModel,oZ.PaliGemmaForConditionalGeneration,oZ.PaliGemmaPreTrainedModel,oZ.PaliGemmaProcessor,oZ.ParakeetFeatureExtractor,oZ.ParakeetForCTC,oZ.ParakeetPreTrainedModel,oZ.PatchTSMixerForPrediction,oZ.PatchTSMixerModel,oZ.PatchTSMixerPreTrainedModel,oZ.PatchTSTForPrediction,oZ.PatchTSTModel,oZ.PatchTSTPreTrainedModel,oZ.Phi3ForCausalLM,oZ.Phi3Model,oZ.Phi3PreTrainedModel,oZ.Phi3VForCausalLM,oZ.Phi3VImageProcessor,oZ.Phi3VPreTrainedModel,oZ.Phi3VProcessor,oZ.PhiForCausalLM,oZ.PhiModel,oZ.PhiPreTrainedModel,oZ.Pipeline,oZ.PreTrainedModel,oZ.PreTrainedTokenizer,oZ.PretrainedConfig,oZ.PretrainedMixin,oZ.Processor,oZ.PvtForImageClassification,oZ.PvtImageProcessor,oZ.PvtModel,oZ.PvtPreTrainedModel,oZ.PyAnnoteFeatureExtractor,oZ.PyAnnoteForAudioFrameClassification,oZ.PyAnnoteModel,oZ.PyAnnotePreTrainedModel,oZ.PyAnnoteProcessor,oZ.QuestionAnsweringModelOutput,oZ.QuestionAnsweringPipeline,oZ.Qwen2ForCausalLM,oZ.Qwen2Model,oZ.Qwen2PreTrainedModel,oZ.Qwen2Tokenizer,oZ.Qwen2VLForConditionalGeneration,oZ.Qwen2VLImageProcessor,oZ.Qwen2VLPreTrainedModel,oZ.Qwen2VLProcessor,oZ.Qwen3ForCausalLM,oZ.Qwen3Model,oZ.Qwen3PreTrainedModel,oZ.RFDetrForObjectDetection,oZ.RFDetrModel,oZ.RFDetrObjectDetectionOutput,oZ.RFDetrPreTrainedModel,oZ.RTDetrForObjectDetection,oZ.RTDetrImageProcessor,oZ.RTDetrModel,oZ.RTDetrObjectDetectionOutput,oZ.RTDetrPreTrainedModel,oZ.RTDetrV2ForObjectDetection,oZ.RTDetrV2Model,oZ.RTDetrV2ObjectDetectionOutput,oZ.RTDetrV2PreTrainedModel,oZ.RawAudio,oZ.RawImage,oZ.RawVideo,oZ.RawVideoFrame,oZ.RepetitionPenaltyLogitsProcessor,oZ.ResNetForImageClassification,oZ.ResNetModel,oZ.ResNetPreTrainedModel,oZ.RoFormerForMaskedLM,oZ.RoFormerForQuestionAnswering,oZ.RoFormerForSequenceClassification,oZ.RoFormerForTokenClassification,oZ.RoFormerModel,oZ.RoFormerPreTrainedModel,oZ.RoFormerTokenizer,oZ.RobertaForMaskedLM,oZ.RobertaForQuestionAnswering,oZ.RobertaForSequenceClassification,oZ.RobertaForTokenClassification,oZ.RobertaModel,oZ.RobertaPreTrainedModel,oZ.RobertaTokenizer,oZ.SamImageProcessor,oZ.SamImageSegmentationOutput,oZ.SamModel,oZ.SamPreTrainedModel,oZ.SamProcessor,oZ.SapiensForDepthEstimation,oZ.SapiensForNormalEstimation,oZ.SapiensForSemanticSegmentation,oZ.SapiensPreTrainedModel,oZ.SeamlessM4TFeatureExtractor,oZ.SegformerFeatureExtractor,oZ.SegformerForImageClassification,oZ.SegformerForSemanticSegmentation,oZ.SegformerImageProcessor,oZ.SegformerModel,oZ.SegformerPreTrainedModel,oZ.Seq2SeqLMOutput,oZ.SequenceClassifierOutput,oZ.SiglipImageProcessor,oZ.SiglipModel,oZ.SiglipPreTrainedModel,oZ.SiglipTextModel,oZ.SiglipTokenizer,oZ.SiglipVisionModel,oZ.SmolLM3ForCausalLM,oZ.SmolLM3Model,oZ.SmolLM3PreTrainedModel,oZ.SmolVLMForConditionalGeneration,oZ.SmolVLMImageProcessor,oZ.SmolVLMProcessor,oZ.SnacDecoderModel,oZ.SnacEncoderModel,oZ.SnacFeatureExtractor,oZ.SnacModel,oZ.SnacPreTrainedModel,oZ.SpeechT5FeatureExtractor,oZ.SpeechT5ForSpeechToText,oZ.SpeechT5ForTextToSpeech,oZ.SpeechT5HifiGan,oZ.SpeechT5Model,oZ.SpeechT5PreTrainedModel,oZ.SpeechT5Processor,oZ.SpeechT5Tokenizer,oZ.SqueezeBertForMaskedLM,oZ.SqueezeBertForQuestionAnswering,oZ.SqueezeBertForSequenceClassification,oZ.SqueezeBertModel,oZ.SqueezeBertPreTrainedModel,oZ.SqueezeBertTokenizer,oZ.StableLmForCausalLM,oZ.StableLmModel,oZ.StableLmPreTrainedModel,oZ.Starcoder2ForCausalLM,oZ.Starcoder2Model,oZ.Starcoder2PreTrainedModel,oZ.StoppingCriteria,oZ.StoppingCriteriaList,oZ.StyleTextToSpeech2Model,oZ.StyleTextToSpeech2PreTrainedModel,oZ.SummarizationPipeline,oZ.SuppressTokensAtBeginLogitsProcessor,oZ.Swin2SRForImageSuperResolution,oZ.Swin2SRImageProcessor,oZ.Swin2SRModel,oZ.Swin2SRPreTrainedModel,oZ.SwinForImageClassification,oZ.SwinForSemanticSegmentation,oZ.SwinModel,oZ.SwinPreTrainedModel,oZ.T5ForConditionalGeneration,oZ.T5Model,oZ.T5PreTrainedModel,oZ.T5Tokenizer,oZ.TableTransformerForObjectDetection,oZ.TableTransformerModel,oZ.TableTransformerObjectDetectionOutput,oZ.TableTransformerPreTrainedModel,oZ.TemperatureLogitsWarper,oZ.Tensor,oZ.Text2TextGenerationPipeline,oZ.TextClassificationPipeline,oZ.TextGenerationPipeline,oZ.TextStreamer,oZ.TextToAudioPipeline,oZ.TokenClassificationPipeline,oZ.TokenClassifierOutput,oZ.TokenizerModel,oZ.TopKLogitsWarper,oZ.TopPLogitsWarper,oZ.TrOCRForCausalLM,oZ.TrOCRPreTrainedModel,oZ.TranslationPipeline,oZ.UltravoxModel,oZ.UltravoxPreTrainedModel,oZ.UltravoxProcessor,oZ.UniSpeechForCTC,oZ.UniSpeechForSequenceClassification,oZ.UniSpeechModel,oZ.UniSpeechPreTrainedModel,oZ.UniSpeechSatForAudioFrameClassification,oZ.UniSpeechSatForCTC,oZ.UniSpeechSatForSequenceClassification,oZ.UniSpeechSatModel,oZ.UniSpeechSatPreTrainedModel,oZ.VLChatProcessor,oZ.VLMImageProcessor,oZ.VaultGemmaForCausalLM,oZ.VaultGemmaModel,oZ.VaultGemmaPreTrainedModel,oZ.ViTFeatureExtractor,oZ.ViTForImageClassification,oZ.ViTImageProcessor,oZ.ViTMAEModel,oZ.ViTMAEPreTrainedModel,oZ.ViTMSNForImageClassification,oZ.ViTMSNModel,oZ.ViTMSNPreTrainedModel,oZ.ViTModel,oZ.ViTPreTrainedModel,oZ.VisionEncoderDecoderModel,oZ.VitMatteForImageMatting,oZ.VitMatteImageProcessor,oZ.VitMattePreTrainedModel,oZ.VitPoseForPoseEstimation,oZ.VitPoseImageProcessor,oZ.VitPosePreTrainedModel,oZ.VitsModel,oZ.VitsModelOutput,oZ.VitsPreTrainedModel,oZ.VitsTokenizer,oZ.VoxtralForConditionalGeneration,oZ.VoxtralProcessor,oZ.Wav2Vec2BertForCTC,oZ.Wav2Vec2BertForSequenceClassification,oZ.Wav2Vec2BertModel,oZ.Wav2Vec2BertPreTrainedModel,oZ.Wav2Vec2CTCTokenizer,oZ.Wav2Vec2FeatureExtractor,oZ.Wav2Vec2ForAudioFrameClassification,oZ.Wav2Vec2ForCTC,oZ.Wav2Vec2ForSequenceClassification,oZ.Wav2Vec2Model,oZ.Wav2Vec2PreTrainedModel,oZ.Wav2Vec2Processor,oZ.Wav2Vec2ProcessorWithLM,oZ.WavLMForAudioFrameClassification,oZ.WavLMForCTC,oZ.WavLMForSequenceClassification,oZ.WavLMForXVector,oZ.WavLMModel,oZ.WavLMPreTrainedModel,oZ.WeSpeakerFeatureExtractor,oZ.WeSpeakerResNetModel,oZ.WeSpeakerResNetPreTrainedModel,oZ.WhisperFeatureExtractor,oZ.WhisperForConditionalGeneration,oZ.WhisperModel,oZ.WhisperPreTrainedModel,oZ.WhisperProcessor,oZ.WhisperTextStreamer,oZ.WhisperTimeStampLogitsProcessor,oZ.WhisperTokenizer,oZ.XLMForQuestionAnswering,oZ.XLMForSequenceClassification,oZ.XLMForTokenClassification,oZ.XLMModel,oZ.XLMPreTrainedModel,oZ.XLMRobertaForMaskedLM,oZ.XLMRobertaForQuestionAnswering,oZ.XLMRobertaForSequenceClassification,oZ.XLMRobertaForTokenClassification,oZ.XLMRobertaModel,oZ.XLMRobertaPreTrainedModel,oZ.XLMRobertaTokenizer,oZ.XLMTokenizer,oZ.XLMWithLMHeadModel,oZ.XVectorOutput,oZ.YolosFeatureExtractor,oZ.YolosForObjectDetection,oZ.YolosImageProcessor,oZ.YolosModel,oZ.YolosObjectDetectionOutput,oZ.YolosPreTrainedModel,oZ.ZeroShotAudioClassificationPipeline,oZ.ZeroShotClassificationPipeline,oZ.ZeroShotImageClassificationPipeline,oZ.ZeroShotObjectDetectionPipeline,oZ.bankers_round,oZ.cat,oZ.cos_sim,oZ.dot,oZ.dynamic_time_warping,oZ.env,oZ.full,oZ.full_like,oZ.getCacheShapes,oZ.hamming,oZ.hanning,oZ.interpolate,oZ.interpolate_4d,oZ.interpolate_data,oZ.is_chinese_char,oZ.layer_norm,oZ.load_image,oZ.load_video,oZ.log_softmax,oZ.magnitude,oZ.matmul,oZ.max,oZ.mean,oZ.mean_pooling,oZ.medianFilter,oZ.mel_filter_bank,oZ.min,oZ.ones,oZ.ones_like,oZ.permute,oZ.permute_data;var o0=oZ.pipeline;oZ.quantize_embeddings,oZ.rand,oZ.read_audio,oZ.rfft,oZ.round,oZ.slice,oZ.softmax,oZ.spectrogram,oZ.stack,oZ.std_mean,oZ.topk,oZ.window_function,oZ.zeros,oZ.zeros_like,t.s(["default",0,()=>{let[t,r]=(0,C.useState)(""),[i,s]=(0,C.useState)(""),[a,n]=(0,C.useState)(0),[o,l]=(0,C.useState)(!1),[u,d]=(0,C.useState)(!1),[c,p]=(0,C.useState)(""),[h,m]=(0,C.useState)([]),[f,g]=(0,C.useState)(0),_=(0,C.useRef)(null),y=async()=>{try{p(t=>t+"📁 Loading IMDBDataset.csv from public folder...\n");let t=await fetch("/IMDBDataset.csv");if(!t.ok)throw Error(`Failed to load CSV file: ${t.status}`);let r=(await t.text()).split("\n").filter(t=>t.trim()),i=[];for(let t=1;t<r.length;t++){let s=r[t].trim();if(!s)continue;let a=s.match(/(".*?"|[^",]+)(?=\s*,|\s*$)/g);if(a&&a.length>=2){let t=a[0].replace(/^"|"$/g,"").trim(),r=a[1].replace(/^"|"$/g,"").toLowerCase().trim();t&&("positive"===r||"negative"===r)&&i.push({review:t,sentiment:r})}t%1e3==0&&g(Math.min(50,t/r.length*50))}m(i),p(t=>t+`✅ Successfully loaded ${i.length} records
`);let s=i.filter(t=>"positive"===t.sentiment).length,a=i.filter(t=>"negative"===t.sentiment).length;return p(t=>t+`📊 Dataset Statistics:
`+`   Positive reviews: ${s}
`+`   Negative reviews: ${a}
`+`   Total: ${i.length}
`),i}catch(t){throw p(r=>r+`❌ Error loading CSV: ${t.message}
`),t}},b=async()=>{l(!0),g(0),p("🎯 Starting model training process...\n");try{p(t=>t+"📥 Loading dataset...\n");let t=await y();g(30),p(t=>t+"🧠 Loading pre-trained DistilBERT model...\n"),_.current=await o0("text-classification","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),g(70),p(t=>t+"✅ DistilBERT model loaded successfully!\n"),p(t=>t+"⚙️ Preparing model for sentiment analysis...\n"),await new Promise(t=>setTimeout(t,2e3)),g(100),p(t=>t+"🎉 Model is ready for sentiment analysis!\n"),p(t=>t+"🧪 Testing model with sample reviews...\n");let r=t.slice(0,2);for(let t=0;t<r.length;t++){let i=r[t];try{let r=await _.current(i.review.substring(0,512)),s=r[0]?.label||"unknown";p(r=>r+`   Sample ${t+1}: "${i.review.substring(0,40)}..."
`+`   Expected: ${i.sentiment}, Predicted: ${s}
`)}catch(r){p(r=>r+`   Sample ${t+1}: Prediction error
`)}}d(!0)}catch(t){p(r=>r+`❌ Training error: ${t.message}
`),console.error("Training error:",t)}finally{l(!1)}},w=async()=>{if(!_.current||!u)return void alert("Please train the model first!");if(!t.trim())return void alert("Please enter a comment to analyze");try{p(r=>r+`🔍 Analyzing: "${t.substring(0,50)}..."
`);let r=(await _.current(t))[0];if(r){let t=r.label.toLowerCase(),i=r.score;s(t),n(i),p(r=>r+`✅ Analysis Result: ${t} (confidence: ${(100*i).toFixed(1)}%)
`)}}catch(t){console.error("Prediction error:",t),s("error"),p(r=>r+`❌ Analysis error: ${t.message}
`)}};return(0,$.jsx)("div",{className:"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4",children:(0,$.jsxs)("div",{className:"max-w-4xl mx-auto bg-white rounded-xl shadow-lg p-6 space-y-6",children:[(0,$.jsx)("h1",{className:"text-3xl font-bold text-center text-gray-800 mb-2",children:"Sentiment Analysis with DistilBERT"}),(0,$.jsx)("p",{className:"text-center text-gray-600 mb-8",children:"TensorFlow.js + DistilBERT + IMDB Dataset"}),(0,$.jsxs)("div",{className:"space-y-4",children:[(0,$.jsx)("div",{className:"flex justify-center",children:(0,$.jsx)("button",{onClick:b,disabled:o,className:`px-8 py-4 rounded-lg font-semibold text-white text-lg transition-all ${o?"bg-gray-400 cursor-not-allowed":"bg-indigo-600 hover:bg-indigo-700 shadow-md hover:shadow-lg"}`,children:o?`Training... ${f}%`:"Train Model"})}),o&&(0,$.jsx)("div",{className:"w-full bg-gray-200 rounded-full h-4",children:(0,$.jsx)("div",{className:"bg-indigo-600 h-4 rounded-full transition-all duration-300",style:{width:`${f}%`}})})]}),c&&(0,$.jsxs)("div",{className:"bg-gray-50 rounded-lg p-4 border max-h-80 overflow-y-auto",children:[(0,$.jsx)("h3",{className:"font-semibold text-gray-700 mb-2",children:"Training Log:"}),(0,$.jsx)("pre",{className:"text-sm text-gray-600 whitespace-pre-wrap",children:c})]}),(0,$.jsxs)("div",{className:"space-y-4",children:[(0,$.jsxs)("div",{className:"space-y-3",children:[(0,$.jsx)("label",{htmlFor:"comment",className:"block text-lg font-medium text-gray-700",children:"Enter your comment:"}),(0,$.jsx)("textarea",{id:"comment",value:t,onChange:t=>r(t.target.value),rows:6,className:"w-full px-4 py-3 text-black border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 resize-none transition-all",placeholder:"Type your review or comment here..."})]}),(0,$.jsx)("button",{onClick:w,disabled:!u,className:`w-full py-3 rounded-lg font-semibold text-white transition-all ${u?"bg-green-600 hover:bg-green-700 shadow-md hover:shadow-lg":"bg-gray-400 cursor-not-allowed"}`,children:"Analyze Sentiment"}),i&&(0,$.jsxs)("div",{className:`p-4 rounded-lg text-center font-bold text-lg ${"positive"===i?"bg-green-100 text-green-800 border border-green-300":"negative"===i?"bg-red-100 text-red-800 border border-red-300":"bg-yellow-100 text-yellow-800 border border-yellow-300"}`,children:[(0,$.jsxs)("div",{className:"text-xl",children:["Sentiment: ",(0,$.jsx)("span",{className:"capitalize",children:i})]}),(0,$.jsxs)("div",{className:"text-sm font-normal mt-2",children:["Confidence: ",(100*a).toFixed(1),"%"]}),(0,$.jsxs)("div",{className:"text-2xl mt-2",children:["positive"===i&&"😊 Positive","negative"===i&&"😞 Negative"]})]})]}),(0,$.jsxs)("div",{className:"text-center space-y-2",children:[(0,$.jsxs)("div",{className:"text-sm text-gray-500",children:["Model Status: "," ",(0,$.jsx)("span",{className:`font-semibold ${u?"text-green-600":"text-yellow-600"}`,children:u?"Loaded and Ready":"Not Loaded"})]}),h.length>0&&(0,$.jsxs)("div",{className:"text-sm text-gray-600",children:["Dataset: ",h.length," records loaded from IMDBDataset.csv"]})]})]})})}],31713)}]);